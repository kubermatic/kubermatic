pipeline:
  0-dep:
    commands:
    - cd api
    - dep ensure -v
    - '[[ -z "$(git diff)" ]]'
    image: metalmatze/dep:0.5.0
    pull: true
  1-gofmt:
    commands:
    - cd api
    - make gofmt
    image: golang:1.10.3
    pull: true
  2-verify-codegen:
    commands:
    - cd api
    - ./hack/verify-codegen.sh
    image: golang:1.10.3
    pull: true
  3-license-validation:
    commands:
    - cd api
    - wwhrd check -f ../allowed_licensed.yaml
    group: lint
    image: metalmatze/wwhrd:1.9
    pull: true
  3-lint:
    commands:
    - cd api
    - make lint
    group: lint
    image: quay.io/kubermatic/gometalinter:latest
    pull: true
  3-verify-addons-up-to-date:
    commands:
    - ./api/hack/verify-addon-version.sh
    group: lint
    image: docker:dind
    pull: true
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
  3-verify-swagger-spec:
    commands:
    - cd api
    - ./hack/verify-swagger.sh
    group: lint
    image: golang:1.10.3
    pull: true
  4-build:
    commands:
    - cd api
    - make build
    group: build
    image: golang:1.10.3
    pull: true
  4-test:
    commands:
    - cd api
    - make test
    group: build
    image: golang:1.10.3
    pull: true
  4-write-version:
    commands:
    - cd config
    - sed -i "s/{API_IMAGE_TAG}/${DRONE_TAG=$DRONE_COMMIT}/g" versions-values.yaml
    - sed -i "s/{CONTROLLER_IMAGE_TAG}/${DRONE_TAG=$DRONE_COMMIT}/g" versions-values.yaml
    - sed -i "s/{BARE_METAL_PROVIDER_IMAGE_TAG}/${DRONE_TAG=$DRONE_COMMIT}/g" versions-values.yaml
    - cat versions-values.yaml
    group: build
    image: ubuntu
    pull: true
  5-kubermatic-docker-ci-release-27:
    context: api
    dockerfile: api/Dockerfile
    group: push-master
    image: plugins/docker
    pull: true
    repo: kubermatic/api
    secrets:
    - docker_username
    - docker_password
    tags:
    - ${DRONE_COMMIT}
    when:
      branch: release/v2.7
  5-kubermatic-docker-master:
    context: api
    dockerfile: api/Dockerfile
    group: push-master
    image: plugins/docker
    pull: true
    repo: kubermatic/api
    secrets:
    - docker_username
    - docker_password
    tags:
    - master
    - ${DRONE_COMMIT}
    when:
      branch: master
  5-kubermatic-docker-release:
    context: api
    dockerfile: api/Dockerfile
    group: push-master
    image: plugins/docker
    pull: true
    repo: kubermatic/api
    secrets:
    - docker_username
    - docker_password
    tags:
    - ${DRONE_TAG}
    - latest
    when:
      event:
      - tag
  6-kubermatic-e2e-docker-push:
    context: api
    dockerfile: api/Dockerfile.e2e
    image: plugins/docker
    pull: true
    repo: quay.io/kubermatic/e2e
    secrets:
    - source: docker_quay_username
      target: docker_username
    - source: docker_quay_password
      target: docker_password
    tags:
    - ${DRONE_TAG}
    - latest
    when:
      event:
      - tag
  7-sync-charts:
    commands:
    - apk add --no-cache -U git bash openssh
    - git config --global user.email "dev@loodse.com"
    - git config --global user.name "drone"
    - cd api && ./hack/sync-charts.sh ${DRONE_BRANCH} ../config
    image: alpine:3.7
    pull: true
    when:
      branch:
        exclude:
        - release/v1.*
        - release/*cherry*
        include:
        - release/*
  8-deploy-dev:
    charts:
    - name: kubermatic
      namespace: kubermatic
      path: config/kubermatic/
    - name: nodeport-proxy
      namespace: nodeport-proxy
      path: config/nodeport-proxy/
    - name: minio
      namespace: minio
      path: config/minio/
    - name: kubermatic-master
      namespace: kubermatic
      path: config/kubermatic/master
    - name: nginx
      namespace: ingress-nginx
      path: config/nginx-ingress-controller/
    - name: oauth
      namespace: oauth
      path: config/oauth/
    - name: cert-manager
      namespace: cert-manager
      path: config/cert-manager/
    - name: certs
      namespace: default
      path: config/certs/
    - name: node-exporter
      namespace: monitoring
      path: config/monitoring/node-exporter/
    - name: kube-state-metrics
      namespace: monitoring
      path: config/monitoring/kube-state-metrics/
    - name: grafana
      namespace: monitoring
      path: config/monitoring/grafana/
    - name: alertmanager
      namespace: monitoring
      path: config/monitoring/alertmanager/
    - name: prometheus
      namespace: monitoring
      path: config/monitoring/prometheus/
    helm: upgrade --install --wait --timeout 300 --tiller-namespace=kubermatic-installer
      --values config/versions-values.yaml
    image: kubeciio/helm
    pull: true
    secrets:
    - source: kubeconfig_dev
      target: kubeconfig
    - source: values_dev
      target: values
    values:
    - values
    when:
      branch: master
  9-deploy-cloud-asia:
    charts:
    - name: kubermatic
      namespace: kubermatic
      path: config/kubermatic/
    - name: nodeport-proxy
      namespace: nodeport-proxy
      path: config/nodeport-proxy/
    - name: minio
      namespace: minio
      path: config/minio/
    group: deploy-cloud
    helm: upgrade --install --wait --timeout 300 --kube-context=asia-east1-a-1 --tiller-namespace=kubermatic-installer
      --values config/versions-values.yaml
    image: kubeciio/helm
    pull: true
    secrets:
    - source: kubeconfig_cloud
      target: kubeconfig
    - source: values_cloud_as
      target: values
    values:
    - values
    when:
      branch: master
  9-deploy-cloud-europe:
    charts:
    - name: kubermatic
      namespace: kubermatic
      path: config/kubermatic/
    - name: nodeport-proxy
      namespace: nodeport-proxy
      path: config/nodeport-proxy/
    - name: minio
      namespace: minio
      path: config/minio/
    - name: kubermatic-master
      namespace: kubermatic
      path: config/kubermatic/master
    - name: nginx
      namespace: ingress-nginx
      path: config/nginx-ingress-controller/
    - name: oauth
      namespace: oauth
      path: config/oauth/
    - name: cert-manager
      namespace: cert-manager
      path: config/cert-manager/
    - name: certs
      namespace: default
      path: config/certs/
    - name: node-exporter
      namespace: monitoring
      path: config/monitoring/node-exporter/
    - name: kube-state-metrics
      namespace: monitoring
      path: config/monitoring/kube-state-metrics/
    - name: grafana
      namespace: monitoring
      path: config/monitoring/grafana/
    - name: alertmanager
      namespace: monitoring
      path: config/monitoring/alertmanager/
    - name: prometheus
      namespace: monitoring
      path: config/monitoring/prometheus/
    group: deploy-cloud
    helm: upgrade --install --wait --timeout 300 --kube-context=europe-west3-c-1 --tiller-namespace=kubermatic-installer
      --values config/versions-values.yaml
    image: kubeciio/helm
    pull: true
    secrets:
    - source: kubeconfig_cloud
      target: kubeconfig
    - source: values_cloud_eu
      target: values
    values:
    - values
    when:
      branch: master
  9-deploy-cloud-us:
    charts:
    - name: kubermatic
      namespace: kubermatic
      path: config/kubermatic/
    - name: nodeport-proxy
      namespace: nodeport-proxy
      path: config/nodeport-proxy/
    - name: minio
      namespace: minio
      path: config/minio/
    group: deploy-cloud
    helm: upgrade --install --wait --timeout 300 --kube-context=us-central1-c-1 --tiller-namespace=kubermatic-installer
      --values config/versions-values.yaml
    image: kubeciio/helm
    pull: true
    secrets:
    - source: kubeconfig_cloud
      target: kubeconfig
    - source: values_cloud_us
      target: values
    values:
    - values
    when:
      branch: master
  9-deploy-run:
    charts:
    - name: kubermatic
      namespace: kubermatic
      path: config/kubermatic/
    - name: nodeport-proxy
      namespace: nodeport-proxy
      path: config/nodeport-proxy/
    - name: minio
      namespace: minio
      path: config/minio/
    - name: kubermatic-master
      namespace: kubermatic
      path: config/kubermatic/master
    - name: nginx
      namespace: ingress-nginx
      path: config/nginx-ingress-controller/
    - name: oauth
      namespace: oauth
      path: config/oauth/
    - name: cert-manager
      namespace: cert-manager
      path: config/cert-manager/
    - name: certs
      namespace: default
      path: config/certs/
    - name: node-exporter
      namespace: monitoring
      path: config/monitoring/node-exporter/
    - name: kube-state-metrics
      namespace: monitoring
      path: config/monitoring/kube-state-metrics/
    - name: grafana
      namespace: monitoring
      path: config/monitoring/grafana/
    - name: alertmanager
      namespace: monitoring
      path: config/monitoring/alertmanager/
    - name: prometheus
      namespace: monitoring
      path: config/monitoring/prometheus/
    helm: upgrade --install --wait --timeout 300 --values config/versions-values.yaml
    image: kubeciio/helm
    pull: true
    secrets:
    - source: kubeconfig_run
      target: kubeconfig
    - source: values_run
      target: values
    values:
    - values
    when:
      branch: release/v2.7
  10-e2e:
    commands:
    - echo "$KUBECONFIG" | base64 -d > /tmp/kubeconfig
    - echo "$CLUSTER_YAML" > /tmp/cluster.yaml
    - echo "$NODE_YAML" > /tmp/node.yaml
    - /kubermatic-e2e -kubeconfig=/tmp/kubeconfig -kubermatic-cluster=/tmp/cluster.yaml
      -kubermatic-node=/tmp/node.yaml
    image: quay.io/kubermatic/e2e
    pull: true
    secrets:
    - source: kubeconfig_dev
      target: kubeconfig
    - source: aws_1.10.5_cluster_yaml
      target: cluster_yaml
    - source: aws_1.10.5_node_yaml
      target: node_yaml
    when:
      branch: master
  11-slack:
    channel: dev
    group: slack
    icon_url: https://avatars2.githubusercontent.com/u/2181346?v=4&s=200
    image: kubermaticbot/drone-slack
    pull: true
    template: '${DRONE_COMMIT_AUTHOR} deployed a new API & Controller to dev & cloud.
      :heart:'
    username: drone
    webhook: https://hooks.slack.com/services/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
    when:
      branch: master
      status:
      - success
  11-slack-failure:
    author_recipient_mapping:
    - alvaroaleman=alvaro
    - cbrgm=christian
    - glower=igor.komlew
    - guusvw=guus
    - j3ank=eugenia
    - kdomanski=kamil
    - kgroschoff=kristin.groschoff
    - kron4eg=artiom
    - mrIncompetent=henrik
    - p0lyn0mial=lukasz
    - pkavajin=patrick
    - scheeles=sebastian
    - thz=tobias.hintze
    - toschneck=tobias.schneck
    - xrstf=christoph
    group: slack
    icon_url: https://avatars2.githubusercontent.com/u/2181346?v=4&s=200
    image: kubermaticbot/drone-slack
    image_url: https://media.giphy.com/media/m6tmCnGCNvTby/giphy-downsized.gif
    pull: true
    recipient: ${DRONE_COMMIT_AUTHOR}
    template: |-
      Your build failed! Shame. Shame. Shame.
            ${DRONE_BUILD_LINK}
    username: drone
    webhook: https://hooks.slack.com/services/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
    when:
      status:
      - failure
workspace:
  base: /go
  path: src/github.com/kubermatic/kubermatic
