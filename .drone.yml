workspace:
  base: /go
  path: src/github.com/kubermatic/kubermatic

pipeline:
  dep:
    image: metalmatze/dep:0.4.1
    pull: true
    commands:
      - cd api
      - dep status -v

  gofmt:
    group: lint
    image: golang:1.9
    commands:
      - cd api
      - make gofmt

  license-validation:
    group: lint
    image: metalmatze/wwhrd:1.9
    pull: true
    commands:
      - cd api
      - wwhrd check -f ../allowed_licensed.yaml

  lint:
    group: lint
    image: metalmatze/gometalinter:1.9
    pull: true
    commands:
      - cd api
      - make lint

  verify-codegen:
    group: codegen
    image: golang:1.9
    commands:
      - cd api
      - ./hack/verify-codegen.sh

  verify-swagger-spec:
    group: lint
    image: golang:1.9
    commands:
      - cd api
      - ./hack/verify-swagger.sh

  test:
    group: build
    image: golang:1.9
    commands:
      - cd api
      - make test

  build:
    group: build
    image: golang:1.9
    commands:
      - cd api
      - CGO_ENABLED=0 make build

  write-version:
    group: build
    image: ubuntu
    commands:
      - cd config
      - sed -i "s/{API_IMAGE_TAG}/${DRONE_TAG=$DRONE_COMMIT}/g" versions-values.yaml
      - sed -i "s/{CONTROLLER_IMAGE_TAG}/${DRONE_TAG=$DRONE_COMMIT}/g" versions-values.yaml
      - sed -i "s/{BARE_METAL_PROVIDER_IMAGE_TAG}/${DRONE_TAG=$DRONE_COMMIT}/g" versions-values.yaml
      - cat versions-values.yaml

  kubermatic-docker-always:
    group: push-always
    image: plugins/docker:17
    pull: true
    repo: kubermatic/api
    password: ${DOCKER_PASSWORD}
    username: ${DOCKER_USERNAME}
    tags:
      - ${DRONE_COMMIT}
    dockerfile: api/Dockerfile
    context: api
    secrets: [ docker_username, docker_password ]

  kubermatic-installer-docker-always:
    group: push-always
    image: plugins/docker:17
    pull: true
    repo: kubermatic/installer
    password: ${DOCKER_PASSWORD}
    username: ${DOCKER_USERNAME}
    tags:
      - ${DRONE_COMMIT}
    dockerfile: config/Dockerfile
    context: config
    secrets: [ docker_username, docker_password ]

  kubermatic-docker-master:
    group: push-master
    image: plugins/docker:17
    pull: true
    repo: kubermatic/api
    password: ${DOCKER_PASSWORD}
    username: ${DOCKER_USERNAME}
    tags:
      - master
    dockerfile: api/Dockerfile
    context: api
    secrets: [ docker_username, docker_password ]
    when:
      branch: master

  kubermatic-installer-docker-master:
    group: push-master
    image: plugins/docker:17
    pull: true
    repo: kubermatic/installer
    password: ${DOCKER_PASSWORD}
    username: ${DOCKER_USERNAME}
    tags:
      - master
    dockerfile: config/Dockerfile
    context: config
    secrets: [ docker_username, docker_password ]
    when:
      branch: master

  kubermatic-docker-release:
    group: push-release
    image: plugins/docker:17
    pull: true
    repo: kubermatic/api
    password: ${DOCKER_PASSWORD}
    username: ${DOCKER_USERNAME}
    tags:
      - ${DRONE_TAG}
      - latest
    dockerfile: api/Dockerfile
    context: api
    secrets: [ docker_username, docker_password ]
    when:
      event: [tag]

  kubermatic-installer-docker-release:
    group: push-release
    image: plugins/docker:17
    pull: true
    repo: kubermatic/installer
    password: ${DOCKER_PASSWORD}
    username: ${DOCKER_USERNAME}
    tags:
      - ${DRONE_TAG}
      - latest
    dockerfile: config/Dockerfile
    context: config
    secrets: [ docker_username, docker_password ]
    when:
      event: [tag]

  sync-charts:
    image: alpine:3.7
    pull: true
    commands:
      - apk add --no-cache -U git
      - git config --global user.email "dev@loodse.com"
      - git config --global user.name "drone"
      - export INSTALLER_DIR="/go/src/github.com/kubermatic/kubermatic-installer"
      - git clone https://github.com/kubermatic/kubermatic-installer.git $INSTALLER_DIR && mkdir -p $INSTALLER_DIR/charts
      - cp -r config/cert-manager config/certs config/kubermatic config/monitoring config/nginx-ingress-controller config/nodeport-proxy config/oauth $INSTALLER_DIR/charts
      - cd $INSTALLER_DIR
      - git add . && git commit -m "Synchronising helm charts from commit ${DRONE_COMMIT}"
      - git tag ${DRONE_TAG}
      - git push origin master --tags
    when:
      event: [tag]
      branch:
        include: [ master, release/* ]
        exclude: [ release/v1.* ]

  deploy-dev:
    group: deploy
    image: kubeciio/kubectl:0.2
    pull: true
    kubectl: create
    templates:
      - config/installer/master-install-job.template.yaml
    secrets:
      - source: kubeconfig_dev
        target: kubeconfig
    when:
      branch: master

  deploy-cloud-master-europe-west3-c-1:
    group: deploy
    image: kubeciio/kubectl:0.2
    pull: true
    kubectl: create
    templates:
      - config/installer/master-install-job.template.yaml
    secrets:
      - source: kubeconfig_cloud_europe-west3-c-1
        target: kubeconfig
    when:
      branch: master

  deploy-cloud-seed-us-central1-c-1:
    group: deploy
    image: kubeciio/kubectl:0.2
    pull: true
    kubectl: create
    templates:
      - config/installer/seed-install-job.template.yaml
    secrets:
      - source: kubeconfig_cloud_us-central1-c-1
        target: kubeconfig
    when:
      branch: master

  deploy-cloud-seed-asia-east1-a-1:
    group: deploy
    image: kubeciio/kubectl:0.2
    pull: true
    kubectl: create
    templates:
      - config/installer/seed-install-job.template.yaml
    secrets:
      - source: kubeconfig_cloud_asia-east1-a-1
        target: kubeconfig
    when:
      branch: master

  slack-failure:
    group: notify
    image: kubermaticbot/drone-slack
    pull: true
    webhook: https://hooks.slack.com/services/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
    username: drone
    icon_url: https://avatars2.githubusercontent.com/u/2181346?v=4&s=200
    recipient: ${DRONE_COMMIT_AUTHOR}
    image_url: https://media.giphy.com/media/m6tmCnGCNvTby/giphy-downsized.gif
    template: >
        Your build failed! Shame. Shame. Shame.
        ${DRONE_BUILD_LINK}
    author_recipient_mapping:
      - alvaroaleman=alvaro
      - guusvw=guus
      - j3ank=eugenia
      - kgroschoff=kristin
      - metalmatze=matthias
      - mrIncompetent=henrik
      - p0lyn0mial=lukasz
      - scheeles=sebastian
      - kdomanski=kamil
      - kron4eg=artiom.diomin
      - thz=thz
      - cbrgm=Chris
      - toschneck=Tobi
    when:
      status: [ failure ]

  slack-deploy:
    group: notify
    image: kubermaticbot/drone-slack
    pull: true
    webhook: https://hooks.slack.com/services/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
    username: drone
    icon_url: https://avatars2.githubusercontent.com/u/2181346?v=4&s=200
    channel: dev
    template: >
        ${DRONE_COMMIT_AUTHOR} deployed a new API & Controller to dev & cloud. :heart:
    when:
      status: [ success ]
      branch: master
