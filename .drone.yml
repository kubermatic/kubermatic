workspace:
  base: /go
  path: src/github.com/kubermatic/kubermatic

pipeline:
  dependencies:
    image: metalmatze/dep:1.9
    commands:
      - cd api
      - dep ensure

  gofmt:
    group: lint
    image: golang:1.8
    commands:
      - cd api
      - make gofmt

  lint:
    group: lint
    image: metalmatze/gometalinter:1.9
    commands:
      - cd api
      - make lint

  test:
    group: build
    image: golang:1.8
    commands:
      - cd api
      - make test

  build:
    group: build
    image: golang:1.8
    commands:
      - cd api
      - CGO_ENABLED=0 make build

  docker-always:
    group: push
    image: plugins/docker
    repo: kubermatic/api
    password: ${DOCKER_PASSWORD}
    username: ${DOCKER_USERNAME}
    tags:
      - ${DRONE_COMMIT}
    dockerfile: api/Dockerfile
    context: api
    secrets: [ docker_username, docker_password ]

  docker-master:
    group: push
    image: plugins/docker
    repo: kubermatic/api
    password: ${DOCKER_PASSWORD}
    username: ${DOCKER_USERNAME}
    tags:
      - master
    dockerfile: api/Dockerfile
    context: api
    secrets: [ docker_username, docker_password ]
    when:
      branch: develop

  docker-release:
    group: push
    image: plugins/docker
    repo: kubermatic/api
    password: ${DOCKER_PASSWORD}
    username: ${DOCKER_USERNAME}
    tags:
      - ${DRONE_TAG}
      - latest
    dockerfile: api/Dockerfile
    context: api
    secrets: [ docker_username, docker_password ]
    when:
      event: [tag]
      branch: release/*

  deploy-dev:
    group: deploy
    image: gcr.io/google_containers/hyperkube-amd64:v1.6.10
    commands:
      - echo $KUBECONFIG | base64 -d > kubeconfig
      - /hyperkube kubectl --kubeconfig kubeconfig -n kubermatic set image deployment/kubermatic-api-v1 api=kubermatic/api:$DRONE_COMMIT
      - /hyperkube kubectl --kubeconfig kubeconfig -n kubermatic set image deployment/cluster-controller-v1 cluster-controller=kubermatic/api:$DRONE_COMMIT
    secrets: [ kubeconfig ]
    when:
      branch: develop
