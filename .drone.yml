pipeline:
  verify-addons-up-to-date:
    commands:
    - ./api/hack/verify-addon-version.sh
    group: lint
    image: docker:dind
    pull: true
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
  build:
    commands:
    - cd api
    - make build
    group: build
    image: golang:1.11.0
    pull: true
  test:
    commands:
    - cd api
    - make test
    group: build
    image: golang:1.11.0
    pull: true
  docker:
    commands:
    - export VAULT_ADDR=https://vault.loodse.com/
    - export VAULT_TOKEN=$(vault write --format=json auth/approle/login role_id=$VAULT_ROLE_ID secret_id=$VAULT_SECRET_ID | jq .auth.client_token -r)
    - docker login -u $(vault kv get -field=username dev/kubermatic-docker) -p $(vault kv get -field=password dev/kubermatic-docker) docker.io
    - docker login -u $(vault kv get -field=username dev/kubermatic-quay.io) -p $(vault kv get -field=password dev/kubermatic-quay.io) quay.io
    - ./api/hack/push_image.sh ${DRONE_COMMIT} ${DRONE_TAG}
    image: quay.io/kubermatic/docker:18.09.0-3
    privileged: true
    group: docker
    secrets:
    - vault_secret_id
    - vault_role_id
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
  sync-charts:
    commands:
    - apk add --no-cache -U git bash openssh
    - git fetch
    - export LATEST_VERSION=$(git describe --tags --abbrev=0)
    - sed -i "s/__KUBERMATIC_TAG__/$LATEST_VERSION/g" config/kubermatic/values.yaml
    - git config --global user.email "dev@loodse.com"
    - git config --global user.name "drone"
    - cd api && ./hack/sync-charts.sh ${DRONE_BRANCH} ../config
    image: alpine:3.8
    pull: true
    when:
      branch:
        exclude:
        - release/v1.*
        - release/*cherry*
        include:
        - release/*
  deploy-dev:
    charts:
    - name: kubermatic
      namespace: kubermatic
      path: config/kubermatic/
    - name: nodeport-proxy
      namespace: nodeport-proxy
      path: config/nodeport-proxy/
    - name: minio
      namespace: minio
      path: config/minio/
    - name: nginx
      namespace: ingress-nginx
      path: config/nginx-ingress-controller/
    - name: oauth
      namespace: oauth
      path: config/oauth/
    - name: cert-manager
      namespace: cert-manager
      path: config/cert-manager/
    - name: certs
      namespace: default
      path: config/certs/
    - name: iap
      namespace: iap
      path: config/iap/
    - name: node-exporter
      namespace: monitoring
      path: config/monitoring/node-exporter/
    - name: kube-state-metrics
      namespace: monitoring
      path: config/monitoring/kube-state-metrics/
    - name: grafana
      namespace: monitoring
      path: config/monitoring/grafana/
    - name: alertmanager
      namespace: monitoring
      path: config/monitoring/alertmanager/
    - name: prometheus
      namespace: monitoring
      path: config/monitoring/prometheus/
    - name: elasticsearch
      namespace: logging
      path: config/logging/elasticsearch/
    - name: fluentd
      namespace: logging
      path: config/logging/fluentd/
    - name: kibana
      namespace: logging
      path: config/logging/kibana/
    # depends on 'kubermatic-docker-master' step to build the images
    helm: upgrade --install --wait --timeout 300 --tiller-namespace=kubermatic-installer
      --set=kubermatic.controller.image.tag=${DRONE_COMMIT}
      --set=kubermatic.api.image.tag=${DRONE_COMMIT}
      --set=kubermatic.rbac.image.tag=${DRONE_COMMIT}
    image: kubeciio/helm
    pull: true
    secrets:
    - source: kubeconfig_dev
      target: kubeconfig
    - source: values_dev
      target: values
    values:
    - values
    when:
      branch: master
  deploy-cloud-asia:
    charts:
    - name: kubermatic
      namespace: kubermatic
      path: config/kubermatic/
    - name: nodeport-proxy
      namespace: nodeport-proxy
      path: config/nodeport-proxy/
    - name: minio
      namespace: minio
      path: config/minio/
    - name: elasticsearch
      namespace: logging
      path: config/logging/elasticsearch/
    - name: fluentd
      namespace: logging
      path: config/logging/fluentd/
    - name: kibana
      namespace: logging
      path: config/logging/kibana/
    group: deploy-cloud
    # depends on 'kubermatic-docker-master' step to build the images
    helm: upgrade --install --wait --timeout 300 --kube-context=asia-east1-a-1 --tiller-namespace=kubermatic-installer
      --set=kubermatic.isMaster=false
      --set=kubermatic.controller.image.tag=${DRONE_COMMIT_SHA}
      --set=kubermatic.api.image.tag=${DRONE_COMMIT_SHA}
      --set=kubermatic.rbac.image.tag=${DRONE_COMMIT_SHA}
    image: kubeciio/helm
    pull: true
    secrets:
    - source: kubeconfig_cloud
      target: kubeconfig
    - source: values_cloud_as
      target: values
    values:
    - values
    when:
      branch: master
  deploy-cloud-europe:
    charts:
    - name: kubermatic
      namespace: kubermatic
      path: config/kubermatic/
    - name: nodeport-proxy
      namespace: nodeport-proxy
      path: config/nodeport-proxy/
    - name: minio
      namespace: minio
      path: config/minio/
    - name: nginx
      namespace: ingress-nginx
      path: config/nginx-ingress-controller/
    - name: oauth
      namespace: oauth
      path: config/oauth/
    - name: cert-manager
      namespace: cert-manager
      path: config/cert-manager/
    - name: certs
      namespace: default
      path: config/certs/
    - name: iap
      namespace: iap
      path: config/iap/
    - name: node-exporter
      namespace: monitoring
      path: config/monitoring/node-exporter/
    - name: kube-state-metrics
      namespace: monitoring
      path: config/monitoring/kube-state-metrics/
    - name: grafana
      namespace: monitoring
      path: config/monitoring/grafana/
    - name: alertmanager
      namespace: monitoring
      path: config/monitoring/alertmanager/
    - name: prometheus
      namespace: monitoring
      path: config/monitoring/prometheus/
    - name: elasticsearch
      namespace: logging
      path: config/logging/elasticsearch/
    - name: fluentd
      namespace: logging
      path: config/logging/fluentd/
    - name: kibana
      namespace: logging
      path: config/logging/kibana/
    group: deploy-cloud
    # depends on 'kubermatic-docker-master' step to build the images
    helm: upgrade --install --wait --timeout 300 --kube-context=europe-west3-c-1 --tiller-namespace=kubermatic-installer
      --set=kubermatic.controller.image.tag=${DRONE_COMMIT_SHA}
      --set=kubermatic.api.image.tag=${DRONE_COMMIT_SHA}
      --set=kubermatic.rbac.image.tag=${DRONE_COMMIT_SHA}
    image: kubeciio/helm
    pull: true
    secrets:
    - source: kubeconfig_cloud
      target: kubeconfig
    - source: values_cloud_eu
      target: values
    values:
    - values
    when:
      branch: master
  deploy-cloud-us:
    charts:
    - name: kubermatic
      namespace: kubermatic
      path: config/kubermatic/
    - name: nodeport-proxy
      namespace: nodeport-proxy
      path: config/nodeport-proxy/
    - name: minio
      namespace: minio
      path: config/minio/
    - name: elasticsearch
      namespace: logging
      path: config/logging/elasticsearch/
    - name: fluentd
      namespace: logging
      path: config/logging/fluentd/
    - name: kibana
      namespace: logging
      path: config/logging/kibana/
    group: deploy-cloud
    # depends on 'kubermatic-docker-master' step to build the images
    helm: upgrade --install --wait --timeout 300 --kube-context=us-central1-c-1 --tiller-namespace=kubermatic-installer
      --set=kubermatic.isMaster=false
      --set=kubermatic.controller.image.tag=${DRONE_COMMIT_SHA}
      --set=kubermatic.api.image.tag=${DRONE_COMMIT_SHA}
      --set=kubermatic.rbac.image.tag=${DRONE_COMMIT_SHA}
    image: kubeciio/helm
    pull: true
    secrets:
    - source: kubeconfig_cloud
      target: kubeconfig
    - source: values_cloud_us
      target: values
    values:
    - values
    when:
      branch: master
  deploy-run:
    charts:
    - name: kubermatic
      namespace: kubermatic
      path: config/kubermatic/
    - name: nodeport-proxy
      namespace: nodeport-proxy
      path: config/nodeport-proxy/
    - name: minio
      namespace: minio
      path: config/minio/
    - name: nginx
      namespace: ingress-nginx
      path: config/nginx-ingress-controller/
    - name: oauth
      namespace: oauth
      path: config/oauth/
    - name: cert-manager
      namespace: cert-manager
      path: config/cert-manager/
    - name: certs
      namespace: default
      path: config/certs/
    - name: iap
      namespace: iap
      path: config/iap/
    - name: node-exporter
      namespace: monitoring
      path: config/monitoring/node-exporter/
    - name: kube-state-metrics
      namespace: monitoring
      path: config/monitoring/kube-state-metrics/
    - name: grafana
      namespace: monitoring
      path: config/monitoring/grafana/
    - name: alertmanager
      namespace: monitoring
      path: config/monitoring/alertmanager/
    - name: prometheus
      namespace: monitoring
      path: config/monitoring/prometheus/
    - name: elasticsearch
      namespace: logging
      path: config/logging/elasticsearch/
    - name: fluentd
      namespace: logging
      path: config/logging/fluentd/
    - name: kibana
      namespace: logging
      path: config/logging/kibana/
    # depends on 'kubermatic-docker-release-v28' step to build the images
    helm: upgrade --install --wait --timeout 300
      --set=kubermatic.controller.image.tag=${DRONE_COMMIT_SHA}
      --set=kubermatic.api.image.tag=${DRONE_COMMIT_SHA}
      --set=kubermatic.rbac.image.tag=${DRONE_COMMIT_SHA}
    image: kubeciio/helm
    pull: true
    secrets:
    - source: kubeconfig_run
      target: kubeconfig
    - source: values_run
      target: values
    values:
    - values
    when:
      branch: release/v2.8
  slack:
    channel: dev
    group: slack
    icon_url: https://avatars2.githubusercontent.com/u/2181346?v=4&s=200
    image: kubermaticbot/drone-slack
    pull: true
    template: '${DRONE_COMMIT_AUTHOR} deployed a new API & Controller to dev & cloud.
      :heart:'
    username: drone
    webhook: https://hooks.slack.com/services/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
    when:
      branch: master
      status:
      - success
  slack-failure:
    author_recipient_mapping:
    - alvaroaleman=alvaro
    - cbrgm=christian
    - glower=igor.komlew
    - guusvw=guus
    - j3ank=eugenia
    - kdomanski=kamil
    - kgroschoff=kristin.groschoff
    - kron4eg=artiom
    - mrIncompetent=henrik
    - p0lyn0mial=lukasz
    - pkavajin=patrick
    - scheeles=sebastian
    - thz=tobias.hintze
    - toschneck=tobias.schneck
    - xrstf=christoph
    - xmudrii=marko
    - maciaszczykm=marcin
    - floreks=sebastian.florek
    group: slack
    icon_url: https://avatars2.githubusercontent.com/u/2181346?v=4&s=200
    image: kubermaticbot/drone-slack
    image_url: https://media.giphy.com/media/m6tmCnGCNvTby/giphy-downsized.gif
    pull: true
    recipient: ${DRONE_COMMIT_AUTHOR}
    template: |-
      Your build failed! Shame. Shame. Shame.
            ${DRONE_BUILD_LINK}
    username: drone
    webhook: https://hooks.slack.com/services/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
    when:
      status:
      - failure
workspace:
  base: /go
  path: src/github.com/kubermatic/kubermatic
