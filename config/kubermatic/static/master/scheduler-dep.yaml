apiVersion: apps/v1
kind: Deployment
metadata:
  name: scheduler
  ownerReferences:
  - apiVersion: kubermatic.k8s.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: Cluster
    name: {{ .Cluster.Name }}
    uid: "{{ .Cluster.ObjectMeta.UID }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      role: scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "10251"
      labels:
        role: scheduler
        release: {{index .Version.Values "k8s-version"}}
    spec:
      initContainers:
      - name: apiserver-running
        image: busybox
        command:
        - /bin/sh
        - -ec
        - until wget -T 1 http://apiserver:8080/healthz; do echo waiting for apiserver; sleep 2; done;
      containers:
      - name: scheduler
        image: gcr.io/google_containers/hyperkube-amd64:{{index .Version.Values "k8s-version"}}
        command: [ "/hyperkube", "scheduler",
            "--master=http://apiserver:8080",
            "--v=4"
        ]
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10251
          timeoutSeconds: 15
        livenessProbe:
          failureThreshold: 8
          httpGet:
            path: /healthz
            port: 10251
          initialDelaySeconds: 15
          timeoutSeconds: 15
