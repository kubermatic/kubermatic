apiVersion: apps/v1
kind: Deployment
metadata:
  name: scheduler
  ownerReferences:
  - apiVersion: kubermatic.k8s.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: Cluster
    name: {{ .Cluster.Name }}
    uid: "{{ .Cluster.ObjectMeta.UID }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      role: scheduler
      version: v1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        role: scheduler
        release: {{index .Version.Values "k8s-version"}}
        version: v1
      annotations:
        prometheus.io/port: '10251'
        prometheus.io/scrape: 'true'
    spec:
      containers:
      - name: scheduler
        image: gcr.io/google_containers/hyperkube-amd64:{{index .Version.Values "k8s-version"}}
        command: [ "/hyperkube", "scheduler",
            "--master=http://apiserver:8080",
            "--v=4"
        ]
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10251
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 60
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10251
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 30
