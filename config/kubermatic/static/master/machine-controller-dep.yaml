apiVersion: apps/v1
kind: Deployment
metadata:
  name: machine-controller
  ownerReferences:
  - apiVersion: kubermatic.k8s.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: Cluster
    name: {{ .Cluster.Name }}
    uid: "{{ .Cluster.ObjectMeta.UID }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: machine-controller
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8085"
      labels:
        app: machine-controller
        release: {{index .Version.Values "machine-controller-version"}}
    spec:
      terminationGracePeriodSeconds: 60
      initContainers:
      - name: apiserver-running
        image: busybox
        command:
        - /bin/sh
        - -ec
        - until wget -T 1 http://apiserver:8080/healthz; do echo waiting for apiserver; sleep 2; done;
      containers:
      - image: kubermatic/machine-controller:{{index .Version.Values "machine-controller-version"}}
        name: machine-controller
        command:
          - /usr/local/bin/machine-controller
          - -master=http://apiserver:8080
          - -logtostderr
          - -v=4
          - -cluster-dns=10.10.10.10
          - -internal-listen-address=0.0.0.0:8085
        livenessProbe:
          httpGet:
            path: /live
            port: 8085
        readinessProbe:
          httpGet:
            path: /ready
            port: 8085
        env:
        {{ if .Cluster.Spec.Cloud.AWS }}
        - name: AWS_ACCESS_KEY_ID
          value: {{ .Cluster.Spec.Cloud.AWS.AccessKeyID }}
        - name: AWS_SECRET_ACCESS_KEY
          value: {{ .Cluster.Spec.Cloud.AWS.SecretAccessKey }}
        {{ end }}
        {{ if .Cluster.Spec.Cloud.Digitalocean }}
        - name: DO_TOKEN
          value: {{ .Cluster.Spec.Cloud.Digitalocean.Token }}
        {{ end }}
        {{ if .Cluster.Spec.Cloud.Hetzner }}
        - name: HZ_TOKEN
          value: {{ .Cluster.Spec.Cloud.Hetzner.Token }}
        {{ end }}
        {{ if .Cluster.Spec.Cloud.Openstack }}
        - name: OS_AUTH_URL
          value: {{ .DC.Spec.Openstack.AuthURL }}
        - name: OS_USER_NAME
          value: {{ .Cluster.Spec.Cloud.Openstack.Username }}
        - name: OS_PASSWORD
          value: {{ .Cluster.Spec.Cloud.Openstack.Password }}
        - name: OS_DOMAIN_NAME
          value: {{ .Cluster.Spec.Cloud.Openstack.Domain }}
        - name: OS_TENANT_NAME
          value: {{ .Cluster.Spec.Cloud.Openstack.Tenant }}
        {{ end }}
