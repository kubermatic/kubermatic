apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: controller-manager-v1
spec:
  replicas: {{ .Values.kubermatic.controller.replicas }}
  template:
    metadata:
      labels:
        role: controller-manager
        version: v1
      annotations:
        checksum/master-files: {{ include (print $.Template.BasePath "/master-files-secret.yaml") . | sha256sum }}
        checksum/datecenters: {{ include (print $.Template.BasePath "/datacenter-yaml-secret.yaml") . | sha256sum }}
    spec:
      serviceAccountName: kubermatic
      initContainers:
      - name: controller-manager-cleanup
        image: gcr.io/google_containers/hyperkube-amd64:v1.9.6
        command:
        - /bin/sh
        - -ec
        - |-
            CLUSTERS=$(kubectl get ns -o=custom-columns=:.metadata.name | egrep '^cluster-[a-z0-9]+$')
            for CLUSTER in $CLUSTERS; do
                kubectl -n $CLUSTER delete prometheus prometheus || true;
                kubectl -n $CLUSTER delete servicemonitor apiserver || true;
                kubectl -n $CLUSTER delete servicemonitor controller-manager || true;
                kubectl -n $CLUSTER delete servicemonitor etcd || true;
                kubectl -n $CLUSTER delete servicemonitor kube-state-metrics || true;
                kubectl -n $CLUSTER delete servicemonitor machine-controller || true;
                kubectl -n $CLUSTER delete servicemonitor scheduler || true;
            done
      containers:
        - name: controller-manager
          command:
          - /kubermatic-controller-manager
          args:
          - -v=4
          - -logtostderr
          - -external-url={{ .Values.kubermatic.domain }}
          - -datacenter-name={{ .Values.kubermatic.controller.datacenterName }}
          - -master-resources=/opt/master-files
          - -datacenters=/opt/datacenter/datacenters.yaml
          - -versions=/opt/master-files/versions.yaml
          - -updates=/opt/master-files/updates.yaml
          - -prometheus-address=0.0.0.0:8085
          image: '{{.Values.kubermatic.controller.image.repository}}:{{.Values.kubermatic.controller.image.tag}}'
          imagePullPolicy: {{.Values.kubermatic.controller.image.pullPolicy}}
          ports:
            - name: metrics
              containerPort: 8085
              protocol: TCP
          volumeMounts:
            - name: master-files
              mountPath: "/opt/master-files/"
              readOnly: true
            - name: datacenters
              mountPath: "/opt/datacenter/"
              readOnly: true
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
      imagePullSecrets:
        - name: dockercfg
      volumes:
        - name: master-files
          secret:
            secretName: master-files
        - name: datacenters
          secret:
            secretName: datacenters
