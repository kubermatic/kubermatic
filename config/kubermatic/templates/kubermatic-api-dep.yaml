apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kubermatic-api-v1
spec:
  replicas: {{ .Values.kubermatic.api.replicas }}
  template:
    metadata:
      labels:
        role: kubermatic-api
        version: v1
      annotations:
        kubermatic/scrape: 'true'
        kubermatic/scrape_port: '8085'
        checksum/datecenters: {{ include (print $.Template.BasePath "/datacenter-yaml-secret.yaml") . | sha256sum }}
        checksum/kubeconfig: {{ include (print $.Template.BasePath "/kubeconfig-secret.yaml") . | sha256sum }}
        checksum/master-files: {{ include (print $.Template.BasePath "/master-files-secret.yaml") . | sha256sum }}
        fluentbit.io/parser: glog
    spec:
      serviceAccountName: kubermatic
      containers:
        - name: api
          command:
          - kubermatic-api
          args:
          - -address=0.0.0.0:8080
          - -v=4
          - -logtostderr
          - -datacenters=/opt/datacenter/datacenters.yaml
          - -oidc-url={{ .Values.kubermatic.auth.tokenIssuer }}
          - -oidc-authenticator-client-id={{ .Values.kubermatic.auth.clientID }}
          - -oidc-skip-tls-verify={{ default false .Values.kubermatic.auth.skipTokenIssuerTLSVerify }}
          - -versions=/opt/master-files/versions.yaml
          - -updates=/opt/master-files/updates.yaml
          - -internal-address=0.0.0.0:8085
          - -kubeconfig=/opt/.kube/kubeconfig
          - -master-resources=/opt/master-files
          # the following flags enable oidc kubeconfig feature/endpoint
          - -feature-gates={{ .Values.kubermatic.api.featureGates }}
          {{- if regexMatch ".*OIDCKubeCfgEndpoint=true.*" (default "" .Values.kubermatic.api.featureGates) }}
          - -oidc-issuer-redirect-uri={{ .Values.kubermatic.auth.issuerRedirectURL }}
          - -oidc-issuer-client-id={{ .Values.kubermatic.auth.issuerClientID }}
          - -oidc-issuer-client-secret={{ .Values.kubermatic.auth.issuerClientSecret }}
          - -oidc-issuer-cookie-hash-key={{ .Values.kubermatic.auth.issuerCookieKey }}
          {{- end }}
          {{- if .Values.kubermatic.worker_name }}
          - -worker-name={{ .Values.kubermatic.worker_name }}
          {{- end }}
          image: '{{ .Values.kubermatic.api.image.repository }}:{{.Values.kubermatic.api.image.tag}}'
          imagePullPolicy: {{.Values.kubermatic.api.image.pullPolicy}}
          ports:
            - name: metrics
              containerPort: 8085
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: kubeconfig
              mountPath: "/opt/.kube/"
              readOnly: true
            - name: datacenters
              mountPath: "/opt/datacenter/"
              readOnly: true
            - name: master-files
              mountPath: "/opt/master-files/"
              readOnly: true
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "250m"
      imagePullSecrets:
        - name: dockercfg
      tolerations:
      - key: "only_critical"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: "kubermatic.io/type"
                operator: In
                values:
                - "stable"
      volumes:
        - name: kubeconfig
          secret:
            secretName: kubeconfig
        - name: datacenters
          secret:
            secretName: datacenters
        - name: master-files
          secret:
            secretName: master-files
