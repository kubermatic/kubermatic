{{ if .Values.kubermatic.isMaster }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubermatic-ui-v2
spec:
  replicas: {{ .Values.kubermatic.ui.replicas }}
  selector:
    matchLabels:
      role: kubermatic-ui
      version: v1
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/ui-config-configmap.yaml") . | sha256sum }}
        fluentbit.io/parser: json_iso
      labels:
        role: kubermatic-ui
        version: v1
    spec:
      containers:
      - name: webserver
        image: '{{ .Values.kubermatic.ui.image.repository }}:{{ .Values.kubermatic.ui.image.tag }}'
        imagePullPolicy: {{ .Values.kubermatic.ui.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8080
        volumeMounts:
        - name: config
          mountPath: "/dist/config/"
          readOnly: true
        resources:
{{ toYaml .Values.kubermatic.ui.resources | indent 10 }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      imagePullSecrets:
      - name: dockercfg
      volumes:
      - name: config
        configMap:
          name: ui-config
      nodeSelector:
{{ toYaml .Values.kubermatic.ui.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.kubermatic.ui.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.kubermatic.ui.tolerations | indent 8 }}
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: kubermatic-ui-v2
spec:
  minAvailable: 1
  selector:
    matchLabels:
      role: kubermatic-ui
{{ end }}
