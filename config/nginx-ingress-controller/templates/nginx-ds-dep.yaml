apiVersion: extensions/v1beta1
{{ if .Values.IsBareMetal }}
kind: DaemonSet
{{ else }}
kind: Deployment
{{ end }}
metadata:
  name: nginx-ingress-controller
  namespace: ingress-nginx
spec:
{{ if not .Values.IsBareMetal }}
  replicas: 1
{{ end }}
  template:
    metadata:
      labels:
        app: ingress-nginx
      annotations:
        prometheus.io/port: '10254'
        prometheus.io/scrape: 'true'
    spec:
    {{ if .Values.IsBareMetal }}
      hostNetwork: true
    {{ end }}
      serviceAccountName: nginx-ingress-serviceaccount
      containers:
        - name: nginx-ingress-controller
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.9.0-beta.17
          args:
            - /nginx-ingress-controller
            - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
            - --configmap=$(POD_NAMESPACE)/nginx-configuration
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
            - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
            - --default-ssl-certificate=default/kubermatic-tls-certificates
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          {{ if not .Values.IsBareMetal }}
          ports:
          - name: http
            containerPort: 80
          - name: https
            containerPort: 443
          {{ end }}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
