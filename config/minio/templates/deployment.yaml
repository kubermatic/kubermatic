apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
      {{- if .Values.minio.backup.enabled }}
      annotations:
        backup.velero.io/backup-volumes: minio-backup
        pre.hook.backup.velero.io/container: backup
        pre.hook.backup.velero.io/timeout: 60m
        pre.hook.backup.velero.io/command: '["mc", "mirror", "--remove", "--quiet", "src", "/backup"]'
      {{- end }}
    spec:
      containers:
      - name: minio
        image: '{{ .Values.minio.image.repository }}:{{ .Values.minio.image.tag }}'
        args:
        {{- if .Values.minio.flags.compat }}
        - --compat
        {{- end }}
        {{- if .Values.minio.flags.anonymous }}
        - --anonymous
        {{- end }}
        - server
        - /storage
        env:
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio
              key: accessKey
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio
              key: secretKey
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: storage
          mountPath: "/storage"
        resources:
{{ toYaml .Values.minio.resources.minio | indent 10 }}

      {{- if .Values.minio.backup.enabled }}
      - name: backup
        image: '{{ .Values.minio.backup.image.repository }}:{{ .Values.minio.backup.image.tag }}'
        args:
        - /bin/sh
        - -c
        - mc config host add src http://127.0.0.1:9000 "$MINIO_ACCESS_KEY" "$MINIO_SECRET_KEY" && while true; do sleep 1h; done
        env:
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio
              key: accessKey
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio
              key: secretKey
        volumeMounts:
        - mountPath: /backup
          name: minio-backup
          readOnly: false
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
        resources:
{{ toYaml .Values.minio.resources.backup | indent 10 }}
      {{- end }}
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: minio-data
      {{- if .Values.minio.backup.enabled }}
      - name: minio-backup
        emptyDir: {}
      {{- end }}
      nodeSelector:
{{ toYaml .Values.minio.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.minio.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.minio.tolerations | indent 8 }}
