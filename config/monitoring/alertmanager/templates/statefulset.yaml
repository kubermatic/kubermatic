# Copyright 2020 The Kubermatic Kubernetes Platform contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{ if not .Values.alertmanager.migration.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "name" . }}
  labels:
    app: {{ template "name" . }}
spec:
  replicas: {{ .Values.alertmanager.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ template "name" . }}
  serviceName: {{ template "name" . }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
    spec:
      containers:
      - name: alertmanager
        image: '{{ .Values.alertmanager.image.repository }}:{{ .Values.alertmanager.version | default .Values.alertmanager.image.tag }}'
        imagePullPolicy: {{ .Values.alertmanager.image.pullPolicy }}
        args:
        - --config.file=/etc/alertmanager/config/alertmanager.yaml
        - --cluster.listen-address=$(POD_IP):6783
        - --storage.path=/alertmanager
        - --web.listen-address=:9093
        - --web.external-url=https://{{ .Values.alertmanager.host | trim }}
        - --web.route-prefix=/
        {{- if gt .Values.alertmanager.replicas 1.0 }}
        {{- range (until (int .Values.alertmanager.replicas)) }}
        - --cluster.peer={{ template "name" $ }}-{{ . }}.{{ template "name" $ }}.{{ $.Release.Namespace }}.svc.cluster.local:6783
        {{- end }}
        {{- end }}
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /api/v1/status
            port: web
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        ports:
        - containerPort: 9093
          name: web
          protocol: TCP
        - containerPort: 6783
          name: mesh
          protocol: TCP
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /api/v1/status
            port: web
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
{{ toYaml .Values.alertmanager.resources.alertmanager | indent 10 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/alertmanager/config
          name: config-volume
        - mountPath: /alertmanager
          name: db
          subPath: alertmanager-db

      - name: reloader
        image: '{{ .Values.alertmanager.configReloaderImage.repository }}:{{ .Values.alertmanager.configReloaderImage.tag }}'
        imagePullPolicy: {{ .Values.alertmanager.configReloaderImage.pullPolicy }}
        args:
        - -webhook-url=http://localhost:9093/-/reload
        - -volume-dir=/etc/alertmanager/config
        resources:
{{ toYaml .Values.alertmanager.resources.reloader | indent 10 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/alertmanager/config
          name: config-volume
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      terminationGracePeriodSeconds: 0
      volumes:
      - name: config-volume
        secret:
          defaultMode: 420
          secretName: {{ template "name" . }}
      nodeSelector:
{{ toYaml .Values.alertmanager.nodeSelector | indent 8 }}
      affinity:
{{ tpl (toYaml .Values.alertmanager.affinity) . | fromYaml | toYaml | indent 8 }}
      tolerations:
{{ toYaml .Values.alertmanager.tolerations | indent 8 }}
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: db
    spec:
      {{- with .Values.alertmanager.storageClass }}
      storageClassName: {{ . }}
      {{- end }}
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.alertmanager.resources.storage | default .Values.alertmanager.storageSize }}
{{ end }}
