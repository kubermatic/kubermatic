apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: alertmanager-kubermatic
  name: alertmanager-kubermatic
spec:
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: alertmanager-kubermatic
  serviceName: alertmanager-kubermatic
  template:
    metadata:
      labels:
        app: alertmanager-kubermatic
    spec:
      containers:
      - args:
        - --config.file=/etc/alertmanager/config/alertmanager.yaml
        - --cluster.listen-address=$(POD_IP):6783
        - --storage.path=/alertmanager
        - --web.listen-address=:9093
        - --web.external-url=https://{{ .Values.alertmanager.host | trim }}
        - --web.route-prefix=/
        - --cluster.peer=alertmanager-kubermatic-0.alertmanager-kubermatic.{{ .Release.Namespace }}.svc.cluster.local:6783
        - --cluster.peer=alertmanager-kubermatic-1.alertmanager-kubermatic.{{ .Release.Namespace }}.svc.cluster.local:6783
        - --cluster.peer=alertmanager-kubermatic-2.alertmanager-kubermatic.{{ .Release.Namespace }}.svc.cluster.local:6783
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        image: quay.io/prometheus/alertmanager:{{ .Values.alertmanager.version }}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /api/v1/status
            port: web
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        name: alertmanager
        ports:
        - containerPort: 9093
          name: web
          protocol: TCP
        - containerPort: 6783
          name: mesh
          protocol: TCP
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /api/v1/status
            port: web
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
{{ toYaml .Values.alertmanager.resources.alertmanager | indent 10 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/alertmanager/config
          name: config-volume
        - mountPath: /alertmanager
          name: alertmanager-kubermatic-db
          subPath: alertmanager-db
      - name: reloader
        image: jimmidyson/configmap-reload
        imagePullPolicy: IfNotPresent
        args:
        - -webhook-url=http://localhost:9093/-/reload
        - -volume-dir=/etc/alertmanager/config
        resources:
{{ toYaml .Values.alertmanager.resources.reloader | indent 10 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/alertmanager/config
          name: config-volume
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      terminationGracePeriodSeconds: 0
      volumes:
      - name: config-volume
        secret:
          defaultMode: 420
          secretName: alertmanager-kubermatic
      nodeSelector:
{{ toYaml .Values.alertmanager.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.alertmanager.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.alertmanager.tolerations | indent 8 }}
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      name: alertmanager-kubermatic-db
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.alertmanager.resources.storage }}
      storageClassName: kubermatic-fast
