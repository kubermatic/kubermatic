.PHONY: prometheus
prometheus: rules check

.PHONY: rules
rules:
	$(eval header="\# This file was generated by running \`make rules\`.")
	rm -rf prometheus/rules/*
	jsonnet -J vendor -m prometheus/rules -e '(import "prometheus/jsonnet/prometheus.jsonnet").prometheus' | xargs -I{} sh -c '(echo "${header}"; cat $$1 | gojsontoyaml) > $$1.yaml; rm -f $$1' -- {}

.PHONY: check-config check-rules
check: check-config check-rules

check-config:
	promtool check config prometheus/config/prometheus.yml

check-rules:
	promtool check rules prometheus/rules/rules.yaml

.PHONY: prometheus-customer
prometheus-customer:
	mkdir -p prometheus/rules-customer
	jsonnet -J vendor -m prometheus/rules-customer -e '(import "prometheus/jsonnet/prometheus-customer.jsonnet").prometheus' | xargs -I{} sh -c 'cat $$1 | gojsontoyaml > $$1.yaml; rm -f $$1' -- {}
	echo "// This file was generated by running \`make prometheus-customer\` in the config/monitoring directory.\n\npackage prometheus\n\nconst prometheusRules = \`\n`cat prometheus/rules-customer/rules.yaml`\n\`" > ../../api/pkg/resources/prometheus/configmap-rules.go
	rm -rf prometheus/rules-customer

.PHONY: grafana
grafana:
	$(eval header="\# This file was generated by running \`make grafana\`.")
	jsonnet -J vendor -m grafana/templates/ -e '(import "grafana/jsonnet/grafana.jsonnet")' | xargs -I{} sh -c '(echo "${header}"; cat $$1 | gojsontoyaml) > $$1.yaml; rm -f $$1' -- {}
	# Escape {{ }} in grafana templating with {{ "{{ }}" }} for helm first
	sed -i -e 's#{{#{{ "{{#g' grafana/templates/dashboardDefinitions.yaml
	sed -i -e 's#}}#}}" }}#g' grafana/templates/dashboardDefinitions.yaml
