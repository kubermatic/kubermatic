apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: prometheus-kubermatic
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus-kubermatic
  serviceName: prometheus-kubermatic
  template:
    metadata:
      labels:
        app: prometheus-kubermatic
      annotations:
        kubermatic/scrape: 'true'
        kubermatic/scrape_port: '9090'
        {{- if .Values.prometheus.backups }}
        backup.ark.heptio.com/backup-volumes: prometheus-backup
        pre.hook.backup.ark.heptio.com/container: backup
        pre.hook.backup.ark.heptio.com/timeout: 30m
        pre.hook.backup.ark.heptio.com/command: '["/bin/sh", "-c", "rm -rf /prometheus/snapshots/* && curl -s -XPOST http://127.0.0.1:9090/api/v1/admin/tsdb/snapshot && rsync --archive /prometheus/snapshots/*/ /backup"]'
        {{- end }}
    spec:
      containers:
      - args:
        - --config.file=/etc/prometheus/config/prometheus.yaml
        - --storage.tsdb.no-lockfile
        - --storage.tsdb.path=/prometheus
        - --storage.tsdb.retention=360h
        - --web.enable-lifecycle
        - --web.external-url=https://{{ .Values.prometheus.host | trim }}
        - --web.route-prefix=/
        {{- if .Values.prometheus.backups }}
        - --web.enable-admin-api
        {{- end }}
        image: quay.io/prometheus/prometheus:v2.3.2
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /-/healthy
            port: web
          initialDelaySeconds: 15
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        name: prometheus
        ports:
        - containerPort: 9090
          name: web
        readinessProbe:
          failureThreshold: 120
          httpGet:
            path: /-/healthy
            port: web
          initialDelaySeconds: 15
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        resources:
{{ toYaml .Values.prometheus.containers.prometheus.resources | indent 10 }}
        volumeMounts:
        - mountPath: /etc/prometheus/config/
          name: prometheus-kubermatic-config
          readOnly: false
        - mountPath: /etc/prometheus/rules/
          name: prometheus-kubermatic-rules
          readOnly: false
        - mountPath: /prometheus
          name: prometheus-kubermatic-db
          readOnly: false
          subPath: prometheus-db
        {{- if .Values.prometheus.volumes }}
        {{- range .Values.prometheus.volumes }}
        - mountPath: {{ .mountPath }}
          name: {{ .name }}
          readOnly: true
        {{- end }}
        {{- end }}
      - name: reloader
        image: jimmidyson/configmap-reload
        args:
        - --volume-dir=/etc/prometheus/config
        - --volume-dir=/etc/prometheus/rules
        - --webhook-url=http://localhost:9090/-/reload
        resources:
{{ toYaml .Values.prometheus.containers.reloader.resources | indent 10 }}
        volumeMounts:
        - mountPath: /etc/prometheus/config/
          name: prometheus-kubermatic-config
          readOnly: false
        - mountPath: /etc/prometheus/rules/
          name: prometheus-kubermatic-rules
          readOnly: false
        {{- if .Values.prometheus.volumes }}
        {{- range .Values.prometheus.volumes }}
        - mountPath: {{ .mountPath }}
          name: {{ .name }}
          readOnly: true
        {{- end }}
        {{- end }}
      {{- if .Values.prometheus.backups }}
      - name: backup
        image: alpine:3.7
        args:
        - /bin/sh
        - -c
        - apk add --no-cache curl rsync && while true; do sleep 1h; done
        volumeMounts:
        - mountPath: /prometheus
          name: prometheus-kubermatic-db
          readOnly: false
          subPath: prometheus-db
        - mountPath: /backup
          name: prometheus-backup
          readOnly: false
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
      {{- end }}
      serviceAccountName: prometheus-kubermatic
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      volumes:
      - name: prometheus-kubermatic-config
        configMap:
          name: prometheus-kubermatic-config
      - name: prometheus-kubermatic-rules
        configMap:
          name: prometheus-kubermatic-rules
      {{- if .Values.prometheus.volumes }}
      {{- range .Values.prometheus.volumes }}
      - name: {{ .name }}
        {{- if .configMap }}
        configMap:
          name: {{ .configMap }}
        {{- else }}
        secret:
          secretName: {{ .secretName }}
        {{- end }}
      {{- end }}
      {{- end }}
      {{- if .Values.prometheus.backups }}
      - name: prometheus-backup
        emptyDir: {}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: prometheus-kubermatic-db
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.prometheus.storageSize }}
      storageClassName: kubermatic-fast
