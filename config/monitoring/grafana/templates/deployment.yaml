apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - image: '{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}'
        name: grafana
        ports:
        - containerPort: 3000
          name: http
        resources:
{{ toYaml .Values.grafana.resources | indent 10 }}
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage
          readOnly: false
        - mountPath: /etc/grafana
          name: grafana-config
          readOnly: true
        - mountPath: /etc/grafana/provisioning/datasources
          name: grafana-datasources
          readOnly: true
        - mountPath: /etc/grafana/provisioning/dashboards
          name: grafana-dashboards
          readOnly: true
        - mountPath: /grafana-dashboard-definitions
          name: grafana-dashboard-definitions
          readOnly: true
        {{- if .Values.grafana.volumes }}
        {{- range .Values.grafana.volumes }}
        - mountPath: {{ .mountPath }}
          name: {{ .name }}
          readOnly: true
        {{- end }}
        {{- end }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: grafana
      volumes:
      - emptyDir: {}
        name: grafana-storage
      - name: grafana-config
        secret:
          secretName: grafana-config
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards
      - name: grafana-dashboard-definitions
        configMap:
          name: grafana-dashboard-definitions
          items:
          {{- range $file, $content := (.Files.Glob "dashboards/**") }}
          - key: {{ $file | replace "dashboards/" "" | replace "/" "-" }}
            path: {{ $file | replace "dashboards/" "" }}
          {{- end }}
      {{- if .Values.grafana.volumes }}
      {{- range .Values.grafana.volumes }}
      - name: {{ .name }}
        {{- if .configMap }}
        configMap:
          name: {{ .configMap }}
        {{- else }}
        secret:
          secretName: {{ .secretName }}
        {{- end }}
      {{- end }}
      {{- end }}
      nodeSelector:
{{ toYaml .Values.grafana.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.grafana.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.grafana.tolerations | indent 8 }}
