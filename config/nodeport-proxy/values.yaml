nodePortProxy:
  replicas: 3
  image:
    repository: "quay.io/kubermatic/nodeport-proxy"
    tag: "__KUBERMATIC_TAG__"
  envoy:
    image:
      repository: "docker.io/envoyproxy/envoy-alpine"
      tag: v1.11.1

  nodeSelector: {}
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchLabels:
              app: envoy
          topologyKey: kubernetes.io/hostname
        weight: 100
  tolerations: []

  resources:
    envoy:
      requests:
        cpu: 50m
        memory: 32Mi
      limits:
        cpu: 200m
        memory: 64Mi
    envoyManager:
      requests:
        cpu: 50m
        memory: 32Mi
      limits:
        cpu: 150m
        memory: 48Mi
    lbUpdater:
      requests:
        cpu: 50m
        memory: 32Mi
      limits:
        cpu: 150m
        memory: 32Mi

  lbUpdater:
    nodeSelector: {}
    affinity: {}
    tolerations: []


  # If we're running on AWS, use an NLB. It has a fixed IP & we can use VPC endpoints
  # https://docs.aws.amazon.com/de_de/eks/latest/userguide/load-balancing.html
  service:
    annotations:
      "service.beta.kubernetes.io/aws-load-balancer-type": nlb
      # On AWS default timeout is 60s, which means: kubectl logs -f will receive EOF after 60s.
      "service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout": "3600"
