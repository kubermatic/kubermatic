apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy
spec:
  replicas: {{ .Values.nodePortPoxy.replicas }}
  selector:
    matchLabels:
      app: nodeport-proxy
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubermatic/scrape: "true"
        kubermatic/scrape_port: "8002"
        kubermatic/metric_path: "/stats/prometheus"
      labels:
        app: nodeport-proxy
    spec:
      initContainers:
      - name: copy-envoy-config
        image: '{{ .Values.nodePortPoxy.image.repository }}:{{ .Values.nodePortPoxy.image.tag }}'
        command:
        - /bin/cp
        args:
        - /envoy.yaml
        - /etc/envoy/envoy.yaml
        volumeMounts:
        - mountPath: /etc/envoy
          name: envoy-config
      containers:
      - name: envoy-manager
        image: '{{ .Values.nodePortPoxy.image.repository }}:{{ .Values.nodePortPoxy.image.tag }}'
        command:
        - /envoy-manager
        args:
        - "-listen-address=:8001"
        - "-envoy-node-name=kube"
        - "-envoy-admin-port=9001"
        - "-envoy-stats-port=8002"
        ports:
        - containerPort: 8001
          name: grpc
          protocol: TCP
        resources:
{{ toYaml .Values.nodePortPoxy.resources.envoyManager | indent 10 }}
      - name: envoy
        image: '{{ .Values.nodePortPoxy.envoy.image.repository }}:{{ .Values.nodePortPoxy.envoy.image.tag }}'
        command:
        - /usr/local/bin/envoy
        args:
        - "-c"
        - "/etc/envoy/envoy.yaml"
        - "--service-cluster"
        - "cluster0"
        - "--service-node"
        - "kube"
        lifecycle:
          preStop:
            exec:
              command:
              - wget
              - -qO-
              - http://127.0.0.1:9001/healthcheck/fail
        ports:
        - containerPort: 8002
          name: stats
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8002
            scheme: HTTP
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /etc/envoy
          name: envoy-config
        resources:
{{ toYaml .Values.nodePortPoxy.resources.envoy | indent 10 }}
      imagePullSecrets:
      - name: quay
      restartPolicy: Always
      serviceAccountName: nodeport-proxy
      volumes:
      - emptyDir: {}
        name: envoy-config
      nodeSelector:
{{ toYaml .Values.nodePortPoxy.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.nodePortPoxy.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.nodePortPoxy.tolerations | indent 8 }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lb-updater
spec:
  selector:
    matchLabels:
      app: lb-updater
  replicas: 1
  template:
    metadata:
      labels:
        app: lb-updater
    spec:
      serviceAccountName: nodeport-proxy
      containers:
      - name: lb-updater
        image: '{{ .Values.nodePortPoxy.image.repository }}:{{ .Values.nodePortPoxy.image.tag }}'
        command:
        - /lb-updater
        args:
        - "-lb-namespace=$(MY_NAMESPACE)"
        - "-lb-name=nodeport-lb"
        - "-logtostderr"
        env:
        - name: MY_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
{{ toYaml .Values.nodePortPoxy.resources.lbUpdater | indent 10 }}
      imagePullSecrets:
      - name: quay
      nodeSelector:
{{ toYaml .Values.nodePortPoxy.lbUpdater.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.nodePortPoxy.lbUpdater.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.nodePortPoxy.lbUpdater.tolerations | indent 8 }}
