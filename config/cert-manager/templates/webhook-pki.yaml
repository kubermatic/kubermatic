# Create a selfsigned Issuer, in order to create a root CA certificate for
# signing webhook serving certificates
apiVersion: certmanager.k8s.io/v1alpha1
kind: Issuer
metadata:
  name: webhook-selfsign
spec:
  selfSigned: {}

---
# Generate a CA Certificate used to sign certificates for the webhook
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: webhook-ca
spec:
  secretName: webhook-ca
  duration: 43800h # 5y
  issuerRef:
    name: webhook-selfsign
  commonName: 'ca.webhook.{{ .Release.Namespace }}'
  isCA: true

---
# Create an Issuer that uses the above generated CA certificate to issue certs
apiVersion: certmanager.k8s.io/v1alpha1
kind: Issuer
metadata:
  name: webhook-ca
spec:
  ca:
    secretName: webhook-ca

---
# Finally, generate a serving certificate for the webhook to use
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: webhook-tls
spec:
  secretName: webhook-tls
  duration: 8760h # 1y
  issuerRef:
    name: webhook-ca
  dnsNames:
  - webhook
  - 'webhook.{{ .Release.Namespace }}'
  - 'webhook.{{ .Release.Namespace }}.svc'
