# Copyright 2020 The Kubermatic Kubernetes Platform contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: dashboard-metrics-scraper
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: '{{ .Chart.Version }}'
    app.kubernetes.io/managed-by: helm
  name: '{{ template "scraper-name" . }}'
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: dashboard-metrics-scraper
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/version: '{{ .Chart.Version }}'
      app.kubernetes.io/managed-by: helm
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dashboard-metrics-scraper
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: '{{ .Chart.Version }}'
        app.kubernetes.io/managed-by: helm
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'runtime/default'
    spec:
      containers:
        - name: dashboard-metrics-scraper
          image: {{ .Values.dashboard.images.scraper.repository }}:{{ .Values.dashboard.images.scraper.tag }}
          imagePullPolicy: {{ .Values.dashboard.images.scraper.pullPolicy }}
          ports:
            - containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 8000
            initialDelaySeconds: 30
            timeoutSeconds: 30
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1001
            runAsGroup: 2001
      serviceAccountName: '{{ template "dashboard-name" . }}'
      nodeSelector:
{{ toYaml .Values.dashboard.deployment.scraper.nodeSelector | indent 8 }}
      affinity:
{{ (tpl (toYaml .Values.dashboard.deployment.scraper.affinity) .) | fromYaml | toYaml | indent 8 }}
      tolerations:
{{ toYaml .Values.dashboard.deployment.scraper.tolerations | indent 8 }}
      volumes:
      - name: tmp-volume
        emptyDir: {}
