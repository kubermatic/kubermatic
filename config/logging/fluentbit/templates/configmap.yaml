apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/version: '{{ .Values.logging.fluentbit.image.tag }}'
    app.kubernetes.io/managed-by: helm
data:
  # Configuration files: server, input, filters and output
  # ======================================================
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     info
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020

    @INCLUDE kubernetes.conf
    {{- if .Values.logging.fluentbit.configuration.collectSystemd }}
    @INCLUDE systemd.conf
    {{- end }}
    {{- if .Values.logging.fluentbit.configuration.collectKernelMessages }}
    @INCLUDE kmesg.conf
    {{- end }}

    # We attach the node name to each log line
    [FILTER]
        Name modify
        Match *
        Set node ${NODE_NAME}

    @INCLUDE outputs.conf

  kubernetes.conf: |
    [INPUT]
        Name              tail
        Tag               kube.*
        Path              /var/log/containers/*.log
        Parser            {{ .Values.logging.fluentbit.configuration.containerRuntimeParser }}
        DB                /var/log/flb_kube.db
        Mem_Buf_Limit     5MB
        Skip_Long_Lines   On
        Refresh_Interval  10

    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_URL            https://kubernetes.default.svc.cluster.local:443
        Merge_Log           On
        Merge_Log_Trim      On
        K8S-Logging.Parser  On
        Annotations         Off

    # Set the source field so we can later check identify from which input the data was coming
    [FILTER]
        Name modify
        Match kube.*
        Set source kubernetes

  systemd.conf: |
    ############################################################
    # Systemd / Journald
    ############################################################
    # We simply expect that journald either stores logs to /var/log/journal (persistent) or /run/log/journal/ (in memory)
    # Persistent is the default on most operating systems, in memory though is the journald default.
    # By using both we should cover 95% of all systems. FluentBit will just log an error in case one directory does not exist - Acceptable
    [INPUT]
        Name              systemd
        Path              /var/log/journal
        Tag               systemd.*
        DB                /var/log/fluentbit_systemd_persistent.db
        Max_Entries       1000
        Read_From_Tail    true
        Strip_Underscores true
    [INPUT]
        Name              systemd
        Path              /run/log/journal
        Tag               systemd.*
        DB                /var/log/fluentbit_systemd_volatile.db
        Max_Entries       1000
        Read_From_Tail    true
        Strip_Underscores true

    # Only keep the relevant fields
    [FILTER]
        Name record_modifier
        Match systemd.*
        Whitelist_key SYSTEMD_UNIT
        Whitelist_key MESSAGE
        Whitelist_key SYSTEMD_CGROUP
        Whitelist_key CMDLINE
        Whitelist_key EXE
        Whitelist_key SYSLOG_IDENTIFIER
        Whitelist_key SYSTEMD_SLICE
        Whitelist_key SOURCE_REALTIME_TIMESTAMP

    # Give all fields except MESSAGE a prefix, so we can later nest all prefixed fields below "systemd"
    # Also lowercase all systemd keys to be consistend with the kubernetes fields
    [FILTER]
        Name modify
        Match systemd.*
        Set source systemd
        # We use log for all logging. Using a consistent field makes searching easier
        Rename MESSAGE log
        # Add a _NEST prefix so we can nest only those
        Rename SYSTEMD_UNIT _NEST_systemd_unit
        Rename SYSTEMD_CGROUP _NEST_systemd_group
        Rename SYSTEMD_SLICE _NEST_systemd_slice
        Rename CMDLINE _NEST_cmdline
        Rename EXE _NEST_exe
        Rename SYSLOG_IDENTIFIER _NEST_syslog_identifier
        Rename SOURCE_REALTIME_TIMESTAMP _NEST_source_realtime_timestamp

    # We nest all systemd specific fields below a top level systemd key. That makes it easier to check what fields we have available during troubleshooting
    [FILTER]
        Name nest
        Match systemd.*
        Operation nest
        Wildcard _NEST_*
        Nest_under systemd
        Remove_prefix _NEST_

    # When using systemd as cgroup driver, runc tests systemd compatibility with each invocation (At least it looks like that).
    # Systemd logs the creation & deletion of the cgroup creation each time. Which can result in 100+ messages per minute
    # https://www.ibm.com/support/knowledgecenter/en/SSBS6K_3.2.0/troubleshoot/cgroup_driver.html
    # This filter will filter all messages related to the test cgroups
    [FILTER]
        Name    grep
        Match systemd.*
        Exclude log libcontainer.*?test_default\.slice

  kmesg.conf: |
    ############################################################
    # kmesg
    ############################################################
    [INPUT]
        Name   kmsg
        Tag    kmsg

    # Only keep the relevant fields
    [FILTER]
        Name record_modifier
        Match kmsg
        Whitelist_key msg
        Whitelist_key priority

    [FILTER]
        Name modify
        Match kmsg
        Set source kmsg
        Rename msg log
        Rename priority _NEST_priority

    [FILTER]
        Name nest
        Match kmesg
        Operation nest
        Wildcard _NEST_*
        Nest_under kmesg
        Remove_prefix _NEST_

  outputs.conf: |
{{- range .Values.logging.fluentbit.configuration.outputs }}
    [OUTPUT]
{{ . | indent 6 }}
{{- end }}

  parsers.conf: |
    [PARSER]
        Name   apache
        Format regex
        Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
        Time_Key time
        Time_Format %d/%b/%Y:%H:%M:%S %z

    [PARSER]
        Name   apache2
        Format regex
        Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
        Time_Key time
        Time_Format %d/%b/%Y:%H:%M:%S %z

    [PARSER]
        Name   apache_error
        Format regex
        Regex  ^\[[^ ]* (?<time>[^\]]*)\] \[(?<level>[^\]]*)\](?: \[pid (?<pid>[^\]]*)\])?( \[client (?<client>[^\]]*)\])? (?<message>.*)$

    [PARSER]
        Name   nginx
        Format regex
        Regex ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
        Time_Key time
        Time_Format %d/%b/%Y:%H:%M:%S %z

    [PARSER]
        Name        json
        Format      json
        Time_Key    time
        Time_Format %d/%b/%Y:%H:%M:%S %z

    [PARSER]
        Name        json_iso
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S%z

    [PARSER]
        Name        docker
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep   On
        # Command      |  Decoder | Field | Optional Action
        # =============|==================|=================
        Decode_Field_As   escaped    log

    [PARSER]
        Name        containerd
        Format      regex
        Regex       ^(?<time>[A-Z0-9.:-]+) (?<stream>[a-z0-9]+) (?<tags>[A-Z:]+)\s*(?<log>.*)$
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z

    # Legacy format before tags were introduced, see
    # https://github.com/kubernetes/community/blob/master/contributors/design-proposals/node/kubelet-cri-logging.md
    [PARSER]
        Name        containerd3
        Format      regex
        Regex       ^(?<time>[A-Z0-9.:-]+) (?<stream>[a-z0-9]+)\s*(?<log>.*)$
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z

    [PARSER]
        Name        syslog
        Format      regex
        Regex       ^\<(?<pri>[0-9]+)\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$
        Time_Key    time
        Time_Format %b %d %H:%M:%S

    [PARSER]
        Name        glog
        Format      regex
        Regex       ^(?<level>[A-Z])(?<time>[0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2}\.[0-9]+)\s+(?<thread>[0-9]+)\s+(?<file>[^:]+):(?<line>[0-9]+)\]\s*(?<message>.*)$
        Time_Key    time
        Time_Format %m%d %H:%M:%S.%L
        Types       thread:integer line:integer
