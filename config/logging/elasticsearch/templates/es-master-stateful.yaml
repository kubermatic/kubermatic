apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: es-master
  labels:
    component: elasticsearch
    role: master
spec:
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  serviceName: es-master
  replicas: {{ .Values.logging.elasticsearch.master.replicas }}
  selector:
    matchLabels:
      component: elasticsearch
      role: master
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/es-configmap.yaml") . | sha256sum }}
      labels:
        component: elasticsearch
        role: master
    spec:
      serviceAccountName: es-master
      securityContext:
        fsGroup: 1000
      initContainers:
      - name: sysctl
        image: '{{ .Values.logging.elasticsearch.init.image.repository }}:{{ .Values.logging.elasticsearch.init.image.tag }}'
        imagePullPolicy: {{ .Values.logging.elasticsearch.init.image.pullPolicy }}
        command:
        - sh
        - -c
        - "ulimit -n 65536 && sysctl -w vm.max_map_count=262144"
        securityContext:
          privileged: true
      - name: chown
        image: '{{ .Values.logging.elasticsearch.image.repository }}:{{ .Values.logging.elasticsearch.image.tag }}'
        imagePullPolicy: {{ .Values.logging.elasticsearch.image.pullPolicy }}
        command:
        - /bin/bash
        - -c
        - >
          set -e;
          set -x;
          chown elasticsearch:elasticsearch /usr/share/elasticsearch/data;
          for datadir in $(find /usr/share/elasticsearch/data -mindepth 1 -maxdepth 1 -not -name ".snapshot"); do
            chown -R elasticsearch:elasticsearch $datadir;
          done;
          chown elasticsearch:elasticsearch /usr/share/elasticsearch/logs;
          for logfile in $(find /usr/share/elasticsearch/logs -mindepth 1 -maxdepth 1 -not -name ".snapshot"); do
            chown -R elasticsearch:elasticsearch $logfile;
          done
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: storage
          mountPath: /usr/share/elasticsearch/data

      containers:
      - name: elasticsearch
        image: '{{ .Values.logging.elasticsearch.image.repository }}:{{ .Values.logging.elasticsearch.image.tag }}'
        imagePullPolicy: {{ .Values.logging.elasticsearch.image.pullPolicy }}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_MASTER
          value: "true"
        - name: NODE_INGEST
          value: "false"
        - name: NODE_DATA
          value: "false"
        - name: ES_JAVA_OPTS
          value: "-Djava.net.preferIPv4Stack=true {{ .Values.logging.elasticsearch.cluster.additionalJavaOpts }} {{ .Values.logging.elasticsearch.master.additionalJavaOpts }}"
        - name: DISCOVERY_SERVICE
          value: es-master
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        {{- range $key, $value := .Values.logging.elasticsearch.cluster.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        ports:
        - containerPort: 9200
          name: http
        - containerPort: 9300
          name: transport
        livenessProbe:
          httpGet:
            path: /_cluster/health
            port: http
          initialDelaySeconds: 120
          timeoutSeconds: 10
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: transport
          timeoutSeconds: 10
          periodSeconds: 10
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/bash
              - /pre-stop-hook.sh
          postStart:
            exec:
              command:
              - /bin/bash
              - /post-start-hook.sh
        resources:
{{ toYaml .Values.logging.elasticsearch.master.resources | indent 10 }}
        volumeMounts:
        - name: storage
          mountPath: /usr/share/elasticsearch/data
        - name: config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
        - mountPath: /usr/share/elasticsearch/config/log4j2.properties
          name: config
          subPath: log4j2.properties
        - name: config
          mountPath: /post-start-hook.sh
          subPath: post-start-hook.sh
        - name: config
          mountPath: /pre-stop-hook.sh
          subPath: pre-stop-hook.sh
      volumes:
      - name: config
        configMap:
          name: es-config
      securityContext:
        fsGroup: 1000
      nodeSelector:
{{ toYaml .Values.logging.elasticsearch.master.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.logging.elasticsearch.master.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.logging.elasticsearch.master.tolerations | indent 8 }}
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      storageClassName: kubermatic-fast
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: {{ .Values.logging.elasticsearch.master.storageSize }}
