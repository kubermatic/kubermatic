server {
  server_name _;
  listen 443;

  ssl on;
  ssl_certificate /etc/secrets/proxy.crt;
  ssl_certificate_key /etc/secrets/proxy.key;
  ssl_dhparam /etc/secrets/dhparam;

  # don't use SSLv3 because of POODLE
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
  ssl_prefer_server_ciphers on;

  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;

  ssl_session_tickets off;
  ssl_stapling on;
  ssl_stapling_verify on;
  resolver 8.8.8.8 8.8.4.4 valid=300s;
  resolver_timeout 5s;

  add_header Strict-Transport-Security max-age=15638400;
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;

  location / {
      proxy_set_header        Host $host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header        X-Forwarded-Proto $scheme;

      location / {
        # CORS settings
        set $cors "";
        if ($http_origin ~* ^(https://(.*\.)?kubermatic\.io|http://localhost:8000)(/.*)?$) {
            set $cors "true";
        }
        if ($request_method = OPTIONS) {
            set $cors "${cors}-options";
        }
        if ($request_method ~* (GET|POST|PUT|DELETE)) {
            set $cors "${cors}-other";
        }
        if ($cors = true) {
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;
        }
        if ($cors = true-other) {
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Etag,Authorization,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type' always;
        }
        if ($cors = true-options) {
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Etag,Authorization,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        proxy_pass https://host-private:6443;

        # Proxy settings
        # disable buffering so that watch works
        proxy_buffering off;
        proxy_connect_timeout 159s;
        proxy_send_timeout   600s;
        proxy_read_timeout   600s;

        # Disable retry
        proxy_next_upstream off;
      }

      # Support web sockets
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
  }
}
