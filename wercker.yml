dev:
  box: golang:1.6
  steps:
    - setup-go-workspace:
        package-dir: github.com/kubermatic/api
    - internal/watch:
        code: |
          set -e
          make build GOBUILD="go install"
          echo "Build finished."
        reload: true

build:
  box: golang:1.6
  steps:
    - setup-go-workspace:
        package-dir: github.com/kubermatic/api
    - script:
        name: install go tools
        code: |
          go version
          go get github.com/alecthomas/gometalinter
          go get github.com/axw/gocov/gocov # https://github.com/golang/go/issues/6909
          # go get github.com/mattn/goveralls
          git describe --tags |tee VERSION
          gometalinter --install --update --force
    - script:
        name: build and test
        code: |
          CGO_ENABLED=0 GOBUILD="go install" make
    - script:
        name: copy to deployment directory
        code: |
          mkdir -p "$WERCKER_OUTPUT_DIR/opt"
          cp -av alpine-3.1.tar.bz2 kubermatic-api kubermatic-cluster-controller "$WERCKER_OUTPUT_DIR"
          cp datacenters.yaml "$WERCKER_OUTPUT_DIR/opt"
          cp -avx template "$WERCKER_OUTPUT_DIR/opt/"

deploy:
  box: ubuntu:14.04
  rolling-update:
    - script:
        code: apt-get install -y ca-certificates
    - script:
        code: |
          tar -xvjf alpine-3.1.tar.bz2
          rm -f alpine-3.1.tar.bz2
    - internal/docker-scratch-push:
        name: push to docker hub as $WERCKER_GIT_COMMIT
        author: Dr. Stefan Schimanski <stefan.schimanski@gmail.com>
        cmd: /kubermatic-api
        username: $USERNAME
        password: $PASSWORD
        email: stefan.schimanski@gmail.com
        tag: $WERCKER_GIT_COMMIT
        working-dir: /opt
        repository: kubermatic/api
        registry: https://registry.hub.docker.com
    - kubectl:
        server: $KUBERNETES_MASTER
        username: $KUBERNETES_USERNAME
        password: $KUBERNETES_PASSWORD
        command: rolling-update --namespace=api --poll-interval=500ms --update-period=2s kubermatic-api-v1
        image: kubermatic/api:$WERCKER_GIT_COMMIT
    - kubectl:
        server: $KUBERNETES_MASTER
        username: $KUBERNETES_USERNAME
        password: $KUBERNETES_PASSWORD
        command: rolling-update --namespace=control --poll-interval=500ms --update-period=2s cluster-controller-v1
        image: kubermatic/api:$WERCKER_GIT_COMMIT
    - internal/docker-scratch-push:
        name: push to docker hub as latest
        author: Dr. Stefan Schimanski <stefan.schimanski@gmail.com>
        cmd: /kubermatic-api
        username: $USERNAME
        password: $PASSWORD
        email: stefan.schimanski@gmail.com
        tag: latest
        working-dir: /opt
        repository: kubermatic/api
        registry: https://registry.hub.docker.com
  rollback-api:
    - script:
        code: apt-get install -y ca-certificates
    - kubectl:
        server: $KUBERNETES_MASTER
        username: $KUBERNETES_USERNAME
        password: $KUBERNETES_PASSWORD
        command: rolling-update --namespace=api --poll-interval=500ms --update-period=2s kubermatic-api-v1 --rollback
        image: kubermatic/api:$WERCKER_GIT_COMMIT
  rollback-cluster-controller-do-ams2:
    - script:
        code: apt-get install -y ca-certificates
    - kubectl:
        server: $KUBERNETES_MASTER
        username: $KUBERNETES_USERNAME
        password: $KUBERNETES_PASSWORD
        command: rolling-update --namespace=control --poll-interval=500ms --update-period=2s cluster-controller-v1 --rollback
        image: kubermatic/api:$WERCKER_GIT_COMMIT
