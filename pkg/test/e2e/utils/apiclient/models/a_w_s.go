// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AWS a w s
//
// swagger:model AWS
type AWS struct {

	// Access Key ID to authenticate against AWS.
	AccessKeyID string `json:"accessKeyID,omitempty"`

	// assume role a r n
	AssumeRoleARN string `json:"assumeRoleARN,omitempty"`

	// assume role external ID
	AssumeRoleExternalID string `json:"assumeRoleExternalID,omitempty"`

	// ARN to use. This can be configured, but if left empty will be
	// automatically filled in during reconciliation.
	ControlPlaneRoleARN string `json:"roleARN,omitempty"`

	// If datacenter is set, this preset is only applicable to the
	// configured datacenter.
	Datacenter string `json:"datacenter,omitempty"`

	// Only enabled presets will be available in the KKP dashboard.
	Enabled bool `json:"enabled,omitempty"`

	// Instance profile to use. This can be configured, but if left empty will be
	// automatically filled in during reconciliation.
	InstanceProfileName string `json:"instanceProfileName,omitempty"`

	// Route table to use. This can be configured, but if left empty will be
	// automatically filled in during reconciliation.
	RouteTableID string `json:"routeTableID,omitempty"`

	// Secret Access Key to authenticate against AWS.
	SecretAccessKey string `json:"secretAccessKey,omitempty"`

	// Security group to use. This can be configured, but if left empty will be
	// automatically filled in during reconciliation.
	SecurityGroupID string `json:"securityGroupID,omitempty"`

	// AWS VPC to use. Must be configured.
	VPCID string `json:"vpcID,omitempty"`
}

// Validate validates this a w s
func (m *AWS) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this a w s based on context it is used
func (m *AWS) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AWS) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AWS) UnmarshalBinary(b []byte) error {
	var res AWS
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
