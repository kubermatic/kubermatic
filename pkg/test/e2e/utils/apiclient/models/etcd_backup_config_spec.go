// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// EtcdBackupConfigSpec EtcdBackupConfigSpec represents an object holding the etcd backup configuration specification
//
// swagger:model EtcdBackupConfigSpec
type EtcdBackupConfigSpec struct {

	// ClusterID is the id of the cluster which will be backed up
	ClusterID string `json:"clusterId,omitempty"`

	// Keep is the number of backups to keep around before deleting the oldest one
	// If not set, defaults to DefaultKeptBackupsCount. Only used if Schedule is set.
	Keep int64 `json:"keep,omitempty"`

	// Schedule is a cron expression defining when to perform
	// the backup. If not set, the backup is performed exactly
	// once, immediately.
	Schedule string `json:"schedule,omitempty"`
}

// Validate validates this etcd backup config spec
func (m *EtcdBackupConfigSpec) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this etcd backup config spec based on context it is used
func (m *EtcdBackupConfigSpec) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EtcdBackupConfigSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EtcdBackupConfigSpec) UnmarshalBinary(b []byte) error {
	var res EtcdBackupConfigSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
