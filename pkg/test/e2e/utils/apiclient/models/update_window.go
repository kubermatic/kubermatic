// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UpdateWindow UpdateWindow allows defining windows for maintenance tasks related to OS updates.
//
// This is only applied to cluster nodes using Flatcar Linux.
// The reference time for this is the node system time and might differ from
// the user's timezone, which needs to be considered when configuring a window.
//
// swagger:model UpdateWindow
type UpdateWindow struct {

	// Sets the length of the update window beginning with the start time. This needs to be a valid duration
	// as parsed by Go's time.ParseDuration (https://pkg.go.dev/time#ParseDuration), e.g. `2h`.
	Length string `json:"length,omitempty"`

	// Sets the start time of the update window. This can be a time of day in 24h format, e.g. `22:30`,
	// or a day of week plus a time of day, for example `Mon 21:00`. Only short names for week days are supported,
	// i.e. `Mon`, `Tue`, `Wed`, `Thu`, `Fri`, `Sat` and `Sun`.
	Start string `json:"start,omitempty"`
}

// Validate validates this update window
func (m *UpdateWindow) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update window based on context it is used
func (m *UpdateWindow) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpdateWindow) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateWindow) UnmarshalBinary(b []byte) error {
	var res UpdateWindow
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
