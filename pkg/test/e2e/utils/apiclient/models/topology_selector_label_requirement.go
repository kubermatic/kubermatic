// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// TopologySelectorLabelRequirement A topology selector requirement is a selector that matches given label.
//
// This is an alpha feature and may change in the future.
//
// swagger:model TopologySelectorLabelRequirement
type TopologySelectorLabelRequirement struct {

	// The label key that the selector applies to.
	Key string `json:"key,omitempty"`

	// An array of string values. One value must match the label to be selected.
	// Each entry in Values is ORed.
	Values []string `json:"values"`
}

// Validate validates this topology selector label requirement
func (m *TopologySelectorLabelRequirement) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this topology selector label requirement based on context it is used
func (m *TopologySelectorLabelRequirement) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TopologySelectorLabelRequirement) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TopologySelectorLabelRequirement) UnmarshalBinary(b []byte) error {
	var res TopologySelectorLabelRequirement
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
