// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AnexiaDiskConfig AnexiaDiskConfig defines a single disk for a node at anexia
//
// swagger:model AnexiaDiskConfig
type AnexiaDiskConfig struct {

	// PerformanceType configures the performance type this disks of each node will have.
	// Known values are something like "ENT3" or "HPC2".
	PerformanceType string `json:"performanceType,omitempty"`

	// Disks configures this disk of each node will have.
	// Required: true
	Size *int64 `json:"size"`
}

// Validate validates this anexia disk config
func (m *AnexiaDiskConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AnexiaDiskConfig) validateSize(formats strfmt.Registry) error {

	if err := validate.Required("size", "body", m.Size); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this anexia disk config based on context it is used
func (m *AnexiaDiskConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AnexiaDiskConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AnexiaDiskConfig) UnmarshalBinary(b []byte) error {
	var res AnexiaDiskConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
