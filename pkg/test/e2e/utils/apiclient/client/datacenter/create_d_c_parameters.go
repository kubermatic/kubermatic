// Code generated by go-swagger; DO NOT EDIT.

package datacenter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCreateDCParams creates a new CreateDCParams object
// with the default values initialized.
func NewCreateDCParams() *CreateDCParams {
	var ()
	return &CreateDCParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateDCParamsWithTimeout creates a new CreateDCParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateDCParamsWithTimeout(timeout time.Duration) *CreateDCParams {
	var ()
	return &CreateDCParams{

		timeout: timeout,
	}
}

// NewCreateDCParamsWithContext creates a new CreateDCParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateDCParamsWithContext(ctx context.Context) *CreateDCParams {
	var ()
	return &CreateDCParams{

		Context: ctx,
	}
}

// NewCreateDCParamsWithHTTPClient creates a new CreateDCParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateDCParamsWithHTTPClient(client *http.Client) *CreateDCParams {
	var ()
	return &CreateDCParams{
		HTTPClient: client,
	}
}

/*CreateDCParams contains all the parameters to send to the API endpoint
for the create d c operation typically these are written to a http.Request
*/
type CreateDCParams struct {

	/*Body*/
	Body CreateDCBody
	/*SeedName*/
	Seed string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create d c params
func (o *CreateDCParams) WithTimeout(timeout time.Duration) *CreateDCParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create d c params
func (o *CreateDCParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create d c params
func (o *CreateDCParams) WithContext(ctx context.Context) *CreateDCParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create d c params
func (o *CreateDCParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create d c params
func (o *CreateDCParams) WithHTTPClient(client *http.Client) *CreateDCParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create d c params
func (o *CreateDCParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the create d c params
func (o *CreateDCParams) WithBody(body CreateDCBody) *CreateDCParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the create d c params
func (o *CreateDCParams) SetBody(body CreateDCBody) {
	o.Body = body
}

// WithSeed adds the seedName to the create d c params
func (o *CreateDCParams) WithSeed(seedName string) *CreateDCParams {
	o.SetSeed(seedName)
	return o
}

// SetSeed adds the seedName to the create d c params
func (o *CreateDCParams) SetSeed(seedName string) {
	o.Seed = seedName
}

// WriteToRequest writes these params to a swagger request
func (o *CreateDCParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	// path param seed_name
	if err := r.SetPathParam("seed_name", o.Seed); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
