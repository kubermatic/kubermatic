// Code generated by go-swagger; DO NOT EDIT.

package datacenter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/kubermatic/v2/pkg/test/e2e/utils/apiclient/models"
)

// ListDCForProviderReader is a Reader for the ListDCForProvider structure.
type ListDCForProviderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListDCForProviderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListDCForProviderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListDCForProviderUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListDCForProviderForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListDCForProviderDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListDCForProviderOK creates a ListDCForProviderOK with default headers values
func NewListDCForProviderOK() *ListDCForProviderOK {
	return &ListDCForProviderOK{}
}

/* ListDCForProviderOK describes a response with status code 200, with default header values.

Datacenter
*/
type ListDCForProviderOK struct {
	Payload []*models.Datacenter
}

// IsSuccess returns true when this list d c for provider o k response has a 2xx status code
func (o *ListDCForProviderOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list d c for provider o k response has a 3xx status code
func (o *ListDCForProviderOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list d c for provider o k response has a 4xx status code
func (o *ListDCForProviderOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list d c for provider o k response has a 5xx status code
func (o *ListDCForProviderOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list d c for provider o k response a status code equal to that given
func (o *ListDCForProviderOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListDCForProviderOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/providers/{provider_name}/dc][%d] listDCForProviderOK  %+v", 200, o.Payload)
}

func (o *ListDCForProviderOK) String() string {
	return fmt.Sprintf("[GET /api/v1/providers/{provider_name}/dc][%d] listDCForProviderOK  %+v", 200, o.Payload)
}

func (o *ListDCForProviderOK) GetPayload() []*models.Datacenter {
	return o.Payload
}

func (o *ListDCForProviderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDCForProviderUnauthorized creates a ListDCForProviderUnauthorized with default headers values
func NewListDCForProviderUnauthorized() *ListDCForProviderUnauthorized {
	return &ListDCForProviderUnauthorized{}
}

/* ListDCForProviderUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type ListDCForProviderUnauthorized struct {
}

// IsSuccess returns true when this list d c for provider unauthorized response has a 2xx status code
func (o *ListDCForProviderUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list d c for provider unauthorized response has a 3xx status code
func (o *ListDCForProviderUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list d c for provider unauthorized response has a 4xx status code
func (o *ListDCForProviderUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list d c for provider unauthorized response has a 5xx status code
func (o *ListDCForProviderUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list d c for provider unauthorized response a status code equal to that given
func (o *ListDCForProviderUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ListDCForProviderUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/providers/{provider_name}/dc][%d] listDCForProviderUnauthorized ", 401)
}

func (o *ListDCForProviderUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v1/providers/{provider_name}/dc][%d] listDCForProviderUnauthorized ", 401)
}

func (o *ListDCForProviderUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListDCForProviderForbidden creates a ListDCForProviderForbidden with default headers values
func NewListDCForProviderForbidden() *ListDCForProviderForbidden {
	return &ListDCForProviderForbidden{}
}

/* ListDCForProviderForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type ListDCForProviderForbidden struct {
}

// IsSuccess returns true when this list d c for provider forbidden response has a 2xx status code
func (o *ListDCForProviderForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list d c for provider forbidden response has a 3xx status code
func (o *ListDCForProviderForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list d c for provider forbidden response has a 4xx status code
func (o *ListDCForProviderForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list d c for provider forbidden response has a 5xx status code
func (o *ListDCForProviderForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list d c for provider forbidden response a status code equal to that given
func (o *ListDCForProviderForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListDCForProviderForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/providers/{provider_name}/dc][%d] listDCForProviderForbidden ", 403)
}

func (o *ListDCForProviderForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/providers/{provider_name}/dc][%d] listDCForProviderForbidden ", 403)
}

func (o *ListDCForProviderForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListDCForProviderDefault creates a ListDCForProviderDefault with default headers values
func NewListDCForProviderDefault(code int) *ListDCForProviderDefault {
	return &ListDCForProviderDefault{
		_statusCode: code,
	}
}

/* ListDCForProviderDefault describes a response with status code -1, with default header values.

errorResponse
*/
type ListDCForProviderDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the list d c for provider default response
func (o *ListDCForProviderDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this list d c for provider default response has a 2xx status code
func (o *ListDCForProviderDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list d c for provider default response has a 3xx status code
func (o *ListDCForProviderDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list d c for provider default response has a 4xx status code
func (o *ListDCForProviderDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list d c for provider default response has a 5xx status code
func (o *ListDCForProviderDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list d c for provider default response a status code equal to that given
func (o *ListDCForProviderDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ListDCForProviderDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/providers/{provider_name}/dc][%d] listDCForProvider default  %+v", o._statusCode, o.Payload)
}

func (o *ListDCForProviderDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/providers/{provider_name}/dc][%d] listDCForProvider default  %+v", o._statusCode, o.Payload)
}

func (o *ListDCForProviderDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListDCForProviderDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
