// Code generated by go-swagger; DO NOT EDIT.

package ipampool

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/kubermatic/v2/pkg/test/e2e/utils/apiclient/models"
)

// ApplyIPAMPoolReader is a Reader for the ApplyIPAMPool structure.
type ApplyIPAMPoolReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ApplyIPAMPoolReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewApplyIPAMPoolCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewApplyIPAMPoolUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewApplyIPAMPoolForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewApplyIPAMPoolDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewApplyIPAMPoolCreated creates a ApplyIPAMPoolCreated with default headers values
func NewApplyIPAMPoolCreated() *ApplyIPAMPoolCreated {
	return &ApplyIPAMPoolCreated{}
}

/* ApplyIPAMPoolCreated describes a response with status code 201, with default header values.

EmptyResponse is a empty response
*/
type ApplyIPAMPoolCreated struct {
}

func (o *ApplyIPAMPoolCreated) Error() string {
	return fmt.Sprintf("[PUT /api/v2/ipampools][%d] applyIpAMPoolCreated ", 201)
}

func (o *ApplyIPAMPoolCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewApplyIPAMPoolUnauthorized creates a ApplyIPAMPoolUnauthorized with default headers values
func NewApplyIPAMPoolUnauthorized() *ApplyIPAMPoolUnauthorized {
	return &ApplyIPAMPoolUnauthorized{}
}

/* ApplyIPAMPoolUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type ApplyIPAMPoolUnauthorized struct {
}

func (o *ApplyIPAMPoolUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/ipampools][%d] applyIpAMPoolUnauthorized ", 401)
}

func (o *ApplyIPAMPoolUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewApplyIPAMPoolForbidden creates a ApplyIPAMPoolForbidden with default headers values
func NewApplyIPAMPoolForbidden() *ApplyIPAMPoolForbidden {
	return &ApplyIPAMPoolForbidden{}
}

/* ApplyIPAMPoolForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type ApplyIPAMPoolForbidden struct {
}

func (o *ApplyIPAMPoolForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/ipampools][%d] applyIpAMPoolForbidden ", 403)
}

func (o *ApplyIPAMPoolForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewApplyIPAMPoolDefault creates a ApplyIPAMPoolDefault with default headers values
func NewApplyIPAMPoolDefault(code int) *ApplyIPAMPoolDefault {
	return &ApplyIPAMPoolDefault{
		_statusCode: code,
	}
}

/* ApplyIPAMPoolDefault describes a response with status code -1, with default header values.

errorResponse
*/
type ApplyIPAMPoolDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the apply IP a m pool default response
func (o *ApplyIPAMPoolDefault) Code() int {
	return o._statusCode
}

func (o *ApplyIPAMPoolDefault) Error() string {
	return fmt.Sprintf("[PUT /api/v2/ipampools][%d] applyIPAMPool default  %+v", o._statusCode, o.Payload)
}
func (o *ApplyIPAMPoolDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ApplyIPAMPoolDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
