// Code generated by go-swagger; DO NOT EDIT.

package kubevirt

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/kubermatic/v2/pkg/test/e2e/utils/apiclient/models"
)

// ListKubeVirtPreferencesReader is a Reader for the ListKubeVirtPreferences structure.
type ListKubeVirtPreferencesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListKubeVirtPreferencesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListKubeVirtPreferencesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewListKubeVirtPreferencesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListKubeVirtPreferencesOK creates a ListKubeVirtPreferencesOK with default headers values
func NewListKubeVirtPreferencesOK() *ListKubeVirtPreferencesOK {
	return &ListKubeVirtPreferencesOK{}
}

/*
ListKubeVirtPreferencesOK describes a response with status code 200, with default header values.

VirtualMachinePreferenceList
*/
type ListKubeVirtPreferencesOK struct {
	Payload *models.VirtualMachinePreferenceList
}

// IsSuccess returns true when this list kube virt preferences o k response has a 2xx status code
func (o *ListKubeVirtPreferencesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list kube virt preferences o k response has a 3xx status code
func (o *ListKubeVirtPreferencesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list kube virt preferences o k response has a 4xx status code
func (o *ListKubeVirtPreferencesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list kube virt preferences o k response has a 5xx status code
func (o *ListKubeVirtPreferencesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list kube virt preferences o k response a status code equal to that given
func (o *ListKubeVirtPreferencesOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListKubeVirtPreferencesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/providers/kubevirt/preferences][%d] listKubeVirtPreferencesOK  %+v", 200, o.Payload)
}

func (o *ListKubeVirtPreferencesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/providers/kubevirt/preferences][%d] listKubeVirtPreferencesOK  %+v", 200, o.Payload)
}

func (o *ListKubeVirtPreferencesOK) GetPayload() *models.VirtualMachinePreferenceList {
	return o.Payload
}

func (o *ListKubeVirtPreferencesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VirtualMachinePreferenceList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListKubeVirtPreferencesDefault creates a ListKubeVirtPreferencesDefault with default headers values
func NewListKubeVirtPreferencesDefault(code int) *ListKubeVirtPreferencesDefault {
	return &ListKubeVirtPreferencesDefault{
		_statusCode: code,
	}
}

/*
ListKubeVirtPreferencesDefault describes a response with status code -1, with default header values.

errorResponse
*/
type ListKubeVirtPreferencesDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the list kube virt preferences default response
func (o *ListKubeVirtPreferencesDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this list kube virt preferences default response has a 2xx status code
func (o *ListKubeVirtPreferencesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list kube virt preferences default response has a 3xx status code
func (o *ListKubeVirtPreferencesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list kube virt preferences default response has a 4xx status code
func (o *ListKubeVirtPreferencesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list kube virt preferences default response has a 5xx status code
func (o *ListKubeVirtPreferencesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list kube virt preferences default response a status code equal to that given
func (o *ListKubeVirtPreferencesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ListKubeVirtPreferencesDefault) Error() string {
	return fmt.Sprintf("[GET /api/v2/providers/kubevirt/preferences][%d] listKubeVirtPreferences default  %+v", o._statusCode, o.Payload)
}

func (o *ListKubeVirtPreferencesDefault) String() string {
	return fmt.Sprintf("[GET /api/v2/providers/kubevirt/preferences][%d] listKubeVirtPreferences default  %+v", o._statusCode, o.Payload)
}

func (o *ListKubeVirtPreferencesDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListKubeVirtPreferencesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
