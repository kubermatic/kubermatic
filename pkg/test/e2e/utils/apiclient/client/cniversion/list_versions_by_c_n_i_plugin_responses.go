// Code generated by go-swagger; DO NOT EDIT.

package cniversion

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/kubermatic/v2/pkg/test/e2e/utils/apiclient/models"
)

// ListVersionsByCNIPluginReader is a Reader for the ListVersionsByCNIPlugin structure.
type ListVersionsByCNIPluginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListVersionsByCNIPluginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListVersionsByCNIPluginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListVersionsByCNIPluginUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListVersionsByCNIPluginForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListVersionsByCNIPluginDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListVersionsByCNIPluginOK creates a ListVersionsByCNIPluginOK with default headers values
func NewListVersionsByCNIPluginOK() *ListVersionsByCNIPluginOK {
	return &ListVersionsByCNIPluginOK{}
}

/*
ListVersionsByCNIPluginOK describes a response with status code 200, with default header values.

CNIVersions
*/
type ListVersionsByCNIPluginOK struct {
	Payload *models.CNIVersions
}

// IsSuccess returns true when this list versions by c n i plugin o k response has a 2xx status code
func (o *ListVersionsByCNIPluginOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list versions by c n i plugin o k response has a 3xx status code
func (o *ListVersionsByCNIPluginOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list versions by c n i plugin o k response has a 4xx status code
func (o *ListVersionsByCNIPluginOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list versions by c n i plugin o k response has a 5xx status code
func (o *ListVersionsByCNIPluginOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list versions by c n i plugin o k response a status code equal to that given
func (o *ListVersionsByCNIPluginOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListVersionsByCNIPluginOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/cni/{cni_plugin_type}/versions][%d] listVersionsByCNIPluginOK  %+v", 200, o.Payload)
}

func (o *ListVersionsByCNIPluginOK) String() string {
	return fmt.Sprintf("[GET /api/v2/cni/{cni_plugin_type}/versions][%d] listVersionsByCNIPluginOK  %+v", 200, o.Payload)
}

func (o *ListVersionsByCNIPluginOK) GetPayload() *models.CNIVersions {
	return o.Payload
}

func (o *ListVersionsByCNIPluginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CNIVersions)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVersionsByCNIPluginUnauthorized creates a ListVersionsByCNIPluginUnauthorized with default headers values
func NewListVersionsByCNIPluginUnauthorized() *ListVersionsByCNIPluginUnauthorized {
	return &ListVersionsByCNIPluginUnauthorized{}
}

/*
ListVersionsByCNIPluginUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type ListVersionsByCNIPluginUnauthorized struct {
}

// IsSuccess returns true when this list versions by c n i plugin unauthorized response has a 2xx status code
func (o *ListVersionsByCNIPluginUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list versions by c n i plugin unauthorized response has a 3xx status code
func (o *ListVersionsByCNIPluginUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list versions by c n i plugin unauthorized response has a 4xx status code
func (o *ListVersionsByCNIPluginUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list versions by c n i plugin unauthorized response has a 5xx status code
func (o *ListVersionsByCNIPluginUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list versions by c n i plugin unauthorized response a status code equal to that given
func (o *ListVersionsByCNIPluginUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ListVersionsByCNIPluginUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/cni/{cni_plugin_type}/versions][%d] listVersionsByCNIPluginUnauthorized ", 401)
}

func (o *ListVersionsByCNIPluginUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/cni/{cni_plugin_type}/versions][%d] listVersionsByCNIPluginUnauthorized ", 401)
}

func (o *ListVersionsByCNIPluginUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListVersionsByCNIPluginForbidden creates a ListVersionsByCNIPluginForbidden with default headers values
func NewListVersionsByCNIPluginForbidden() *ListVersionsByCNIPluginForbidden {
	return &ListVersionsByCNIPluginForbidden{}
}

/*
ListVersionsByCNIPluginForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type ListVersionsByCNIPluginForbidden struct {
}

// IsSuccess returns true when this list versions by c n i plugin forbidden response has a 2xx status code
func (o *ListVersionsByCNIPluginForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list versions by c n i plugin forbidden response has a 3xx status code
func (o *ListVersionsByCNIPluginForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list versions by c n i plugin forbidden response has a 4xx status code
func (o *ListVersionsByCNIPluginForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list versions by c n i plugin forbidden response has a 5xx status code
func (o *ListVersionsByCNIPluginForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list versions by c n i plugin forbidden response a status code equal to that given
func (o *ListVersionsByCNIPluginForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListVersionsByCNIPluginForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/cni/{cni_plugin_type}/versions][%d] listVersionsByCNIPluginForbidden ", 403)
}

func (o *ListVersionsByCNIPluginForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/cni/{cni_plugin_type}/versions][%d] listVersionsByCNIPluginForbidden ", 403)
}

func (o *ListVersionsByCNIPluginForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListVersionsByCNIPluginDefault creates a ListVersionsByCNIPluginDefault with default headers values
func NewListVersionsByCNIPluginDefault(code int) *ListVersionsByCNIPluginDefault {
	return &ListVersionsByCNIPluginDefault{
		_statusCode: code,
	}
}

/*
ListVersionsByCNIPluginDefault describes a response with status code -1, with default header values.

errorResponse
*/
type ListVersionsByCNIPluginDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the list versions by c n i plugin default response
func (o *ListVersionsByCNIPluginDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this list versions by c n i plugin default response has a 2xx status code
func (o *ListVersionsByCNIPluginDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list versions by c n i plugin default response has a 3xx status code
func (o *ListVersionsByCNIPluginDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list versions by c n i plugin default response has a 4xx status code
func (o *ListVersionsByCNIPluginDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list versions by c n i plugin default response has a 5xx status code
func (o *ListVersionsByCNIPluginDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list versions by c n i plugin default response a status code equal to that given
func (o *ListVersionsByCNIPluginDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ListVersionsByCNIPluginDefault) Error() string {
	return fmt.Sprintf("[GET /api/v2/cni/{cni_plugin_type}/versions][%d] listVersionsByCNIPlugin default  %+v", o._statusCode, o.Payload)
}

func (o *ListVersionsByCNIPluginDefault) String() string {
	return fmt.Sprintf("[GET /api/v2/cni/{cni_plugin_type}/versions][%d] listVersionsByCNIPlugin default  %+v", o._statusCode, o.Payload)
}

func (o *ListVersionsByCNIPluginDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListVersionsByCNIPluginDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
