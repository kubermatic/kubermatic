// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/kubermatic/v2/pkg/test/e2e/utils/apiclient/models"
)

// DeleteGroupProjectBindingReader is a Reader for the DeleteGroupProjectBinding structure.
type DeleteGroupProjectBindingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteGroupProjectBindingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteGroupProjectBindingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteGroupProjectBindingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteGroupProjectBindingForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteGroupProjectBindingDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteGroupProjectBindingOK creates a DeleteGroupProjectBindingOK with default headers values
func NewDeleteGroupProjectBindingOK() *DeleteGroupProjectBindingOK {
	return &DeleteGroupProjectBindingOK{}
}

/*
DeleteGroupProjectBindingOK describes a response with status code 200, with default header values.

EmptyResponse is a empty response
*/
type DeleteGroupProjectBindingOK struct {
}

// IsSuccess returns true when this delete group project binding o k response has a 2xx status code
func (o *DeleteGroupProjectBindingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete group project binding o k response has a 3xx status code
func (o *DeleteGroupProjectBindingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete group project binding o k response has a 4xx status code
func (o *DeleteGroupProjectBindingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete group project binding o k response has a 5xx status code
func (o *DeleteGroupProjectBindingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete group project binding o k response a status code equal to that given
func (o *DeleteGroupProjectBindingOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteGroupProjectBindingOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/groupbindings/{binding_name}][%d] deleteGroupProjectBindingOK ", 200)
}

func (o *DeleteGroupProjectBindingOK) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/groupbindings/{binding_name}][%d] deleteGroupProjectBindingOK ", 200)
}

func (o *DeleteGroupProjectBindingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteGroupProjectBindingUnauthorized creates a DeleteGroupProjectBindingUnauthorized with default headers values
func NewDeleteGroupProjectBindingUnauthorized() *DeleteGroupProjectBindingUnauthorized {
	return &DeleteGroupProjectBindingUnauthorized{}
}

/*
DeleteGroupProjectBindingUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type DeleteGroupProjectBindingUnauthorized struct {
}

// IsSuccess returns true when this delete group project binding unauthorized response has a 2xx status code
func (o *DeleteGroupProjectBindingUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete group project binding unauthorized response has a 3xx status code
func (o *DeleteGroupProjectBindingUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete group project binding unauthorized response has a 4xx status code
func (o *DeleteGroupProjectBindingUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete group project binding unauthorized response has a 5xx status code
func (o *DeleteGroupProjectBindingUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete group project binding unauthorized response a status code equal to that given
func (o *DeleteGroupProjectBindingUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteGroupProjectBindingUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/groupbindings/{binding_name}][%d] deleteGroupProjectBindingUnauthorized ", 401)
}

func (o *DeleteGroupProjectBindingUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/groupbindings/{binding_name}][%d] deleteGroupProjectBindingUnauthorized ", 401)
}

func (o *DeleteGroupProjectBindingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteGroupProjectBindingForbidden creates a DeleteGroupProjectBindingForbidden with default headers values
func NewDeleteGroupProjectBindingForbidden() *DeleteGroupProjectBindingForbidden {
	return &DeleteGroupProjectBindingForbidden{}
}

/*
DeleteGroupProjectBindingForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type DeleteGroupProjectBindingForbidden struct {
}

// IsSuccess returns true when this delete group project binding forbidden response has a 2xx status code
func (o *DeleteGroupProjectBindingForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete group project binding forbidden response has a 3xx status code
func (o *DeleteGroupProjectBindingForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete group project binding forbidden response has a 4xx status code
func (o *DeleteGroupProjectBindingForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete group project binding forbidden response has a 5xx status code
func (o *DeleteGroupProjectBindingForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete group project binding forbidden response a status code equal to that given
func (o *DeleteGroupProjectBindingForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteGroupProjectBindingForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/groupbindings/{binding_name}][%d] deleteGroupProjectBindingForbidden ", 403)
}

func (o *DeleteGroupProjectBindingForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/groupbindings/{binding_name}][%d] deleteGroupProjectBindingForbidden ", 403)
}

func (o *DeleteGroupProjectBindingForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteGroupProjectBindingDefault creates a DeleteGroupProjectBindingDefault with default headers values
func NewDeleteGroupProjectBindingDefault(code int) *DeleteGroupProjectBindingDefault {
	return &DeleteGroupProjectBindingDefault{
		_statusCode: code,
	}
}

/*
DeleteGroupProjectBindingDefault describes a response with status code -1, with default header values.

errorResponse
*/
type DeleteGroupProjectBindingDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the delete group project binding default response
func (o *DeleteGroupProjectBindingDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this delete group project binding default response has a 2xx status code
func (o *DeleteGroupProjectBindingDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete group project binding default response has a 3xx status code
func (o *DeleteGroupProjectBindingDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete group project binding default response has a 4xx status code
func (o *DeleteGroupProjectBindingDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete group project binding default response has a 5xx status code
func (o *DeleteGroupProjectBindingDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete group project binding default response a status code equal to that given
func (o *DeleteGroupProjectBindingDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *DeleteGroupProjectBindingDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/groupbindings/{binding_name}][%d] deleteGroupProjectBinding default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteGroupProjectBindingDefault) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/groupbindings/{binding_name}][%d] deleteGroupProjectBinding default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteGroupProjectBindingDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteGroupProjectBindingDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
