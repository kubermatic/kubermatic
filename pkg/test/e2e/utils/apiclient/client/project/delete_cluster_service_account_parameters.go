// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteClusterServiceAccountParams creates a new DeleteClusterServiceAccountParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteClusterServiceAccountParams() *DeleteClusterServiceAccountParams {
	return &DeleteClusterServiceAccountParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteClusterServiceAccountParamsWithTimeout creates a new DeleteClusterServiceAccountParams object
// with the ability to set a timeout on a request.
func NewDeleteClusterServiceAccountParamsWithTimeout(timeout time.Duration) *DeleteClusterServiceAccountParams {
	return &DeleteClusterServiceAccountParams{
		timeout: timeout,
	}
}

// NewDeleteClusterServiceAccountParamsWithContext creates a new DeleteClusterServiceAccountParams object
// with the ability to set a context for a request.
func NewDeleteClusterServiceAccountParamsWithContext(ctx context.Context) *DeleteClusterServiceAccountParams {
	return &DeleteClusterServiceAccountParams{
		Context: ctx,
	}
}

// NewDeleteClusterServiceAccountParamsWithHTTPClient creates a new DeleteClusterServiceAccountParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteClusterServiceAccountParamsWithHTTPClient(client *http.Client) *DeleteClusterServiceAccountParams {
	return &DeleteClusterServiceAccountParams{
		HTTPClient: client,
	}
}

/*
DeleteClusterServiceAccountParams contains all the parameters to send to the API endpoint

	for the delete cluster service account operation.

	Typically these are written to a http.Request.
*/
type DeleteClusterServiceAccountParams struct {

	// ClusterID.
	ClusterID string

	// Namespace.
	Namespace string

	// ProjectID.
	ProjectID string

	// ServiceAccountID.
	ServiceAccountID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete cluster service account params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteClusterServiceAccountParams) WithDefaults() *DeleteClusterServiceAccountParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete cluster service account params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteClusterServiceAccountParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete cluster service account params
func (o *DeleteClusterServiceAccountParams) WithTimeout(timeout time.Duration) *DeleteClusterServiceAccountParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete cluster service account params
func (o *DeleteClusterServiceAccountParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete cluster service account params
func (o *DeleteClusterServiceAccountParams) WithContext(ctx context.Context) *DeleteClusterServiceAccountParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete cluster service account params
func (o *DeleteClusterServiceAccountParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete cluster service account params
func (o *DeleteClusterServiceAccountParams) WithHTTPClient(client *http.Client) *DeleteClusterServiceAccountParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete cluster service account params
func (o *DeleteClusterServiceAccountParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClusterID adds the clusterID to the delete cluster service account params
func (o *DeleteClusterServiceAccountParams) WithClusterID(clusterID string) *DeleteClusterServiceAccountParams {
	o.SetClusterID(clusterID)
	return o
}

// SetClusterID adds the clusterId to the delete cluster service account params
func (o *DeleteClusterServiceAccountParams) SetClusterID(clusterID string) {
	o.ClusterID = clusterID
}

// WithNamespace adds the namespace to the delete cluster service account params
func (o *DeleteClusterServiceAccountParams) WithNamespace(namespace string) *DeleteClusterServiceAccountParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the delete cluster service account params
func (o *DeleteClusterServiceAccountParams) SetNamespace(namespace string) {
	o.Namespace = namespace
}

// WithProjectID adds the projectID to the delete cluster service account params
func (o *DeleteClusterServiceAccountParams) WithProjectID(projectID string) *DeleteClusterServiceAccountParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the delete cluster service account params
func (o *DeleteClusterServiceAccountParams) SetProjectID(projectID string) {
	o.ProjectID = projectID
}

// WithServiceAccountID adds the serviceAccountID to the delete cluster service account params
func (o *DeleteClusterServiceAccountParams) WithServiceAccountID(serviceAccountID string) *DeleteClusterServiceAccountParams {
	o.SetServiceAccountID(serviceAccountID)
	return o
}

// SetServiceAccountID adds the serviceAccountId to the delete cluster service account params
func (o *DeleteClusterServiceAccountParams) SetServiceAccountID(serviceAccountID string) {
	o.ServiceAccountID = serviceAccountID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteClusterServiceAccountParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param cluster_id
	if err := r.SetPathParam("cluster_id", o.ClusterID); err != nil {
		return err
	}

	// path param namespace
	if err := r.SetPathParam("namespace", o.Namespace); err != nil {
		return err
	}

	// path param project_id
	if err := r.SetPathParam("project_id", o.ProjectID); err != nil {
		return err
	}

	// path param service_account_id
	if err := r.SetPathParam("service_account_id", o.ServiceAccountID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
