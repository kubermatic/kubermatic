// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/kubermatic/v2/pkg/test/e2e/utils/apiclient/models"
)

// DeleteClusterServiceAccountReader is a Reader for the DeleteClusterServiceAccount structure.
type DeleteClusterServiceAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteClusterServiceAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteClusterServiceAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteClusterServiceAccountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteClusterServiceAccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteClusterServiceAccountDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteClusterServiceAccountOK creates a DeleteClusterServiceAccountOK with default headers values
func NewDeleteClusterServiceAccountOK() *DeleteClusterServiceAccountOK {
	return &DeleteClusterServiceAccountOK{}
}

/*
DeleteClusterServiceAccountOK describes a response with status code 200, with default header values.

EmptyResponse is a empty response
*/
type DeleteClusterServiceAccountOK struct {
}

// IsSuccess returns true when this delete cluster service account o k response has a 2xx status code
func (o *DeleteClusterServiceAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete cluster service account o k response has a 3xx status code
func (o *DeleteClusterServiceAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cluster service account o k response has a 4xx status code
func (o *DeleteClusterServiceAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete cluster service account o k response has a 5xx status code
func (o *DeleteClusterServiceAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cluster service account o k response a status code equal to that given
func (o *DeleteClusterServiceAccountOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteClusterServiceAccountOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/serviceaccount/{namespace}/{service_account_id}][%d] deleteClusterServiceAccountOK ", 200)
}

func (o *DeleteClusterServiceAccountOK) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/serviceaccount/{namespace}/{service_account_id}][%d] deleteClusterServiceAccountOK ", 200)
}

func (o *DeleteClusterServiceAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteClusterServiceAccountUnauthorized creates a DeleteClusterServiceAccountUnauthorized with default headers values
func NewDeleteClusterServiceAccountUnauthorized() *DeleteClusterServiceAccountUnauthorized {
	return &DeleteClusterServiceAccountUnauthorized{}
}

/*
DeleteClusterServiceAccountUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type DeleteClusterServiceAccountUnauthorized struct {
}

// IsSuccess returns true when this delete cluster service account unauthorized response has a 2xx status code
func (o *DeleteClusterServiceAccountUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete cluster service account unauthorized response has a 3xx status code
func (o *DeleteClusterServiceAccountUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cluster service account unauthorized response has a 4xx status code
func (o *DeleteClusterServiceAccountUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete cluster service account unauthorized response has a 5xx status code
func (o *DeleteClusterServiceAccountUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cluster service account unauthorized response a status code equal to that given
func (o *DeleteClusterServiceAccountUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteClusterServiceAccountUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/serviceaccount/{namespace}/{service_account_id}][%d] deleteClusterServiceAccountUnauthorized ", 401)
}

func (o *DeleteClusterServiceAccountUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/serviceaccount/{namespace}/{service_account_id}][%d] deleteClusterServiceAccountUnauthorized ", 401)
}

func (o *DeleteClusterServiceAccountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteClusterServiceAccountForbidden creates a DeleteClusterServiceAccountForbidden with default headers values
func NewDeleteClusterServiceAccountForbidden() *DeleteClusterServiceAccountForbidden {
	return &DeleteClusterServiceAccountForbidden{}
}

/*
DeleteClusterServiceAccountForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type DeleteClusterServiceAccountForbidden struct {
}

// IsSuccess returns true when this delete cluster service account forbidden response has a 2xx status code
func (o *DeleteClusterServiceAccountForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete cluster service account forbidden response has a 3xx status code
func (o *DeleteClusterServiceAccountForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cluster service account forbidden response has a 4xx status code
func (o *DeleteClusterServiceAccountForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete cluster service account forbidden response has a 5xx status code
func (o *DeleteClusterServiceAccountForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cluster service account forbidden response a status code equal to that given
func (o *DeleteClusterServiceAccountForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteClusterServiceAccountForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/serviceaccount/{namespace}/{service_account_id}][%d] deleteClusterServiceAccountForbidden ", 403)
}

func (o *DeleteClusterServiceAccountForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/serviceaccount/{namespace}/{service_account_id}][%d] deleteClusterServiceAccountForbidden ", 403)
}

func (o *DeleteClusterServiceAccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteClusterServiceAccountDefault creates a DeleteClusterServiceAccountDefault with default headers values
func NewDeleteClusterServiceAccountDefault(code int) *DeleteClusterServiceAccountDefault {
	return &DeleteClusterServiceAccountDefault{
		_statusCode: code,
	}
}

/*
DeleteClusterServiceAccountDefault describes a response with status code -1, with default header values.

errorResponse
*/
type DeleteClusterServiceAccountDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the delete cluster service account default response
func (o *DeleteClusterServiceAccountDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this delete cluster service account default response has a 2xx status code
func (o *DeleteClusterServiceAccountDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete cluster service account default response has a 3xx status code
func (o *DeleteClusterServiceAccountDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete cluster service account default response has a 4xx status code
func (o *DeleteClusterServiceAccountDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete cluster service account default response has a 5xx status code
func (o *DeleteClusterServiceAccountDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete cluster service account default response a status code equal to that given
func (o *DeleteClusterServiceAccountDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *DeleteClusterServiceAccountDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/serviceaccount/{namespace}/{service_account_id}][%d] deleteClusterServiceAccount default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteClusterServiceAccountDefault) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/serviceaccount/{namespace}/{service_account_id}][%d] deleteClusterServiceAccount default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteClusterServiceAccountDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteClusterServiceAccountDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
