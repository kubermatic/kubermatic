// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/kubermatic/v2/pkg/test/e2e/utils/apiclient/models"
)

// GetExternalClusterKubeconfigReader is a Reader for the GetExternalClusterKubeconfig structure.
type GetExternalClusterKubeconfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExternalClusterKubeconfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExternalClusterKubeconfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetExternalClusterKubeconfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetExternalClusterKubeconfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetExternalClusterKubeconfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetExternalClusterKubeconfigOK creates a GetExternalClusterKubeconfigOK with default headers values
func NewGetExternalClusterKubeconfigOK() *GetExternalClusterKubeconfigOK {
	return &GetExternalClusterKubeconfigOK{}
}

/*
GetExternalClusterKubeconfigOK describes a response with status code 200, with default header values.

Kubeconfig is a clusters kubeconfig
*/
type GetExternalClusterKubeconfigOK struct {
	Payload []uint8
}

// IsSuccess returns true when this get external cluster kubeconfig o k response has a 2xx status code
func (o *GetExternalClusterKubeconfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get external cluster kubeconfig o k response has a 3xx status code
func (o *GetExternalClusterKubeconfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get external cluster kubeconfig o k response has a 4xx status code
func (o *GetExternalClusterKubeconfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get external cluster kubeconfig o k response has a 5xx status code
func (o *GetExternalClusterKubeconfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get external cluster kubeconfig o k response a status code equal to that given
func (o *GetExternalClusterKubeconfigOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetExternalClusterKubeconfigOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/kubernetes/clusters/{cluster_id}/kubeconfig][%d] getExternalClusterKubeconfigOK  %+v", 200, o.Payload)
}

func (o *GetExternalClusterKubeconfigOK) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/kubernetes/clusters/{cluster_id}/kubeconfig][%d] getExternalClusterKubeconfigOK  %+v", 200, o.Payload)
}

func (o *GetExternalClusterKubeconfigOK) GetPayload() []uint8 {
	return o.Payload
}

func (o *GetExternalClusterKubeconfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalClusterKubeconfigUnauthorized creates a GetExternalClusterKubeconfigUnauthorized with default headers values
func NewGetExternalClusterKubeconfigUnauthorized() *GetExternalClusterKubeconfigUnauthorized {
	return &GetExternalClusterKubeconfigUnauthorized{}
}

/*
GetExternalClusterKubeconfigUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type GetExternalClusterKubeconfigUnauthorized struct {
}

// IsSuccess returns true when this get external cluster kubeconfig unauthorized response has a 2xx status code
func (o *GetExternalClusterKubeconfigUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get external cluster kubeconfig unauthorized response has a 3xx status code
func (o *GetExternalClusterKubeconfigUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get external cluster kubeconfig unauthorized response has a 4xx status code
func (o *GetExternalClusterKubeconfigUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get external cluster kubeconfig unauthorized response has a 5xx status code
func (o *GetExternalClusterKubeconfigUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get external cluster kubeconfig unauthorized response a status code equal to that given
func (o *GetExternalClusterKubeconfigUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetExternalClusterKubeconfigUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/kubernetes/clusters/{cluster_id}/kubeconfig][%d] getExternalClusterKubeconfigUnauthorized ", 401)
}

func (o *GetExternalClusterKubeconfigUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/kubernetes/clusters/{cluster_id}/kubeconfig][%d] getExternalClusterKubeconfigUnauthorized ", 401)
}

func (o *GetExternalClusterKubeconfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExternalClusterKubeconfigForbidden creates a GetExternalClusterKubeconfigForbidden with default headers values
func NewGetExternalClusterKubeconfigForbidden() *GetExternalClusterKubeconfigForbidden {
	return &GetExternalClusterKubeconfigForbidden{}
}

/*
GetExternalClusterKubeconfigForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type GetExternalClusterKubeconfigForbidden struct {
}

// IsSuccess returns true when this get external cluster kubeconfig forbidden response has a 2xx status code
func (o *GetExternalClusterKubeconfigForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get external cluster kubeconfig forbidden response has a 3xx status code
func (o *GetExternalClusterKubeconfigForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get external cluster kubeconfig forbidden response has a 4xx status code
func (o *GetExternalClusterKubeconfigForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get external cluster kubeconfig forbidden response has a 5xx status code
func (o *GetExternalClusterKubeconfigForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get external cluster kubeconfig forbidden response a status code equal to that given
func (o *GetExternalClusterKubeconfigForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetExternalClusterKubeconfigForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/kubernetes/clusters/{cluster_id}/kubeconfig][%d] getExternalClusterKubeconfigForbidden ", 403)
}

func (o *GetExternalClusterKubeconfigForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/kubernetes/clusters/{cluster_id}/kubeconfig][%d] getExternalClusterKubeconfigForbidden ", 403)
}

func (o *GetExternalClusterKubeconfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExternalClusterKubeconfigDefault creates a GetExternalClusterKubeconfigDefault with default headers values
func NewGetExternalClusterKubeconfigDefault(code int) *GetExternalClusterKubeconfigDefault {
	return &GetExternalClusterKubeconfigDefault{
		_statusCode: code,
	}
}

/*
GetExternalClusterKubeconfigDefault describes a response with status code -1, with default header values.

errorResponse
*/
type GetExternalClusterKubeconfigDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the get external cluster kubeconfig default response
func (o *GetExternalClusterKubeconfigDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this get external cluster kubeconfig default response has a 2xx status code
func (o *GetExternalClusterKubeconfigDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get external cluster kubeconfig default response has a 3xx status code
func (o *GetExternalClusterKubeconfigDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get external cluster kubeconfig default response has a 4xx status code
func (o *GetExternalClusterKubeconfigDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get external cluster kubeconfig default response has a 5xx status code
func (o *GetExternalClusterKubeconfigDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get external cluster kubeconfig default response a status code equal to that given
func (o *GetExternalClusterKubeconfigDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *GetExternalClusterKubeconfigDefault) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/kubernetes/clusters/{cluster_id}/kubeconfig][%d] getExternalClusterKubeconfig default  %+v", o._statusCode, o.Payload)
}

func (o *GetExternalClusterKubeconfigDefault) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/kubernetes/clusters/{cluster_id}/kubeconfig][%d] getExternalClusterKubeconfig default  %+v", o._statusCode, o.Payload)
}

func (o *GetExternalClusterKubeconfigDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetExternalClusterKubeconfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
