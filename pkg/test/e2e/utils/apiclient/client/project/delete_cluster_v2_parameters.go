// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteClusterV2Params creates a new DeleteClusterV2Params object
// with the default values initialized.
func NewDeleteClusterV2Params() *DeleteClusterV2Params {
	var ()
	return &DeleteClusterV2Params{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteClusterV2ParamsWithTimeout creates a new DeleteClusterV2Params object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteClusterV2ParamsWithTimeout(timeout time.Duration) *DeleteClusterV2Params {
	var ()
	return &DeleteClusterV2Params{

		timeout: timeout,
	}
}

// NewDeleteClusterV2ParamsWithContext creates a new DeleteClusterV2Params object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteClusterV2ParamsWithContext(ctx context.Context) *DeleteClusterV2Params {
	var ()
	return &DeleteClusterV2Params{

		Context: ctx,
	}
}

// NewDeleteClusterV2ParamsWithHTTPClient creates a new DeleteClusterV2Params object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteClusterV2ParamsWithHTTPClient(client *http.Client) *DeleteClusterV2Params {
	var ()
	return &DeleteClusterV2Params{
		HTTPClient: client,
	}
}

/*DeleteClusterV2Params contains all the parameters to send to the API endpoint
for the delete cluster v2 operation typically these are written to a http.Request
*/
type DeleteClusterV2Params struct {

	/*DeleteLoadBalancers*/
	DeleteLoadBalancers *bool
	/*DeleteVolumes*/
	DeleteVolumes *bool
	/*ClusterID*/
	ClusterID string
	/*ProjectID*/
	ProjectID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete cluster v2 params
func (o *DeleteClusterV2Params) WithTimeout(timeout time.Duration) *DeleteClusterV2Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete cluster v2 params
func (o *DeleteClusterV2Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete cluster v2 params
func (o *DeleteClusterV2Params) WithContext(ctx context.Context) *DeleteClusterV2Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete cluster v2 params
func (o *DeleteClusterV2Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete cluster v2 params
func (o *DeleteClusterV2Params) WithHTTPClient(client *http.Client) *DeleteClusterV2Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete cluster v2 params
func (o *DeleteClusterV2Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDeleteLoadBalancers adds the deleteLoadBalancers to the delete cluster v2 params
func (o *DeleteClusterV2Params) WithDeleteLoadBalancers(deleteLoadBalancers *bool) *DeleteClusterV2Params {
	o.SetDeleteLoadBalancers(deleteLoadBalancers)
	return o
}

// SetDeleteLoadBalancers adds the deleteLoadBalancers to the delete cluster v2 params
func (o *DeleteClusterV2Params) SetDeleteLoadBalancers(deleteLoadBalancers *bool) {
	o.DeleteLoadBalancers = deleteLoadBalancers
}

// WithDeleteVolumes adds the deleteVolumes to the delete cluster v2 params
func (o *DeleteClusterV2Params) WithDeleteVolumes(deleteVolumes *bool) *DeleteClusterV2Params {
	o.SetDeleteVolumes(deleteVolumes)
	return o
}

// SetDeleteVolumes adds the deleteVolumes to the delete cluster v2 params
func (o *DeleteClusterV2Params) SetDeleteVolumes(deleteVolumes *bool) {
	o.DeleteVolumes = deleteVolumes
}

// WithClusterID adds the clusterID to the delete cluster v2 params
func (o *DeleteClusterV2Params) WithClusterID(clusterID string) *DeleteClusterV2Params {
	o.SetClusterID(clusterID)
	return o
}

// SetClusterID adds the clusterId to the delete cluster v2 params
func (o *DeleteClusterV2Params) SetClusterID(clusterID string) {
	o.ClusterID = clusterID
}

// WithProjectID adds the projectID to the delete cluster v2 params
func (o *DeleteClusterV2Params) WithProjectID(projectID string) *DeleteClusterV2Params {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the delete cluster v2 params
func (o *DeleteClusterV2Params) SetProjectID(projectID string) {
	o.ProjectID = projectID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteClusterV2Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DeleteLoadBalancers != nil {

		// header param DeleteLoadBalancers
		if err := r.SetHeaderParam("DeleteLoadBalancers", swag.FormatBool(*o.DeleteLoadBalancers)); err != nil {
			return err
		}

	}

	if o.DeleteVolumes != nil {

		// header param DeleteVolumes
		if err := r.SetHeaderParam("DeleteVolumes", swag.FormatBool(*o.DeleteVolumes)); err != nil {
			return err
		}

	}

	// path param cluster_id
	if err := r.SetPathParam("cluster_id", o.ClusterID); err != nil {
		return err
	}

	// path param project_id
	if err := r.SetPathParam("project_id", o.ProjectID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
