// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetClusterEventsV2Params creates a new GetClusterEventsV2Params object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetClusterEventsV2Params() *GetClusterEventsV2Params {
	return &GetClusterEventsV2Params{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetClusterEventsV2ParamsWithTimeout creates a new GetClusterEventsV2Params object
// with the ability to set a timeout on a request.
func NewGetClusterEventsV2ParamsWithTimeout(timeout time.Duration) *GetClusterEventsV2Params {
	return &GetClusterEventsV2Params{
		timeout: timeout,
	}
}

// NewGetClusterEventsV2ParamsWithContext creates a new GetClusterEventsV2Params object
// with the ability to set a context for a request.
func NewGetClusterEventsV2ParamsWithContext(ctx context.Context) *GetClusterEventsV2Params {
	return &GetClusterEventsV2Params{
		Context: ctx,
	}
}

// NewGetClusterEventsV2ParamsWithHTTPClient creates a new GetClusterEventsV2Params object
// with the ability to set a custom HTTPClient for a request.
func NewGetClusterEventsV2ParamsWithHTTPClient(client *http.Client) *GetClusterEventsV2Params {
	return &GetClusterEventsV2Params{
		HTTPClient: client,
	}
}

/* GetClusterEventsV2Params contains all the parameters to send to the API endpoint
   for the get cluster events v2 operation.

   Typically these are written to a http.Request.
*/
type GetClusterEventsV2Params struct {

	// ClusterID.
	ClusterID string

	// ProjectID.
	ProjectID string

	// Type.
	Type *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get cluster events v2 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetClusterEventsV2Params) WithDefaults() *GetClusterEventsV2Params {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get cluster events v2 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetClusterEventsV2Params) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get cluster events v2 params
func (o *GetClusterEventsV2Params) WithTimeout(timeout time.Duration) *GetClusterEventsV2Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get cluster events v2 params
func (o *GetClusterEventsV2Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get cluster events v2 params
func (o *GetClusterEventsV2Params) WithContext(ctx context.Context) *GetClusterEventsV2Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get cluster events v2 params
func (o *GetClusterEventsV2Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get cluster events v2 params
func (o *GetClusterEventsV2Params) WithHTTPClient(client *http.Client) *GetClusterEventsV2Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get cluster events v2 params
func (o *GetClusterEventsV2Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClusterID adds the clusterID to the get cluster events v2 params
func (o *GetClusterEventsV2Params) WithClusterID(clusterID string) *GetClusterEventsV2Params {
	o.SetClusterID(clusterID)
	return o
}

// SetClusterID adds the clusterId to the get cluster events v2 params
func (o *GetClusterEventsV2Params) SetClusterID(clusterID string) {
	o.ClusterID = clusterID
}

// WithProjectID adds the projectID to the get cluster events v2 params
func (o *GetClusterEventsV2Params) WithProjectID(projectID string) *GetClusterEventsV2Params {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the get cluster events v2 params
func (o *GetClusterEventsV2Params) SetProjectID(projectID string) {
	o.ProjectID = projectID
}

// WithType adds the typeVar to the get cluster events v2 params
func (o *GetClusterEventsV2Params) WithType(typeVar *string) *GetClusterEventsV2Params {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the get cluster events v2 params
func (o *GetClusterEventsV2Params) SetType(typeVar *string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *GetClusterEventsV2Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param cluster_id
	if err := r.SetPathParam("cluster_id", o.ClusterID); err != nil {
		return err
	}

	// path param project_id
	if err := r.SetPathParam("project_id", o.ProjectID); err != nil {
		return err
	}

	if o.Type != nil {

		// query param type
		var qrType string

		if o.Type != nil {
			qrType = *o.Type
		}
		qType := qrType
		if qType != "" {

			if err := r.SetQueryParam("type", qType); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
