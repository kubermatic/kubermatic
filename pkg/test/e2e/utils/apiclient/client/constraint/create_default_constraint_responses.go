// Code generated by go-swagger; DO NOT EDIT.

package constraint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/kubermatic/v2/pkg/test/e2e/utils/apiclient/models"
)

// CreateDefaultConstraintReader is a Reader for the CreateDefaultConstraint structure.
type CreateDefaultConstraintReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDefaultConstraintReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateDefaultConstraintOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateDefaultConstraintUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateDefaultConstraintForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateDefaultConstraintDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateDefaultConstraintOK creates a CreateDefaultConstraintOK with default headers values
func NewCreateDefaultConstraintOK() *CreateDefaultConstraintOK {
	return &CreateDefaultConstraintOK{}
}

/* CreateDefaultConstraintOK describes a response with status code 200, with default header values.

Constraint
*/
type CreateDefaultConstraintOK struct {
	Payload *models.Constraint
}

func (o *CreateDefaultConstraintOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/constraints][%d] createDefaultConstraintOK  %+v", 200, o.Payload)
}
func (o *CreateDefaultConstraintOK) GetPayload() *models.Constraint {
	return o.Payload
}

func (o *CreateDefaultConstraintOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Constraint)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDefaultConstraintUnauthorized creates a CreateDefaultConstraintUnauthorized with default headers values
func NewCreateDefaultConstraintUnauthorized() *CreateDefaultConstraintUnauthorized {
	return &CreateDefaultConstraintUnauthorized{}
}

/* CreateDefaultConstraintUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type CreateDefaultConstraintUnauthorized struct {
}

func (o *CreateDefaultConstraintUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/constraints][%d] createDefaultConstraintUnauthorized ", 401)
}

func (o *CreateDefaultConstraintUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateDefaultConstraintForbidden creates a CreateDefaultConstraintForbidden with default headers values
func NewCreateDefaultConstraintForbidden() *CreateDefaultConstraintForbidden {
	return &CreateDefaultConstraintForbidden{}
}

/* CreateDefaultConstraintForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type CreateDefaultConstraintForbidden struct {
}

func (o *CreateDefaultConstraintForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/constraints][%d] createDefaultConstraintForbidden ", 403)
}

func (o *CreateDefaultConstraintForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateDefaultConstraintDefault creates a CreateDefaultConstraintDefault with default headers values
func NewCreateDefaultConstraintDefault(code int) *CreateDefaultConstraintDefault {
	return &CreateDefaultConstraintDefault{
		_statusCode: code,
	}
}

/* CreateDefaultConstraintDefault describes a response with status code -1, with default header values.

errorResponse
*/
type CreateDefaultConstraintDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the create default constraint default response
func (o *CreateDefaultConstraintDefault) Code() int {
	return o._statusCode
}

func (o *CreateDefaultConstraintDefault) Error() string {
	return fmt.Sprintf("[POST /api/v2/constraints][%d] createDefaultConstraint default  %+v", o._statusCode, o.Payload)
}
func (o *CreateDefaultConstraintDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateDefaultConstraintDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
