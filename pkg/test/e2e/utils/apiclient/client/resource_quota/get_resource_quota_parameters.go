// Code generated by go-swagger; DO NOT EDIT.

package resource_quota

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetResourceQuotaParams creates a new GetResourceQuotaParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetResourceQuotaParams() *GetResourceQuotaParams {
	return &GetResourceQuotaParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetResourceQuotaParamsWithTimeout creates a new GetResourceQuotaParams object
// with the ability to set a timeout on a request.
func NewGetResourceQuotaParamsWithTimeout(timeout time.Duration) *GetResourceQuotaParams {
	return &GetResourceQuotaParams{
		timeout: timeout,
	}
}

// NewGetResourceQuotaParamsWithContext creates a new GetResourceQuotaParams object
// with the ability to set a context for a request.
func NewGetResourceQuotaParamsWithContext(ctx context.Context) *GetResourceQuotaParams {
	return &GetResourceQuotaParams{
		Context: ctx,
	}
}

// NewGetResourceQuotaParamsWithHTTPClient creates a new GetResourceQuotaParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetResourceQuotaParamsWithHTTPClient(client *http.Client) *GetResourceQuotaParams {
	return &GetResourceQuotaParams{
		HTTPClient: client,
	}
}

/*
GetResourceQuotaParams contains all the parameters to send to the API endpoint

	for the get resource quota operation.

	Typically these are written to a http.Request.
*/
type GetResourceQuotaParams struct {

	// QuotaName.
	Name string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get resource quota params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetResourceQuotaParams) WithDefaults() *GetResourceQuotaParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get resource quota params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetResourceQuotaParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get resource quota params
func (o *GetResourceQuotaParams) WithTimeout(timeout time.Duration) *GetResourceQuotaParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get resource quota params
func (o *GetResourceQuotaParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get resource quota params
func (o *GetResourceQuotaParams) WithContext(ctx context.Context) *GetResourceQuotaParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get resource quota params
func (o *GetResourceQuotaParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get resource quota params
func (o *GetResourceQuotaParams) WithHTTPClient(client *http.Client) *GetResourceQuotaParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get resource quota params
func (o *GetResourceQuotaParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the quotaName to the get resource quota params
func (o *GetResourceQuotaParams) WithName(quotaName string) *GetResourceQuotaParams {
	o.SetName(quotaName)
	return o
}

// SetName adds the quotaName to the get resource quota params
func (o *GetResourceQuotaParams) SetName(quotaName string) {
	o.Name = quotaName
}

// WriteToRequest writes these params to a swagger request
func (o *GetResourceQuotaParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param quota_name
	if err := r.SetPathParam("quota_name", o.Name); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
