// Code generated by go-swagger; DO NOT EDIT.

package backupcredentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/kubermatic/v2/pkg/test/e2e/utils/apiclient/models"
)

// CreateOrUpdateBackupCredentialsReader is a Reader for the CreateOrUpdateBackupCredentials structure.
type CreateOrUpdateBackupCredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateOrUpdateBackupCredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateOrUpdateBackupCredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateOrUpdateBackupCredentialsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateOrUpdateBackupCredentialsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateOrUpdateBackupCredentialsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateOrUpdateBackupCredentialsOK creates a CreateOrUpdateBackupCredentialsOK with default headers values
func NewCreateOrUpdateBackupCredentialsOK() *CreateOrUpdateBackupCredentialsOK {
	return &CreateOrUpdateBackupCredentialsOK{}
}

/*
CreateOrUpdateBackupCredentialsOK describes a response with status code 200, with default header values.

EmptyResponse is a empty response
*/
type CreateOrUpdateBackupCredentialsOK struct {
}

// IsSuccess returns true when this create or update backup credentials o k response has a 2xx status code
func (o *CreateOrUpdateBackupCredentialsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create or update backup credentials o k response has a 3xx status code
func (o *CreateOrUpdateBackupCredentialsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create or update backup credentials o k response has a 4xx status code
func (o *CreateOrUpdateBackupCredentialsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create or update backup credentials o k response has a 5xx status code
func (o *CreateOrUpdateBackupCredentialsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create or update backup credentials o k response a status code equal to that given
func (o *CreateOrUpdateBackupCredentialsOK) IsCode(code int) bool {
	return code == 200
}

func (o *CreateOrUpdateBackupCredentialsOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/seeds/{seed_name}/backupcredentials][%d] createOrUpdateBackupCredentialsOK ", 200)
}

func (o *CreateOrUpdateBackupCredentialsOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/seeds/{seed_name}/backupcredentials][%d] createOrUpdateBackupCredentialsOK ", 200)
}

func (o *CreateOrUpdateBackupCredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateOrUpdateBackupCredentialsUnauthorized creates a CreateOrUpdateBackupCredentialsUnauthorized with default headers values
func NewCreateOrUpdateBackupCredentialsUnauthorized() *CreateOrUpdateBackupCredentialsUnauthorized {
	return &CreateOrUpdateBackupCredentialsUnauthorized{}
}

/*
CreateOrUpdateBackupCredentialsUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type CreateOrUpdateBackupCredentialsUnauthorized struct {
}

// IsSuccess returns true when this create or update backup credentials unauthorized response has a 2xx status code
func (o *CreateOrUpdateBackupCredentialsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create or update backup credentials unauthorized response has a 3xx status code
func (o *CreateOrUpdateBackupCredentialsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create or update backup credentials unauthorized response has a 4xx status code
func (o *CreateOrUpdateBackupCredentialsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create or update backup credentials unauthorized response has a 5xx status code
func (o *CreateOrUpdateBackupCredentialsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create or update backup credentials unauthorized response a status code equal to that given
func (o *CreateOrUpdateBackupCredentialsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateOrUpdateBackupCredentialsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/seeds/{seed_name}/backupcredentials][%d] createOrUpdateBackupCredentialsUnauthorized ", 401)
}

func (o *CreateOrUpdateBackupCredentialsUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/seeds/{seed_name}/backupcredentials][%d] createOrUpdateBackupCredentialsUnauthorized ", 401)
}

func (o *CreateOrUpdateBackupCredentialsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateOrUpdateBackupCredentialsForbidden creates a CreateOrUpdateBackupCredentialsForbidden with default headers values
func NewCreateOrUpdateBackupCredentialsForbidden() *CreateOrUpdateBackupCredentialsForbidden {
	return &CreateOrUpdateBackupCredentialsForbidden{}
}

/*
CreateOrUpdateBackupCredentialsForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type CreateOrUpdateBackupCredentialsForbidden struct {
}

// IsSuccess returns true when this create or update backup credentials forbidden response has a 2xx status code
func (o *CreateOrUpdateBackupCredentialsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create or update backup credentials forbidden response has a 3xx status code
func (o *CreateOrUpdateBackupCredentialsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create or update backup credentials forbidden response has a 4xx status code
func (o *CreateOrUpdateBackupCredentialsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create or update backup credentials forbidden response has a 5xx status code
func (o *CreateOrUpdateBackupCredentialsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create or update backup credentials forbidden response a status code equal to that given
func (o *CreateOrUpdateBackupCredentialsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateOrUpdateBackupCredentialsForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/seeds/{seed_name}/backupcredentials][%d] createOrUpdateBackupCredentialsForbidden ", 403)
}

func (o *CreateOrUpdateBackupCredentialsForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/seeds/{seed_name}/backupcredentials][%d] createOrUpdateBackupCredentialsForbidden ", 403)
}

func (o *CreateOrUpdateBackupCredentialsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateOrUpdateBackupCredentialsDefault creates a CreateOrUpdateBackupCredentialsDefault with default headers values
func NewCreateOrUpdateBackupCredentialsDefault(code int) *CreateOrUpdateBackupCredentialsDefault {
	return &CreateOrUpdateBackupCredentialsDefault{
		_statusCode: code,
	}
}

/*
CreateOrUpdateBackupCredentialsDefault describes a response with status code -1, with default header values.

errorResponse
*/
type CreateOrUpdateBackupCredentialsDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the create or update backup credentials default response
func (o *CreateOrUpdateBackupCredentialsDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this create or update backup credentials default response has a 2xx status code
func (o *CreateOrUpdateBackupCredentialsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create or update backup credentials default response has a 3xx status code
func (o *CreateOrUpdateBackupCredentialsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create or update backup credentials default response has a 4xx status code
func (o *CreateOrUpdateBackupCredentialsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create or update backup credentials default response has a 5xx status code
func (o *CreateOrUpdateBackupCredentialsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create or update backup credentials default response a status code equal to that given
func (o *CreateOrUpdateBackupCredentialsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *CreateOrUpdateBackupCredentialsDefault) Error() string {
	return fmt.Sprintf("[PUT /api/v2/seeds/{seed_name}/backupcredentials][%d] createOrUpdateBackupCredentials default  %+v", o._statusCode, o.Payload)
}

func (o *CreateOrUpdateBackupCredentialsDefault) String() string {
	return fmt.Sprintf("[PUT /api/v2/seeds/{seed_name}/backupcredentials][%d] createOrUpdateBackupCredentials default  %+v", o._statusCode, o.Payload)
}

func (o *CreateOrUpdateBackupCredentialsDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateOrUpdateBackupCredentialsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
