// Code generated by go-swagger; DO NOT EDIT.

package openstack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/kubermatic/v2/pkg/test/e2e/utils/apiclient/models"
)

// ListOpenstackAvailabilityZonesNoCredentialsV2Reader is a Reader for the ListOpenstackAvailabilityZonesNoCredentialsV2 structure.
type ListOpenstackAvailabilityZonesNoCredentialsV2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListOpenstackAvailabilityZonesNoCredentialsV2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListOpenstackAvailabilityZonesNoCredentialsV2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewListOpenstackAvailabilityZonesNoCredentialsV2Default(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListOpenstackAvailabilityZonesNoCredentialsV2OK creates a ListOpenstackAvailabilityZonesNoCredentialsV2OK with default headers values
func NewListOpenstackAvailabilityZonesNoCredentialsV2OK() *ListOpenstackAvailabilityZonesNoCredentialsV2OK {
	return &ListOpenstackAvailabilityZonesNoCredentialsV2OK{}
}

/* ListOpenstackAvailabilityZonesNoCredentialsV2OK describes a response with status code 200, with default header values.

OpenstackAvailabilityZone
*/
type ListOpenstackAvailabilityZonesNoCredentialsV2OK struct {
	Payload []*models.OpenstackAvailabilityZone
}

func (o *ListOpenstackAvailabilityZonesNoCredentialsV2OK) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/providers/openstack/availabilityzones][%d] listOpenstackAvailabilityZonesNoCredentialsV2OK  %+v", 200, o.Payload)
}
func (o *ListOpenstackAvailabilityZonesNoCredentialsV2OK) GetPayload() []*models.OpenstackAvailabilityZone {
	return o.Payload
}

func (o *ListOpenstackAvailabilityZonesNoCredentialsV2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOpenstackAvailabilityZonesNoCredentialsV2Default creates a ListOpenstackAvailabilityZonesNoCredentialsV2Default with default headers values
func NewListOpenstackAvailabilityZonesNoCredentialsV2Default(code int) *ListOpenstackAvailabilityZonesNoCredentialsV2Default {
	return &ListOpenstackAvailabilityZonesNoCredentialsV2Default{
		_statusCode: code,
	}
}

/* ListOpenstackAvailabilityZonesNoCredentialsV2Default describes a response with status code -1, with default header values.

errorResponse
*/
type ListOpenstackAvailabilityZonesNoCredentialsV2Default struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the list openstack availability zones no credentials v2 default response
func (o *ListOpenstackAvailabilityZonesNoCredentialsV2Default) Code() int {
	return o._statusCode
}

func (o *ListOpenstackAvailabilityZonesNoCredentialsV2Default) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/providers/openstack/availabilityzones][%d] listOpenstackAvailabilityZonesNoCredentialsV2 default  %+v", o._statusCode, o.Payload)
}
func (o *ListOpenstackAvailabilityZonesNoCredentialsV2Default) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListOpenstackAvailabilityZonesNoCredentialsV2Default) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
