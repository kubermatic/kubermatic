// Code generated by go-swagger; DO NOT EDIT.

package eks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewListProjectEKSSecurityGroupsParams creates a new ListProjectEKSSecurityGroupsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListProjectEKSSecurityGroupsParams() *ListProjectEKSSecurityGroupsParams {
	return &ListProjectEKSSecurityGroupsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListProjectEKSSecurityGroupsParamsWithTimeout creates a new ListProjectEKSSecurityGroupsParams object
// with the ability to set a timeout on a request.
func NewListProjectEKSSecurityGroupsParamsWithTimeout(timeout time.Duration) *ListProjectEKSSecurityGroupsParams {
	return &ListProjectEKSSecurityGroupsParams{
		timeout: timeout,
	}
}

// NewListProjectEKSSecurityGroupsParamsWithContext creates a new ListProjectEKSSecurityGroupsParams object
// with the ability to set a context for a request.
func NewListProjectEKSSecurityGroupsParamsWithContext(ctx context.Context) *ListProjectEKSSecurityGroupsParams {
	return &ListProjectEKSSecurityGroupsParams{
		Context: ctx,
	}
}

// NewListProjectEKSSecurityGroupsParamsWithHTTPClient creates a new ListProjectEKSSecurityGroupsParams object
// with the ability to set a custom HTTPClient for a request.
func NewListProjectEKSSecurityGroupsParamsWithHTTPClient(client *http.Client) *ListProjectEKSSecurityGroupsParams {
	return &ListProjectEKSSecurityGroupsParams{
		HTTPClient: client,
	}
}

/*
ListProjectEKSSecurityGroupsParams contains all the parameters to send to the API endpoint

	for the list project e k s security groups operation.

	Typically these are written to a http.Request.
*/
type ListProjectEKSSecurityGroupsParams struct {

	// AccessKeyID.
	AccessKeyID *string

	// Credential.
	Credential *string

	// Region.
	Region *string

	// SecretAccessKey.
	SecretAccessKey *string

	// VpcID.
	VpcID *string

	// ProjectID.
	ProjectID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list project e k s security groups params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListProjectEKSSecurityGroupsParams) WithDefaults() *ListProjectEKSSecurityGroupsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list project e k s security groups params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListProjectEKSSecurityGroupsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the list project e k s security groups params
func (o *ListProjectEKSSecurityGroupsParams) WithTimeout(timeout time.Duration) *ListProjectEKSSecurityGroupsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list project e k s security groups params
func (o *ListProjectEKSSecurityGroupsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list project e k s security groups params
func (o *ListProjectEKSSecurityGroupsParams) WithContext(ctx context.Context) *ListProjectEKSSecurityGroupsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list project e k s security groups params
func (o *ListProjectEKSSecurityGroupsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list project e k s security groups params
func (o *ListProjectEKSSecurityGroupsParams) WithHTTPClient(client *http.Client) *ListProjectEKSSecurityGroupsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list project e k s security groups params
func (o *ListProjectEKSSecurityGroupsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccessKeyID adds the accessKeyID to the list project e k s security groups params
func (o *ListProjectEKSSecurityGroupsParams) WithAccessKeyID(accessKeyID *string) *ListProjectEKSSecurityGroupsParams {
	o.SetAccessKeyID(accessKeyID)
	return o
}

// SetAccessKeyID adds the accessKeyId to the list project e k s security groups params
func (o *ListProjectEKSSecurityGroupsParams) SetAccessKeyID(accessKeyID *string) {
	o.AccessKeyID = accessKeyID
}

// WithCredential adds the credential to the list project e k s security groups params
func (o *ListProjectEKSSecurityGroupsParams) WithCredential(credential *string) *ListProjectEKSSecurityGroupsParams {
	o.SetCredential(credential)
	return o
}

// SetCredential adds the credential to the list project e k s security groups params
func (o *ListProjectEKSSecurityGroupsParams) SetCredential(credential *string) {
	o.Credential = credential
}

// WithRegion adds the region to the list project e k s security groups params
func (o *ListProjectEKSSecurityGroupsParams) WithRegion(region *string) *ListProjectEKSSecurityGroupsParams {
	o.SetRegion(region)
	return o
}

// SetRegion adds the region to the list project e k s security groups params
func (o *ListProjectEKSSecurityGroupsParams) SetRegion(region *string) {
	o.Region = region
}

// WithSecretAccessKey adds the secretAccessKey to the list project e k s security groups params
func (o *ListProjectEKSSecurityGroupsParams) WithSecretAccessKey(secretAccessKey *string) *ListProjectEKSSecurityGroupsParams {
	o.SetSecretAccessKey(secretAccessKey)
	return o
}

// SetSecretAccessKey adds the secretAccessKey to the list project e k s security groups params
func (o *ListProjectEKSSecurityGroupsParams) SetSecretAccessKey(secretAccessKey *string) {
	o.SecretAccessKey = secretAccessKey
}

// WithVpcID adds the vpcID to the list project e k s security groups params
func (o *ListProjectEKSSecurityGroupsParams) WithVpcID(vpcID *string) *ListProjectEKSSecurityGroupsParams {
	o.SetVpcID(vpcID)
	return o
}

// SetVpcID adds the vpcId to the list project e k s security groups params
func (o *ListProjectEKSSecurityGroupsParams) SetVpcID(vpcID *string) {
	o.VpcID = vpcID
}

// WithProjectID adds the projectID to the list project e k s security groups params
func (o *ListProjectEKSSecurityGroupsParams) WithProjectID(projectID string) *ListProjectEKSSecurityGroupsParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the list project e k s security groups params
func (o *ListProjectEKSSecurityGroupsParams) SetProjectID(projectID string) {
	o.ProjectID = projectID
}

// WriteToRequest writes these params to a swagger request
func (o *ListProjectEKSSecurityGroupsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AccessKeyID != nil {

		// header param AccessKeyID
		if err := r.SetHeaderParam("AccessKeyID", *o.AccessKeyID); err != nil {
			return err
		}
	}

	if o.Credential != nil {

		// header param Credential
		if err := r.SetHeaderParam("Credential", *o.Credential); err != nil {
			return err
		}
	}

	if o.Region != nil {

		// header param Region
		if err := r.SetHeaderParam("Region", *o.Region); err != nil {
			return err
		}
	}

	if o.SecretAccessKey != nil {

		// header param SecretAccessKey
		if err := r.SetHeaderParam("SecretAccessKey", *o.SecretAccessKey); err != nil {
			return err
		}
	}

	if o.VpcID != nil {

		// header param VpcId
		if err := r.SetHeaderParam("VpcId", *o.VpcID); err != nil {
			return err
		}
	}

	// path param project_id
	if err := r.SetPathParam("project_id", o.ProjectID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
