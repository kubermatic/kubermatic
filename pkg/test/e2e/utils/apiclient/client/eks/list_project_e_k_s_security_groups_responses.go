// Code generated by go-swagger; DO NOT EDIT.

package eks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/kubermatic/v2/pkg/test/e2e/utils/apiclient/models"
)

// ListProjectEKSSecurityGroupsReader is a Reader for the ListProjectEKSSecurityGroups structure.
type ListProjectEKSSecurityGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListProjectEKSSecurityGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListProjectEKSSecurityGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListProjectEKSSecurityGroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListProjectEKSSecurityGroupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListProjectEKSSecurityGroupsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListProjectEKSSecurityGroupsOK creates a ListProjectEKSSecurityGroupsOK with default headers values
func NewListProjectEKSSecurityGroupsOK() *ListProjectEKSSecurityGroupsOK {
	return &ListProjectEKSSecurityGroupsOK{}
}

/*
ListProjectEKSSecurityGroupsOK describes a response with status code 200, with default header values.

EKSSecurityGroupList
*/
type ListProjectEKSSecurityGroupsOK struct {
	Payload models.EKSSecurityGroupList
}

// IsSuccess returns true when this list project e k s security groups o k response has a 2xx status code
func (o *ListProjectEKSSecurityGroupsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list project e k s security groups o k response has a 3xx status code
func (o *ListProjectEKSSecurityGroupsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list project e k s security groups o k response has a 4xx status code
func (o *ListProjectEKSSecurityGroupsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list project e k s security groups o k response has a 5xx status code
func (o *ListProjectEKSSecurityGroupsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list project e k s security groups o k response a status code equal to that given
func (o *ListProjectEKSSecurityGroupsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListProjectEKSSecurityGroupsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/providers/eks/securitygroups][%d] listProjectEKSSecurityGroupsOK  %+v", 200, o.Payload)
}

func (o *ListProjectEKSSecurityGroupsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/providers/eks/securitygroups][%d] listProjectEKSSecurityGroupsOK  %+v", 200, o.Payload)
}

func (o *ListProjectEKSSecurityGroupsOK) GetPayload() models.EKSSecurityGroupList {
	return o.Payload
}

func (o *ListProjectEKSSecurityGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectEKSSecurityGroupsUnauthorized creates a ListProjectEKSSecurityGroupsUnauthorized with default headers values
func NewListProjectEKSSecurityGroupsUnauthorized() *ListProjectEKSSecurityGroupsUnauthorized {
	return &ListProjectEKSSecurityGroupsUnauthorized{}
}

/*
ListProjectEKSSecurityGroupsUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type ListProjectEKSSecurityGroupsUnauthorized struct {
}

// IsSuccess returns true when this list project e k s security groups unauthorized response has a 2xx status code
func (o *ListProjectEKSSecurityGroupsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list project e k s security groups unauthorized response has a 3xx status code
func (o *ListProjectEKSSecurityGroupsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list project e k s security groups unauthorized response has a 4xx status code
func (o *ListProjectEKSSecurityGroupsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list project e k s security groups unauthorized response has a 5xx status code
func (o *ListProjectEKSSecurityGroupsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list project e k s security groups unauthorized response a status code equal to that given
func (o *ListProjectEKSSecurityGroupsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ListProjectEKSSecurityGroupsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/providers/eks/securitygroups][%d] listProjectEKSSecurityGroupsUnauthorized ", 401)
}

func (o *ListProjectEKSSecurityGroupsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/providers/eks/securitygroups][%d] listProjectEKSSecurityGroupsUnauthorized ", 401)
}

func (o *ListProjectEKSSecurityGroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListProjectEKSSecurityGroupsForbidden creates a ListProjectEKSSecurityGroupsForbidden with default headers values
func NewListProjectEKSSecurityGroupsForbidden() *ListProjectEKSSecurityGroupsForbidden {
	return &ListProjectEKSSecurityGroupsForbidden{}
}

/*
ListProjectEKSSecurityGroupsForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type ListProjectEKSSecurityGroupsForbidden struct {
}

// IsSuccess returns true when this list project e k s security groups forbidden response has a 2xx status code
func (o *ListProjectEKSSecurityGroupsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list project e k s security groups forbidden response has a 3xx status code
func (o *ListProjectEKSSecurityGroupsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list project e k s security groups forbidden response has a 4xx status code
func (o *ListProjectEKSSecurityGroupsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list project e k s security groups forbidden response has a 5xx status code
func (o *ListProjectEKSSecurityGroupsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list project e k s security groups forbidden response a status code equal to that given
func (o *ListProjectEKSSecurityGroupsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListProjectEKSSecurityGroupsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/providers/eks/securitygroups][%d] listProjectEKSSecurityGroupsForbidden ", 403)
}

func (o *ListProjectEKSSecurityGroupsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/providers/eks/securitygroups][%d] listProjectEKSSecurityGroupsForbidden ", 403)
}

func (o *ListProjectEKSSecurityGroupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListProjectEKSSecurityGroupsDefault creates a ListProjectEKSSecurityGroupsDefault with default headers values
func NewListProjectEKSSecurityGroupsDefault(code int) *ListProjectEKSSecurityGroupsDefault {
	return &ListProjectEKSSecurityGroupsDefault{
		_statusCode: code,
	}
}

/*
ListProjectEKSSecurityGroupsDefault describes a response with status code -1, with default header values.

errorResponse
*/
type ListProjectEKSSecurityGroupsDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the list project e k s security groups default response
func (o *ListProjectEKSSecurityGroupsDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this list project e k s security groups default response has a 2xx status code
func (o *ListProjectEKSSecurityGroupsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list project e k s security groups default response has a 3xx status code
func (o *ListProjectEKSSecurityGroupsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list project e k s security groups default response has a 4xx status code
func (o *ListProjectEKSSecurityGroupsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list project e k s security groups default response has a 5xx status code
func (o *ListProjectEKSSecurityGroupsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list project e k s security groups default response a status code equal to that given
func (o *ListProjectEKSSecurityGroupsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ListProjectEKSSecurityGroupsDefault) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/providers/eks/securitygroups][%d] listProjectEKSSecurityGroups default  %+v", o._statusCode, o.Payload)
}

func (o *ListProjectEKSSecurityGroupsDefault) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/providers/eks/securitygroups][%d] listProjectEKSSecurityGroups default  %+v", o._statusCode, o.Payload)
}

func (o *ListProjectEKSSecurityGroupsDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListProjectEKSSecurityGroupsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
