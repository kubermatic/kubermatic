// Code generated by go-swagger; DO NOT EDIT.

package preset

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetPresetStatsParams creates a new GetPresetStatsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetPresetStatsParams() *GetPresetStatsParams {
	return &GetPresetStatsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetPresetStatsParamsWithTimeout creates a new GetPresetStatsParams object
// with the ability to set a timeout on a request.
func NewGetPresetStatsParamsWithTimeout(timeout time.Duration) *GetPresetStatsParams {
	return &GetPresetStatsParams{
		timeout: timeout,
	}
}

// NewGetPresetStatsParamsWithContext creates a new GetPresetStatsParams object
// with the ability to set a context for a request.
func NewGetPresetStatsParamsWithContext(ctx context.Context) *GetPresetStatsParams {
	return &GetPresetStatsParams{
		Context: ctx,
	}
}

// NewGetPresetStatsParamsWithHTTPClient creates a new GetPresetStatsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetPresetStatsParamsWithHTTPClient(client *http.Client) *GetPresetStatsParams {
	return &GetPresetStatsParams{
		HTTPClient: client,
	}
}

/*
GetPresetStatsParams contains all the parameters to send to the API endpoint

	for the get preset stats operation.

	Typically these are written to a http.Request.
*/
type GetPresetStatsParams struct {

	// PresetName.
	PresetName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get preset stats params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetPresetStatsParams) WithDefaults() *GetPresetStatsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get preset stats params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetPresetStatsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get preset stats params
func (o *GetPresetStatsParams) WithTimeout(timeout time.Duration) *GetPresetStatsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get preset stats params
func (o *GetPresetStatsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get preset stats params
func (o *GetPresetStatsParams) WithContext(ctx context.Context) *GetPresetStatsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get preset stats params
func (o *GetPresetStatsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get preset stats params
func (o *GetPresetStatsParams) WithHTTPClient(client *http.Client) *GetPresetStatsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get preset stats params
func (o *GetPresetStatsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPresetName adds the presetName to the get preset stats params
func (o *GetPresetStatsParams) WithPresetName(presetName string) *GetPresetStatsParams {
	o.SetPresetName(presetName)
	return o
}

// SetPresetName adds the presetName to the get preset stats params
func (o *GetPresetStatsParams) SetPresetName(presetName string) {
	o.PresetName = presetName
}

// WriteToRequest writes these params to a swagger request
func (o *GetPresetStatsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param preset_name
	if err := r.SetPathParam("preset_name", o.PresetName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
