// Code generated by go-swagger; DO NOT EDIT.

package vsphere

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewListVSphereNetworksParams creates a new ListVSphereNetworksParams object
// with the default values initialized.
func NewListVSphereNetworksParams() *ListVSphereNetworksParams {
	var ()
	return &ListVSphereNetworksParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListVSphereNetworksParamsWithTimeout creates a new ListVSphereNetworksParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListVSphereNetworksParamsWithTimeout(timeout time.Duration) *ListVSphereNetworksParams {
	var ()
	return &ListVSphereNetworksParams{

		timeout: timeout,
	}
}

// NewListVSphereNetworksParamsWithContext creates a new ListVSphereNetworksParams object
// with the default values initialized, and the ability to set a context for a request
func NewListVSphereNetworksParamsWithContext(ctx context.Context) *ListVSphereNetworksParams {
	var ()
	return &ListVSphereNetworksParams{

		Context: ctx,
	}
}

// NewListVSphereNetworksParamsWithHTTPClient creates a new ListVSphereNetworksParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListVSphereNetworksParamsWithHTTPClient(client *http.Client) *ListVSphereNetworksParams {
	var ()
	return &ListVSphereNetworksParams{
		HTTPClient: client,
	}
}

/*ListVSphereNetworksParams contains all the parameters to send to the API endpoint
for the list v sphere networks operation typically these are written to a http.Request
*/
type ListVSphereNetworksParams struct {

	/*Credential*/
	Credential *string
	/*DatacenterName*/
	DatacenterName *string
	/*Password*/
	Password *string
	/*Username*/
	Username *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list v sphere networks params
func (o *ListVSphereNetworksParams) WithTimeout(timeout time.Duration) *ListVSphereNetworksParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list v sphere networks params
func (o *ListVSphereNetworksParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list v sphere networks params
func (o *ListVSphereNetworksParams) WithContext(ctx context.Context) *ListVSphereNetworksParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list v sphere networks params
func (o *ListVSphereNetworksParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list v sphere networks params
func (o *ListVSphereNetworksParams) WithHTTPClient(client *http.Client) *ListVSphereNetworksParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list v sphere networks params
func (o *ListVSphereNetworksParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCredential adds the credential to the list v sphere networks params
func (o *ListVSphereNetworksParams) WithCredential(credential *string) *ListVSphereNetworksParams {
	o.SetCredential(credential)
	return o
}

// SetCredential adds the credential to the list v sphere networks params
func (o *ListVSphereNetworksParams) SetCredential(credential *string) {
	o.Credential = credential
}

// WithDatacenterName adds the datacenterName to the list v sphere networks params
func (o *ListVSphereNetworksParams) WithDatacenterName(datacenterName *string) *ListVSphereNetworksParams {
	o.SetDatacenterName(datacenterName)
	return o
}

// SetDatacenterName adds the datacenterName to the list v sphere networks params
func (o *ListVSphereNetworksParams) SetDatacenterName(datacenterName *string) {
	o.DatacenterName = datacenterName
}

// WithPassword adds the password to the list v sphere networks params
func (o *ListVSphereNetworksParams) WithPassword(password *string) *ListVSphereNetworksParams {
	o.SetPassword(password)
	return o
}

// SetPassword adds the password to the list v sphere networks params
func (o *ListVSphereNetworksParams) SetPassword(password *string) {
	o.Password = password
}

// WithUsername adds the username to the list v sphere networks params
func (o *ListVSphereNetworksParams) WithUsername(username *string) *ListVSphereNetworksParams {
	o.SetUsername(username)
	return o
}

// SetUsername adds the username to the list v sphere networks params
func (o *ListVSphereNetworksParams) SetUsername(username *string) {
	o.Username = username
}

// WriteToRequest writes these params to a swagger request
func (o *ListVSphereNetworksParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Credential != nil {

		// header param Credential
		if err := r.SetHeaderParam("Credential", *o.Credential); err != nil {
			return err
		}

	}

	if o.DatacenterName != nil {

		// header param DatacenterName
		if err := r.SetHeaderParam("DatacenterName", *o.DatacenterName); err != nil {
			return err
		}

	}

	if o.Password != nil {

		// header param Password
		if err := r.SetHeaderParam("Password", *o.Password); err != nil {
			return err
		}

	}

	if o.Username != nil {

		// header param Username
		if err := r.SetHeaderParam("Username", *o.Username); err != nil {
			return err
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
