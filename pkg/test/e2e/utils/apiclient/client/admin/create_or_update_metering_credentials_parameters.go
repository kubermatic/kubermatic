// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCreateOrUpdateMeteringCredentialsParams creates a new CreateOrUpdateMeteringCredentialsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateOrUpdateMeteringCredentialsParams() *CreateOrUpdateMeteringCredentialsParams {
	return &CreateOrUpdateMeteringCredentialsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateOrUpdateMeteringCredentialsParamsWithTimeout creates a new CreateOrUpdateMeteringCredentialsParams object
// with the ability to set a timeout on a request.
func NewCreateOrUpdateMeteringCredentialsParamsWithTimeout(timeout time.Duration) *CreateOrUpdateMeteringCredentialsParams {
	return &CreateOrUpdateMeteringCredentialsParams{
		timeout: timeout,
	}
}

// NewCreateOrUpdateMeteringCredentialsParamsWithContext creates a new CreateOrUpdateMeteringCredentialsParams object
// with the ability to set a context for a request.
func NewCreateOrUpdateMeteringCredentialsParamsWithContext(ctx context.Context) *CreateOrUpdateMeteringCredentialsParams {
	return &CreateOrUpdateMeteringCredentialsParams{
		Context: ctx,
	}
}

// NewCreateOrUpdateMeteringCredentialsParamsWithHTTPClient creates a new CreateOrUpdateMeteringCredentialsParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateOrUpdateMeteringCredentialsParamsWithHTTPClient(client *http.Client) *CreateOrUpdateMeteringCredentialsParams {
	return &CreateOrUpdateMeteringCredentialsParams{
		HTTPClient: client,
	}
}

/* CreateOrUpdateMeteringCredentialsParams contains all the parameters to send to the API endpoint
   for the create or update metering credentials operation.

   Typically these are written to a http.Request.
*/
type CreateOrUpdateMeteringCredentialsParams struct {

	// AccessKey.
	AccessKey string

	// BucketName.
	BucketName string

	// Endpoint.
	Endpoint string

	// SecretKey.
	SecretKey string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create or update metering credentials params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateOrUpdateMeteringCredentialsParams) WithDefaults() *CreateOrUpdateMeteringCredentialsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create or update metering credentials params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateOrUpdateMeteringCredentialsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create or update metering credentials params
func (o *CreateOrUpdateMeteringCredentialsParams) WithTimeout(timeout time.Duration) *CreateOrUpdateMeteringCredentialsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create or update metering credentials params
func (o *CreateOrUpdateMeteringCredentialsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create or update metering credentials params
func (o *CreateOrUpdateMeteringCredentialsParams) WithContext(ctx context.Context) *CreateOrUpdateMeteringCredentialsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create or update metering credentials params
func (o *CreateOrUpdateMeteringCredentialsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create or update metering credentials params
func (o *CreateOrUpdateMeteringCredentialsParams) WithHTTPClient(client *http.Client) *CreateOrUpdateMeteringCredentialsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create or update metering credentials params
func (o *CreateOrUpdateMeteringCredentialsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccessKey adds the accessKey to the create or update metering credentials params
func (o *CreateOrUpdateMeteringCredentialsParams) WithAccessKey(accessKey string) *CreateOrUpdateMeteringCredentialsParams {
	o.SetAccessKey(accessKey)
	return o
}

// SetAccessKey adds the accessKey to the create or update metering credentials params
func (o *CreateOrUpdateMeteringCredentialsParams) SetAccessKey(accessKey string) {
	o.AccessKey = accessKey
}

// WithBucketName adds the bucketName to the create or update metering credentials params
func (o *CreateOrUpdateMeteringCredentialsParams) WithBucketName(bucketName string) *CreateOrUpdateMeteringCredentialsParams {
	o.SetBucketName(bucketName)
	return o
}

// SetBucketName adds the bucketName to the create or update metering credentials params
func (o *CreateOrUpdateMeteringCredentialsParams) SetBucketName(bucketName string) {
	o.BucketName = bucketName
}

// WithEndpoint adds the endpoint to the create or update metering credentials params
func (o *CreateOrUpdateMeteringCredentialsParams) WithEndpoint(endpoint string) *CreateOrUpdateMeteringCredentialsParams {
	o.SetEndpoint(endpoint)
	return o
}

// SetEndpoint adds the endpoint to the create or update metering credentials params
func (o *CreateOrUpdateMeteringCredentialsParams) SetEndpoint(endpoint string) {
	o.Endpoint = endpoint
}

// WithSecretKey adds the secretKey to the create or update metering credentials params
func (o *CreateOrUpdateMeteringCredentialsParams) WithSecretKey(secretKey string) *CreateOrUpdateMeteringCredentialsParams {
	o.SetSecretKey(secretKey)
	return o
}

// SetSecretKey adds the secretKey to the create or update metering credentials params
func (o *CreateOrUpdateMeteringCredentialsParams) SetSecretKey(secretKey string) {
	o.SecretKey = secretKey
}

// WriteToRequest writes these params to a swagger request
func (o *CreateOrUpdateMeteringCredentialsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if err := r.SetBodyParam(o.AccessKey); err != nil {
		return err
	}
	if err := r.SetBodyParam(o.BucketName); err != nil {
		return err
	}
	if err := r.SetBodyParam(o.Endpoint); err != nil {
		return err
	}
	if err := r.SetBodyParam(o.SecretKey); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
