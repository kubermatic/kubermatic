// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/kubermatic/v2/pkg/test/e2e/utils/apiclient/models"
)

// GetMeteringReportConfigurationReader is a Reader for the GetMeteringReportConfiguration structure.
type GetMeteringReportConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMeteringReportConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMeteringReportConfigurationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetMeteringReportConfigurationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMeteringReportConfigurationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetMeteringReportConfigurationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetMeteringReportConfigurationOK creates a GetMeteringReportConfigurationOK with default headers values
func NewGetMeteringReportConfigurationOK() *GetMeteringReportConfigurationOK {
	return &GetMeteringReportConfigurationOK{}
}

/* GetMeteringReportConfigurationOK describes a response with status code 200, with default header values.

MeteringReportConfiguration
*/
type GetMeteringReportConfigurationOK struct {
	Payload *models.MeteringReportConfiguration
}

func (o *GetMeteringReportConfigurationOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/metering/configurations/reports/{name}][%d] getMeteringReportConfigurationOK  %+v", 200, o.Payload)
}
func (o *GetMeteringReportConfigurationOK) GetPayload() *models.MeteringReportConfiguration {
	return o.Payload
}

func (o *GetMeteringReportConfigurationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MeteringReportConfiguration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMeteringReportConfigurationUnauthorized creates a GetMeteringReportConfigurationUnauthorized with default headers values
func NewGetMeteringReportConfigurationUnauthorized() *GetMeteringReportConfigurationUnauthorized {
	return &GetMeteringReportConfigurationUnauthorized{}
}

/* GetMeteringReportConfigurationUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type GetMeteringReportConfigurationUnauthorized struct {
}

func (o *GetMeteringReportConfigurationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/metering/configurations/reports/{name}][%d] getMeteringReportConfigurationUnauthorized ", 401)
}

func (o *GetMeteringReportConfigurationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMeteringReportConfigurationForbidden creates a GetMeteringReportConfigurationForbidden with default headers values
func NewGetMeteringReportConfigurationForbidden() *GetMeteringReportConfigurationForbidden {
	return &GetMeteringReportConfigurationForbidden{}
}

/* GetMeteringReportConfigurationForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type GetMeteringReportConfigurationForbidden struct {
}

func (o *GetMeteringReportConfigurationForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/metering/configurations/reports/{name}][%d] getMeteringReportConfigurationForbidden ", 403)
}

func (o *GetMeteringReportConfigurationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMeteringReportConfigurationDefault creates a GetMeteringReportConfigurationDefault with default headers values
func NewGetMeteringReportConfigurationDefault(code int) *GetMeteringReportConfigurationDefault {
	return &GetMeteringReportConfigurationDefault{
		_statusCode: code,
	}
}

/* GetMeteringReportConfigurationDefault describes a response with status code -1, with default header values.

errorResponse
*/
type GetMeteringReportConfigurationDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the get metering report configuration default response
func (o *GetMeteringReportConfigurationDefault) Code() int {
	return o._statusCode
}

func (o *GetMeteringReportConfigurationDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/metering/configurations/reports/{name}][%d] getMeteringReportConfiguration default  %+v", o._statusCode, o.Payload)
}
func (o *GetMeteringReportConfigurationDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetMeteringReportConfigurationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
