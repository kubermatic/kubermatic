// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/kubermatic/v2/pkg/test/e2e/utils/apiclient/models"
)

// UpdateAdmissionPluginReader is a Reader for the UpdateAdmissionPlugin structure.
type UpdateAdmissionPluginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAdmissionPluginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateAdmissionPluginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateAdmissionPluginUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateAdmissionPluginForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateAdmissionPluginDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateAdmissionPluginOK creates a UpdateAdmissionPluginOK with default headers values
func NewUpdateAdmissionPluginOK() *UpdateAdmissionPluginOK {
	return &UpdateAdmissionPluginOK{}
}

/* UpdateAdmissionPluginOK describes a response with status code 200, with default header values.

AdmissionPlugin
*/
type UpdateAdmissionPluginOK struct {
	Payload *models.AdmissionPlugin
}

// IsSuccess returns true when this update admission plugin o k response has a 2xx status code
func (o *UpdateAdmissionPluginOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update admission plugin o k response has a 3xx status code
func (o *UpdateAdmissionPluginOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update admission plugin o k response has a 4xx status code
func (o *UpdateAdmissionPluginOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update admission plugin o k response has a 5xx status code
func (o *UpdateAdmissionPluginOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update admission plugin o k response a status code equal to that given
func (o *UpdateAdmissionPluginOK) IsCode(code int) bool {
	return code == 200
}

func (o *UpdateAdmissionPluginOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/admin/admission/plugins/{name}][%d] updateAdmissionPluginOK  %+v", 200, o.Payload)
}

func (o *UpdateAdmissionPluginOK) String() string {
	return fmt.Sprintf("[PATCH /api/v1/admin/admission/plugins/{name}][%d] updateAdmissionPluginOK  %+v", 200, o.Payload)
}

func (o *UpdateAdmissionPluginOK) GetPayload() *models.AdmissionPlugin {
	return o.Payload
}

func (o *UpdateAdmissionPluginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AdmissionPlugin)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAdmissionPluginUnauthorized creates a UpdateAdmissionPluginUnauthorized with default headers values
func NewUpdateAdmissionPluginUnauthorized() *UpdateAdmissionPluginUnauthorized {
	return &UpdateAdmissionPluginUnauthorized{}
}

/* UpdateAdmissionPluginUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type UpdateAdmissionPluginUnauthorized struct {
}

// IsSuccess returns true when this update admission plugin unauthorized response has a 2xx status code
func (o *UpdateAdmissionPluginUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update admission plugin unauthorized response has a 3xx status code
func (o *UpdateAdmissionPluginUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update admission plugin unauthorized response has a 4xx status code
func (o *UpdateAdmissionPluginUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update admission plugin unauthorized response has a 5xx status code
func (o *UpdateAdmissionPluginUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update admission plugin unauthorized response a status code equal to that given
func (o *UpdateAdmissionPluginUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateAdmissionPluginUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/admin/admission/plugins/{name}][%d] updateAdmissionPluginUnauthorized ", 401)
}

func (o *UpdateAdmissionPluginUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /api/v1/admin/admission/plugins/{name}][%d] updateAdmissionPluginUnauthorized ", 401)
}

func (o *UpdateAdmissionPluginUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAdmissionPluginForbidden creates a UpdateAdmissionPluginForbidden with default headers values
func NewUpdateAdmissionPluginForbidden() *UpdateAdmissionPluginForbidden {
	return &UpdateAdmissionPluginForbidden{}
}

/* UpdateAdmissionPluginForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type UpdateAdmissionPluginForbidden struct {
}

// IsSuccess returns true when this update admission plugin forbidden response has a 2xx status code
func (o *UpdateAdmissionPluginForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update admission plugin forbidden response has a 3xx status code
func (o *UpdateAdmissionPluginForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update admission plugin forbidden response has a 4xx status code
func (o *UpdateAdmissionPluginForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update admission plugin forbidden response has a 5xx status code
func (o *UpdateAdmissionPluginForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update admission plugin forbidden response a status code equal to that given
func (o *UpdateAdmissionPluginForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateAdmissionPluginForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/admin/admission/plugins/{name}][%d] updateAdmissionPluginForbidden ", 403)
}

func (o *UpdateAdmissionPluginForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/v1/admin/admission/plugins/{name}][%d] updateAdmissionPluginForbidden ", 403)
}

func (o *UpdateAdmissionPluginForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAdmissionPluginDefault creates a UpdateAdmissionPluginDefault with default headers values
func NewUpdateAdmissionPluginDefault(code int) *UpdateAdmissionPluginDefault {
	return &UpdateAdmissionPluginDefault{
		_statusCode: code,
	}
}

/* UpdateAdmissionPluginDefault describes a response with status code -1, with default header values.

errorResponse
*/
type UpdateAdmissionPluginDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the update admission plugin default response
func (o *UpdateAdmissionPluginDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this update admission plugin default response has a 2xx status code
func (o *UpdateAdmissionPluginDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update admission plugin default response has a 3xx status code
func (o *UpdateAdmissionPluginDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update admission plugin default response has a 4xx status code
func (o *UpdateAdmissionPluginDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update admission plugin default response has a 5xx status code
func (o *UpdateAdmissionPluginDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update admission plugin default response a status code equal to that given
func (o *UpdateAdmissionPluginDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *UpdateAdmissionPluginDefault) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/admin/admission/plugins/{name}][%d] updateAdmissionPlugin default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateAdmissionPluginDefault) String() string {
	return fmt.Sprintf("[PATCH /api/v1/admin/admission/plugins/{name}][%d] updateAdmissionPlugin default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateAdmissionPluginDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateAdmissionPluginDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
