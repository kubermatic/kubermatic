// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/kubermatic/v2/pkg/test/e2e/utils/apiclient/models"
)

// PatchKubermaticSettingsReader is a Reader for the PatchKubermaticSettings structure.
type PatchKubermaticSettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchKubermaticSettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchKubermaticSettingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPatchKubermaticSettingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchKubermaticSettingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPatchKubermaticSettingsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchKubermaticSettingsOK creates a PatchKubermaticSettingsOK with default headers values
func NewPatchKubermaticSettingsOK() *PatchKubermaticSettingsOK {
	return &PatchKubermaticSettingsOK{}
}

/*
PatchKubermaticSettingsOK describes a response with status code 200, with default header values.

GlobalSettings
*/
type PatchKubermaticSettingsOK struct {
	Payload *models.GlobalSettings
}

// IsSuccess returns true when this patch kubermatic settings o k response has a 2xx status code
func (o *PatchKubermaticSettingsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch kubermatic settings o k response has a 3xx status code
func (o *PatchKubermaticSettingsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch kubermatic settings o k response has a 4xx status code
func (o *PatchKubermaticSettingsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch kubermatic settings o k response has a 5xx status code
func (o *PatchKubermaticSettingsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch kubermatic settings o k response a status code equal to that given
func (o *PatchKubermaticSettingsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PatchKubermaticSettingsOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/admin/settings][%d] patchKubermaticSettingsOK  %+v", 200, o.Payload)
}

func (o *PatchKubermaticSettingsOK) String() string {
	return fmt.Sprintf("[PATCH /api/v1/admin/settings][%d] patchKubermaticSettingsOK  %+v", 200, o.Payload)
}

func (o *PatchKubermaticSettingsOK) GetPayload() *models.GlobalSettings {
	return o.Payload
}

func (o *PatchKubermaticSettingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GlobalSettings)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchKubermaticSettingsUnauthorized creates a PatchKubermaticSettingsUnauthorized with default headers values
func NewPatchKubermaticSettingsUnauthorized() *PatchKubermaticSettingsUnauthorized {
	return &PatchKubermaticSettingsUnauthorized{}
}

/*
PatchKubermaticSettingsUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type PatchKubermaticSettingsUnauthorized struct {
}

// IsSuccess returns true when this patch kubermatic settings unauthorized response has a 2xx status code
func (o *PatchKubermaticSettingsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch kubermatic settings unauthorized response has a 3xx status code
func (o *PatchKubermaticSettingsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch kubermatic settings unauthorized response has a 4xx status code
func (o *PatchKubermaticSettingsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch kubermatic settings unauthorized response has a 5xx status code
func (o *PatchKubermaticSettingsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch kubermatic settings unauthorized response a status code equal to that given
func (o *PatchKubermaticSettingsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PatchKubermaticSettingsUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/admin/settings][%d] patchKubermaticSettingsUnauthorized ", 401)
}

func (o *PatchKubermaticSettingsUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /api/v1/admin/settings][%d] patchKubermaticSettingsUnauthorized ", 401)
}

func (o *PatchKubermaticSettingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchKubermaticSettingsForbidden creates a PatchKubermaticSettingsForbidden with default headers values
func NewPatchKubermaticSettingsForbidden() *PatchKubermaticSettingsForbidden {
	return &PatchKubermaticSettingsForbidden{}
}

/*
PatchKubermaticSettingsForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type PatchKubermaticSettingsForbidden struct {
}

// IsSuccess returns true when this patch kubermatic settings forbidden response has a 2xx status code
func (o *PatchKubermaticSettingsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch kubermatic settings forbidden response has a 3xx status code
func (o *PatchKubermaticSettingsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch kubermatic settings forbidden response has a 4xx status code
func (o *PatchKubermaticSettingsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch kubermatic settings forbidden response has a 5xx status code
func (o *PatchKubermaticSettingsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this patch kubermatic settings forbidden response a status code equal to that given
func (o *PatchKubermaticSettingsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PatchKubermaticSettingsForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/admin/settings][%d] patchKubermaticSettingsForbidden ", 403)
}

func (o *PatchKubermaticSettingsForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/v1/admin/settings][%d] patchKubermaticSettingsForbidden ", 403)
}

func (o *PatchKubermaticSettingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchKubermaticSettingsDefault creates a PatchKubermaticSettingsDefault with default headers values
func NewPatchKubermaticSettingsDefault(code int) *PatchKubermaticSettingsDefault {
	return &PatchKubermaticSettingsDefault{
		_statusCode: code,
	}
}

/*
PatchKubermaticSettingsDefault describes a response with status code -1, with default header values.

errorResponse
*/
type PatchKubermaticSettingsDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the patch kubermatic settings default response
func (o *PatchKubermaticSettingsDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this patch kubermatic settings default response has a 2xx status code
func (o *PatchKubermaticSettingsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this patch kubermatic settings default response has a 3xx status code
func (o *PatchKubermaticSettingsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this patch kubermatic settings default response has a 4xx status code
func (o *PatchKubermaticSettingsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this patch kubermatic settings default response has a 5xx status code
func (o *PatchKubermaticSettingsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this patch kubermatic settings default response a status code equal to that given
func (o *PatchKubermaticSettingsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *PatchKubermaticSettingsDefault) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/admin/settings][%d] patchKubermaticSettings default  %+v", o._statusCode, o.Payload)
}

func (o *PatchKubermaticSettingsDefault) String() string {
	return fmt.Sprintf("[PATCH /api/v1/admin/settings][%d] patchKubermaticSettings default  %+v", o._statusCode, o.Payload)
}

func (o *PatchKubermaticSettingsDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PatchKubermaticSettingsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
