// Code generated by go-swagger; DO NOT EDIT.

package metric

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/kubermatic/v2/pkg/test/e2e/utils/apiclient/models"
)

// ListNodeDeploymentMetricsReader is a Reader for the ListNodeDeploymentMetrics structure.
type ListNodeDeploymentMetricsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListNodeDeploymentMetricsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListNodeDeploymentMetricsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListNodeDeploymentMetricsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListNodeDeploymentMetricsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListNodeDeploymentMetricsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListNodeDeploymentMetricsOK creates a ListNodeDeploymentMetricsOK with default headers values
func NewListNodeDeploymentMetricsOK() *ListNodeDeploymentMetricsOK {
	return &ListNodeDeploymentMetricsOK{}
}

/*
ListNodeDeploymentMetricsOK describes a response with status code 200, with default header values.

NodeMetric
*/
type ListNodeDeploymentMetricsOK struct {
	Payload []*models.NodeMetric
}

// IsSuccess returns true when this list node deployment metrics o k response has a 2xx status code
func (o *ListNodeDeploymentMetricsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list node deployment metrics o k response has a 3xx status code
func (o *ListNodeDeploymentMetricsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list node deployment metrics o k response has a 4xx status code
func (o *ListNodeDeploymentMetricsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list node deployment metrics o k response has a 5xx status code
func (o *ListNodeDeploymentMetricsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list node deployment metrics o k response a status code equal to that given
func (o *ListNodeDeploymentMetricsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListNodeDeploymentMetricsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/nodedeployments/{nodedeployment_id}/nodes/metrics][%d] listNodeDeploymentMetricsOK  %+v", 200, o.Payload)
}

func (o *ListNodeDeploymentMetricsOK) String() string {
	return fmt.Sprintf("[GET /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/nodedeployments/{nodedeployment_id}/nodes/metrics][%d] listNodeDeploymentMetricsOK  %+v", 200, o.Payload)
}

func (o *ListNodeDeploymentMetricsOK) GetPayload() []*models.NodeMetric {
	return o.Payload
}

func (o *ListNodeDeploymentMetricsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListNodeDeploymentMetricsUnauthorized creates a ListNodeDeploymentMetricsUnauthorized with default headers values
func NewListNodeDeploymentMetricsUnauthorized() *ListNodeDeploymentMetricsUnauthorized {
	return &ListNodeDeploymentMetricsUnauthorized{}
}

/*
ListNodeDeploymentMetricsUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type ListNodeDeploymentMetricsUnauthorized struct {
}

// IsSuccess returns true when this list node deployment metrics unauthorized response has a 2xx status code
func (o *ListNodeDeploymentMetricsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list node deployment metrics unauthorized response has a 3xx status code
func (o *ListNodeDeploymentMetricsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list node deployment metrics unauthorized response has a 4xx status code
func (o *ListNodeDeploymentMetricsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list node deployment metrics unauthorized response has a 5xx status code
func (o *ListNodeDeploymentMetricsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list node deployment metrics unauthorized response a status code equal to that given
func (o *ListNodeDeploymentMetricsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ListNodeDeploymentMetricsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/nodedeployments/{nodedeployment_id}/nodes/metrics][%d] listNodeDeploymentMetricsUnauthorized ", 401)
}

func (o *ListNodeDeploymentMetricsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/nodedeployments/{nodedeployment_id}/nodes/metrics][%d] listNodeDeploymentMetricsUnauthorized ", 401)
}

func (o *ListNodeDeploymentMetricsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListNodeDeploymentMetricsForbidden creates a ListNodeDeploymentMetricsForbidden with default headers values
func NewListNodeDeploymentMetricsForbidden() *ListNodeDeploymentMetricsForbidden {
	return &ListNodeDeploymentMetricsForbidden{}
}

/*
ListNodeDeploymentMetricsForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type ListNodeDeploymentMetricsForbidden struct {
}

// IsSuccess returns true when this list node deployment metrics forbidden response has a 2xx status code
func (o *ListNodeDeploymentMetricsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list node deployment metrics forbidden response has a 3xx status code
func (o *ListNodeDeploymentMetricsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list node deployment metrics forbidden response has a 4xx status code
func (o *ListNodeDeploymentMetricsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list node deployment metrics forbidden response has a 5xx status code
func (o *ListNodeDeploymentMetricsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list node deployment metrics forbidden response a status code equal to that given
func (o *ListNodeDeploymentMetricsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListNodeDeploymentMetricsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/nodedeployments/{nodedeployment_id}/nodes/metrics][%d] listNodeDeploymentMetricsForbidden ", 403)
}

func (o *ListNodeDeploymentMetricsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/nodedeployments/{nodedeployment_id}/nodes/metrics][%d] listNodeDeploymentMetricsForbidden ", 403)
}

func (o *ListNodeDeploymentMetricsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListNodeDeploymentMetricsDefault creates a ListNodeDeploymentMetricsDefault with default headers values
func NewListNodeDeploymentMetricsDefault(code int) *ListNodeDeploymentMetricsDefault {
	return &ListNodeDeploymentMetricsDefault{
		_statusCode: code,
	}
}

/*
ListNodeDeploymentMetricsDefault describes a response with status code -1, with default header values.

errorResponse
*/
type ListNodeDeploymentMetricsDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the list node deployment metrics default response
func (o *ListNodeDeploymentMetricsDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this list node deployment metrics default response has a 2xx status code
func (o *ListNodeDeploymentMetricsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list node deployment metrics default response has a 3xx status code
func (o *ListNodeDeploymentMetricsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list node deployment metrics default response has a 4xx status code
func (o *ListNodeDeploymentMetricsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list node deployment metrics default response has a 5xx status code
func (o *ListNodeDeploymentMetricsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list node deployment metrics default response a status code equal to that given
func (o *ListNodeDeploymentMetricsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ListNodeDeploymentMetricsDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/nodedeployments/{nodedeployment_id}/nodes/metrics][%d] listNodeDeploymentMetrics default  %+v", o._statusCode, o.Payload)
}

func (o *ListNodeDeploymentMetricsDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/nodedeployments/{nodedeployment_id}/nodes/metrics][%d] listNodeDeploymentMetrics default  %+v", o._statusCode, o.Payload)
}

func (o *ListNodeDeploymentMetricsDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListNodeDeploymentMetricsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
