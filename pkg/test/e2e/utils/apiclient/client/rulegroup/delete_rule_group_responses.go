// Code generated by go-swagger; DO NOT EDIT.

package rulegroup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/kubermatic/v2/pkg/test/e2e/utils/apiclient/models"
)

// DeleteRuleGroupReader is a Reader for the DeleteRuleGroup structure.
type DeleteRuleGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRuleGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteRuleGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteRuleGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteRuleGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteRuleGroupDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteRuleGroupOK creates a DeleteRuleGroupOK with default headers values
func NewDeleteRuleGroupOK() *DeleteRuleGroupOK {
	return &DeleteRuleGroupOK{}
}

/* DeleteRuleGroupOK describes a response with status code 200, with default header values.

EmptyResponse is a empty response
*/
type DeleteRuleGroupOK struct {
}

// IsSuccess returns true when this delete rule group o k response has a 2xx status code
func (o *DeleteRuleGroupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete rule group o k response has a 3xx status code
func (o *DeleteRuleGroupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete rule group o k response has a 4xx status code
func (o *DeleteRuleGroupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete rule group o k response has a 5xx status code
func (o *DeleteRuleGroupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete rule group o k response a status code equal to that given
func (o *DeleteRuleGroupOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteRuleGroupOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/rulegroups/{rulegroup_id}][%d] deleteRuleGroupOK ", 200)
}

func (o *DeleteRuleGroupOK) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/rulegroups/{rulegroup_id}][%d] deleteRuleGroupOK ", 200)
}

func (o *DeleteRuleGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRuleGroupUnauthorized creates a DeleteRuleGroupUnauthorized with default headers values
func NewDeleteRuleGroupUnauthorized() *DeleteRuleGroupUnauthorized {
	return &DeleteRuleGroupUnauthorized{}
}

/* DeleteRuleGroupUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type DeleteRuleGroupUnauthorized struct {
}

// IsSuccess returns true when this delete rule group unauthorized response has a 2xx status code
func (o *DeleteRuleGroupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete rule group unauthorized response has a 3xx status code
func (o *DeleteRuleGroupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete rule group unauthorized response has a 4xx status code
func (o *DeleteRuleGroupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete rule group unauthorized response has a 5xx status code
func (o *DeleteRuleGroupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete rule group unauthorized response a status code equal to that given
func (o *DeleteRuleGroupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteRuleGroupUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/rulegroups/{rulegroup_id}][%d] deleteRuleGroupUnauthorized ", 401)
}

func (o *DeleteRuleGroupUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/rulegroups/{rulegroup_id}][%d] deleteRuleGroupUnauthorized ", 401)
}

func (o *DeleteRuleGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRuleGroupForbidden creates a DeleteRuleGroupForbidden with default headers values
func NewDeleteRuleGroupForbidden() *DeleteRuleGroupForbidden {
	return &DeleteRuleGroupForbidden{}
}

/* DeleteRuleGroupForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type DeleteRuleGroupForbidden struct {
}

// IsSuccess returns true when this delete rule group forbidden response has a 2xx status code
func (o *DeleteRuleGroupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete rule group forbidden response has a 3xx status code
func (o *DeleteRuleGroupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete rule group forbidden response has a 4xx status code
func (o *DeleteRuleGroupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete rule group forbidden response has a 5xx status code
func (o *DeleteRuleGroupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete rule group forbidden response a status code equal to that given
func (o *DeleteRuleGroupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteRuleGroupForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/rulegroups/{rulegroup_id}][%d] deleteRuleGroupForbidden ", 403)
}

func (o *DeleteRuleGroupForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/rulegroups/{rulegroup_id}][%d] deleteRuleGroupForbidden ", 403)
}

func (o *DeleteRuleGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRuleGroupDefault creates a DeleteRuleGroupDefault with default headers values
func NewDeleteRuleGroupDefault(code int) *DeleteRuleGroupDefault {
	return &DeleteRuleGroupDefault{
		_statusCode: code,
	}
}

/* DeleteRuleGroupDefault describes a response with status code -1, with default header values.

errorResponse
*/
type DeleteRuleGroupDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the delete rule group default response
func (o *DeleteRuleGroupDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this delete rule group default response has a 2xx status code
func (o *DeleteRuleGroupDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete rule group default response has a 3xx status code
func (o *DeleteRuleGroupDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete rule group default response has a 4xx status code
func (o *DeleteRuleGroupDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete rule group default response has a 5xx status code
func (o *DeleteRuleGroupDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete rule group default response a status code equal to that given
func (o *DeleteRuleGroupDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *DeleteRuleGroupDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/rulegroups/{rulegroup_id}][%d] deleteRuleGroup default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteRuleGroupDefault) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/rulegroups/{rulegroup_id}][%d] deleteRuleGroup default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteRuleGroupDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteRuleGroupDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
