// Code generated by go-swagger; DO NOT EDIT.

package rulegroup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/kubermatic/v2/pkg/test/e2e/utils/apiclient/models"
)

// ListRuleGroupsReader is a Reader for the ListRuleGroups structure.
type ListRuleGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListRuleGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListRuleGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListRuleGroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListRuleGroupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListRuleGroupsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListRuleGroupsOK creates a ListRuleGroupsOK with default headers values
func NewListRuleGroupsOK() *ListRuleGroupsOK {
	return &ListRuleGroupsOK{}
}

/*
ListRuleGroupsOK describes a response with status code 200, with default header values.

RuleGroup
*/
type ListRuleGroupsOK struct {
	Payload []*models.RuleGroup
}

// IsSuccess returns true when this list rule groups o k response has a 2xx status code
func (o *ListRuleGroupsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list rule groups o k response has a 3xx status code
func (o *ListRuleGroupsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list rule groups o k response has a 4xx status code
func (o *ListRuleGroupsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list rule groups o k response has a 5xx status code
func (o *ListRuleGroupsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list rule groups o k response a status code equal to that given
func (o *ListRuleGroupsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListRuleGroupsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/rulegroups][%d] listRuleGroupsOK  %+v", 200, o.Payload)
}

func (o *ListRuleGroupsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/rulegroups][%d] listRuleGroupsOK  %+v", 200, o.Payload)
}

func (o *ListRuleGroupsOK) GetPayload() []*models.RuleGroup {
	return o.Payload
}

func (o *ListRuleGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRuleGroupsUnauthorized creates a ListRuleGroupsUnauthorized with default headers values
func NewListRuleGroupsUnauthorized() *ListRuleGroupsUnauthorized {
	return &ListRuleGroupsUnauthorized{}
}

/*
ListRuleGroupsUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type ListRuleGroupsUnauthorized struct {
}

// IsSuccess returns true when this list rule groups unauthorized response has a 2xx status code
func (o *ListRuleGroupsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list rule groups unauthorized response has a 3xx status code
func (o *ListRuleGroupsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list rule groups unauthorized response has a 4xx status code
func (o *ListRuleGroupsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list rule groups unauthorized response has a 5xx status code
func (o *ListRuleGroupsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list rule groups unauthorized response a status code equal to that given
func (o *ListRuleGroupsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ListRuleGroupsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/rulegroups][%d] listRuleGroupsUnauthorized ", 401)
}

func (o *ListRuleGroupsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/rulegroups][%d] listRuleGroupsUnauthorized ", 401)
}

func (o *ListRuleGroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListRuleGroupsForbidden creates a ListRuleGroupsForbidden with default headers values
func NewListRuleGroupsForbidden() *ListRuleGroupsForbidden {
	return &ListRuleGroupsForbidden{}
}

/*
ListRuleGroupsForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type ListRuleGroupsForbidden struct {
}

// IsSuccess returns true when this list rule groups forbidden response has a 2xx status code
func (o *ListRuleGroupsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list rule groups forbidden response has a 3xx status code
func (o *ListRuleGroupsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list rule groups forbidden response has a 4xx status code
func (o *ListRuleGroupsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list rule groups forbidden response has a 5xx status code
func (o *ListRuleGroupsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list rule groups forbidden response a status code equal to that given
func (o *ListRuleGroupsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListRuleGroupsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/rulegroups][%d] listRuleGroupsForbidden ", 403)
}

func (o *ListRuleGroupsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/rulegroups][%d] listRuleGroupsForbidden ", 403)
}

func (o *ListRuleGroupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListRuleGroupsDefault creates a ListRuleGroupsDefault with default headers values
func NewListRuleGroupsDefault(code int) *ListRuleGroupsDefault {
	return &ListRuleGroupsDefault{
		_statusCode: code,
	}
}

/*
ListRuleGroupsDefault describes a response with status code -1, with default header values.

errorResponse
*/
type ListRuleGroupsDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the list rule groups default response
func (o *ListRuleGroupsDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this list rule groups default response has a 2xx status code
func (o *ListRuleGroupsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list rule groups default response has a 3xx status code
func (o *ListRuleGroupsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list rule groups default response has a 4xx status code
func (o *ListRuleGroupsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list rule groups default response has a 5xx status code
func (o *ListRuleGroupsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list rule groups default response a status code equal to that given
func (o *ListRuleGroupsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ListRuleGroupsDefault) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/rulegroups][%d] listRuleGroups default  %+v", o._statusCode, o.Payload)
}

func (o *ListRuleGroupsDefault) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/rulegroups][%d] listRuleGroups default  %+v", o._statusCode, o.Payload)
}

func (o *ListRuleGroupsDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListRuleGroupsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
