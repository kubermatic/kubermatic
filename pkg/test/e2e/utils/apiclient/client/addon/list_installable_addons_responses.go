// Code generated by go-swagger; DO NOT EDIT.

package addon

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/kubermatic/v2/pkg/test/e2e/utils/apiclient/models"
)

// ListInstallableAddonsReader is a Reader for the ListInstallableAddons structure.
type ListInstallableAddonsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListInstallableAddonsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListInstallableAddonsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListInstallableAddonsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListInstallableAddonsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListInstallableAddonsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListInstallableAddonsOK creates a ListInstallableAddonsOK with default headers values
func NewListInstallableAddonsOK() *ListInstallableAddonsOK {
	return &ListInstallableAddonsOK{}
}

/* ListInstallableAddonsOK describes a response with status code 200, with default header values.

AccessibleAddons
*/
type ListInstallableAddonsOK struct {
	Payload models.AccessibleAddons
}

// IsSuccess returns true when this list installable addons o k response has a 2xx status code
func (o *ListInstallableAddonsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list installable addons o k response has a 3xx status code
func (o *ListInstallableAddonsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list installable addons o k response has a 4xx status code
func (o *ListInstallableAddonsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list installable addons o k response has a 5xx status code
func (o *ListInstallableAddonsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list installable addons o k response a status code equal to that given
func (o *ListInstallableAddonsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListInstallableAddonsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/installableaddons][%d] listInstallableAddonsOK  %+v", 200, o.Payload)
}

func (o *ListInstallableAddonsOK) String() string {
	return fmt.Sprintf("[GET /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/installableaddons][%d] listInstallableAddonsOK  %+v", 200, o.Payload)
}

func (o *ListInstallableAddonsOK) GetPayload() models.AccessibleAddons {
	return o.Payload
}

func (o *ListInstallableAddonsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInstallableAddonsUnauthorized creates a ListInstallableAddonsUnauthorized with default headers values
func NewListInstallableAddonsUnauthorized() *ListInstallableAddonsUnauthorized {
	return &ListInstallableAddonsUnauthorized{}
}

/* ListInstallableAddonsUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type ListInstallableAddonsUnauthorized struct {
}

// IsSuccess returns true when this list installable addons unauthorized response has a 2xx status code
func (o *ListInstallableAddonsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list installable addons unauthorized response has a 3xx status code
func (o *ListInstallableAddonsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list installable addons unauthorized response has a 4xx status code
func (o *ListInstallableAddonsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list installable addons unauthorized response has a 5xx status code
func (o *ListInstallableAddonsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list installable addons unauthorized response a status code equal to that given
func (o *ListInstallableAddonsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ListInstallableAddonsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/installableaddons][%d] listInstallableAddonsUnauthorized ", 401)
}

func (o *ListInstallableAddonsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/installableaddons][%d] listInstallableAddonsUnauthorized ", 401)
}

func (o *ListInstallableAddonsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListInstallableAddonsForbidden creates a ListInstallableAddonsForbidden with default headers values
func NewListInstallableAddonsForbidden() *ListInstallableAddonsForbidden {
	return &ListInstallableAddonsForbidden{}
}

/* ListInstallableAddonsForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type ListInstallableAddonsForbidden struct {
}

// IsSuccess returns true when this list installable addons forbidden response has a 2xx status code
func (o *ListInstallableAddonsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list installable addons forbidden response has a 3xx status code
func (o *ListInstallableAddonsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list installable addons forbidden response has a 4xx status code
func (o *ListInstallableAddonsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list installable addons forbidden response has a 5xx status code
func (o *ListInstallableAddonsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list installable addons forbidden response a status code equal to that given
func (o *ListInstallableAddonsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListInstallableAddonsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/installableaddons][%d] listInstallableAddonsForbidden ", 403)
}

func (o *ListInstallableAddonsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/installableaddons][%d] listInstallableAddonsForbidden ", 403)
}

func (o *ListInstallableAddonsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListInstallableAddonsDefault creates a ListInstallableAddonsDefault with default headers values
func NewListInstallableAddonsDefault(code int) *ListInstallableAddonsDefault {
	return &ListInstallableAddonsDefault{
		_statusCode: code,
	}
}

/* ListInstallableAddonsDefault describes a response with status code -1, with default header values.

errorResponse
*/
type ListInstallableAddonsDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the list installable addons default response
func (o *ListInstallableAddonsDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this list installable addons default response has a 2xx status code
func (o *ListInstallableAddonsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list installable addons default response has a 3xx status code
func (o *ListInstallableAddonsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list installable addons default response has a 4xx status code
func (o *ListInstallableAddonsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list installable addons default response has a 5xx status code
func (o *ListInstallableAddonsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list installable addons default response a status code equal to that given
func (o *ListInstallableAddonsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ListInstallableAddonsDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/installableaddons][%d] listInstallableAddons default  %+v", o._statusCode, o.Payload)
}

func (o *ListInstallableAddonsDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/installableaddons][%d] listInstallableAddons default  %+v", o._statusCode, o.Payload)
}

func (o *ListInstallableAddonsDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListInstallableAddonsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
