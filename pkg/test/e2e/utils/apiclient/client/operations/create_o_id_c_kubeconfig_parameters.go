// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCreateOIDCKubeconfigParams creates a new CreateOIDCKubeconfigParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateOIDCKubeconfigParams() *CreateOIDCKubeconfigParams {
	return &CreateOIDCKubeconfigParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateOIDCKubeconfigParamsWithTimeout creates a new CreateOIDCKubeconfigParams object
// with the ability to set a timeout on a request.
func NewCreateOIDCKubeconfigParamsWithTimeout(timeout time.Duration) *CreateOIDCKubeconfigParams {
	return &CreateOIDCKubeconfigParams{
		timeout: timeout,
	}
}

// NewCreateOIDCKubeconfigParamsWithContext creates a new CreateOIDCKubeconfigParams object
// with the ability to set a context for a request.
func NewCreateOIDCKubeconfigParamsWithContext(ctx context.Context) *CreateOIDCKubeconfigParams {
	return &CreateOIDCKubeconfigParams{
		Context: ctx,
	}
}

// NewCreateOIDCKubeconfigParamsWithHTTPClient creates a new CreateOIDCKubeconfigParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateOIDCKubeconfigParamsWithHTTPClient(client *http.Client) *CreateOIDCKubeconfigParams {
	return &CreateOIDCKubeconfigParams{
		HTTPClient: client,
	}
}

/* CreateOIDCKubeconfigParams contains all the parameters to send to the API endpoint
   for the create o ID c kubeconfig operation.

   Typically these are written to a http.Request.
*/
type CreateOIDCKubeconfigParams struct {

	// ClusterID.
	ClusterID *string

	// ProjectID.
	ProjectID *string

	// UserID.
	UserID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create o ID c kubeconfig params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateOIDCKubeconfigParams) WithDefaults() *CreateOIDCKubeconfigParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create o ID c kubeconfig params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateOIDCKubeconfigParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create o ID c kubeconfig params
func (o *CreateOIDCKubeconfigParams) WithTimeout(timeout time.Duration) *CreateOIDCKubeconfigParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create o ID c kubeconfig params
func (o *CreateOIDCKubeconfigParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create o ID c kubeconfig params
func (o *CreateOIDCKubeconfigParams) WithContext(ctx context.Context) *CreateOIDCKubeconfigParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create o ID c kubeconfig params
func (o *CreateOIDCKubeconfigParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create o ID c kubeconfig params
func (o *CreateOIDCKubeconfigParams) WithHTTPClient(client *http.Client) *CreateOIDCKubeconfigParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create o ID c kubeconfig params
func (o *CreateOIDCKubeconfigParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClusterID adds the clusterID to the create o ID c kubeconfig params
func (o *CreateOIDCKubeconfigParams) WithClusterID(clusterID *string) *CreateOIDCKubeconfigParams {
	o.SetClusterID(clusterID)
	return o
}

// SetClusterID adds the clusterId to the create o ID c kubeconfig params
func (o *CreateOIDCKubeconfigParams) SetClusterID(clusterID *string) {
	o.ClusterID = clusterID
}

// WithProjectID adds the projectID to the create o ID c kubeconfig params
func (o *CreateOIDCKubeconfigParams) WithProjectID(projectID *string) *CreateOIDCKubeconfigParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the create o ID c kubeconfig params
func (o *CreateOIDCKubeconfigParams) SetProjectID(projectID *string) {
	o.ProjectID = projectID
}

// WithUserID adds the userID to the create o ID c kubeconfig params
func (o *CreateOIDCKubeconfigParams) WithUserID(userID *string) *CreateOIDCKubeconfigParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the create o ID c kubeconfig params
func (o *CreateOIDCKubeconfigParams) SetUserID(userID *string) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *CreateOIDCKubeconfigParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ClusterID != nil {

		// query param cluster_id
		var qrClusterID string

		if o.ClusterID != nil {
			qrClusterID = *o.ClusterID
		}
		qClusterID := qrClusterID
		if qClusterID != "" {

			if err := r.SetQueryParam("cluster_id", qClusterID); err != nil {
				return err
			}
		}
	}

	if o.ProjectID != nil {

		// query param project_id
		var qrProjectID string

		if o.ProjectID != nil {
			qrProjectID = *o.ProjectID
		}
		qProjectID := qrProjectID
		if qProjectID != "" {

			if err := r.SetQueryParam("project_id", qProjectID); err != nil {
				return err
			}
		}
	}

	if o.UserID != nil {

		// query param user_id
		var qrUserID string

		if o.UserID != nil {
			qrUserID = *o.UserID
		}
		qUserID := qrUserID
		if qUserID != "" {

			if err := r.SetQueryParam("user_id", qUserID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
