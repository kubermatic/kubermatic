---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    kubermatic.k8c.io/location: master,seed
  name: applicationdefinitions.apps.kubermatic.k8c.io
spec:
  group: apps.kubermatic.k8c.io
  names:
    kind: ApplicationDefinition
    listKind: ApplicationDefinitionList
    plural: applicationdefinitions
    shortNames:
      - appdef
    singular: applicationdefinition
  scope: Cluster
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: ApplicationDefinition is the Schema for the applicationdefinitions API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ApplicationDefinitionSpec defines the desired state of ApplicationDefinition.
              properties:
                default:
                  description: |-
                    Default specifies if the application should be installed by default when a new user cluster is created. Default applications are
                    not enforced and users can update/delete them. KKP will only install them during cluster creation if the user didn't explicitly
                    opt out from installing default applications.
                  type: boolean
                defaultDeployOptions:
                  description: |-
                    DefaultDeployOptions holds the settings specific to the templating method used to deploy the application.
                    These settings can be overridden in applicationInstallation.
                  properties:
                    helm:
                      description: HelmDeployOptions holds the deployment settings when templating method is Helm.
                      properties:
                        atomic:
                          description: |-
                            Atomic corresponds to the --atomic flag on Helm cli.
                            if set, the installation process deletes the installation on failure; the upgrade process rolls back changes made in case of failed upgrade.
                          type: boolean
                        enableDNS:
                          description: |-
                            EnableDNS  corresponds to the --enable-dns flag on Helm cli.
                            enable DNS lookups when rendering templates.
                            if you enable this flag, you have to verify that helm template function 'getHostByName' is not being used in a chart to disclose any information you do not want to be passed to DNS servers.(c.f. CVE-2023-25165)
                          type: boolean
                        timeout:
                          description: |-
                            Timeout corresponds to the --timeout flag on Helm cli.
                            time to wait for any individual Kubernetes operation.
                          type: string
                        wait:
                          description: |-
                            Wait corresponds to the --wait flag on Helm cli.
                            if set, will wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. It will wait for as long as timeout
                          type: boolean
                      type: object
                  type: object
                defaultNamespace:
                  description: |-
                    DefaultNamespace specifies the default namespace which is used if a referencing ApplicationInstallation has no target namespace defined.
                    If unset, the name of the ApplicationDefinition is being used instead.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: |-
                        Annotations of the namespace
                        More info: http://kubernetes.io/docs/user-guide/annotations
                      type: object
                    create:
                      default: true
                      description: Create defines whether the namespace should be created if it does not exist. Defaults to true
                      type: boolean
                    labels:
                      additionalProperties:
                        type: string
                      description: |-
                        Labels of the namespace
                        More info: http://kubernetes.io/docs/user-guide/labels
                      type: object
                    name:
                      description: |-
                        Name is the namespace to deploy the Application into.
                        Should be a valid lowercase RFC1123 domain name
                      maxLength: 63
                      pattern: ^(|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)
                      type: string
                  required:
                    - create
                    - name
                  type: object
                defaultValues:
                  description: |-
                    DefaultValues specify default values for the UI which are passed to helm templating when creating an application. Comments are not preserved.
                    Deprecated: Use DefaultValuesBlock instead. This field was deprecated in KKP 2.25 and will be removed in KKP 2.27+.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                defaultValuesBlock:
                  description: DefaultValuesBlock specifies default values for the UI which are passed to helm templating when creating an application. Comments are preserved.
                  type: string
                defaultVersion:
                  description: DefaultVersion of the application to use, if not specified the latest available version will be used.
                  pattern: v?([0-9]+)(\.[0-9]+)?(\.[0-9]+)?(-([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?(\+([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?
                  type: string
                description:
                  description: Description of the application. what is its purpose
                  type: string
                displayName:
                  description: DisplayName is the name for the application that will be displayed in the UI.
                  type: string
                documentationURL:
                  description: |-
                    DocumentationURL holds a link to official documentation of the Application
                    Alternatively this can be a link to the Readme of a chart in a git repository
                  type: string
                enforced:
                  description: |-
                    Enforced specifies if the application is enforced to be installed on the user clusters. Enforced applications are
                    installed/updated by KKP for the user clusters. Users are not allowed to update/delete them. KKP will revert the changes
                    done by the application to the desired state specified in the ApplicationDefinition.
                  type: boolean
                logo:
                  description: Logo of the Application as a base64 encoded svg
                  type: string
                logoFormat:
                  description: LogoFormat contains logo format of the configured Application. Options are "svg+xml" and "png"
                  enum:
                    - svg+xml
                    - png
                  type: string
                method:
                  description: Method used to install the application
                  enum:
                    - helm
                  type: string
                selector:
                  description: Selector is used to select the targeted user clusters for defaulting and enforcing applications. This is only used for default/enforced applications and ignored otherwise.
                  properties:
                    datacenters:
                      description: Datacenters is a list of datacenters where the application can be installed.
                      items:
                        type: string
                      type: array
                  type: object
                sourceURL:
                  description: SourceURL holds a link to the official source code mirror or git repository of the application
                  type: string
                versions:
                  description: Available version for this application
                  items:
                    properties:
                      template:
                        description: Template defines how application is installed (source provenance, Method...)
                        properties:
                          source:
                            description: |-
                              Defined how the source of the application (e.g Helm chart) is retrieved.
                              Exactly one type of source must be defined.
                            properties:
                              git:
                                description: Install application from a Git repository
                                properties:
                                  credentials:
                                    description: Credentials are optional and holds the git credentials
                                    properties:
                                      method:
                                        description: |-
                                          Authentication method. Either password or token or ssh-key.
                                          If method is password then username and password must be defined.
                                          If method is token then token must be defined.
                                          If method is ssh-key then ssh-key must be defined.
                                        enum:
                                          - password
                                          - token
                                          - ssh-key
                                        type: string
                                      password:
                                        description: |-
                                          Password holds the ref and key in the secret for the Password credential.
                                          The Secret must exist in the namespace where KKP is installed (default is "kubermatic").
                                          The Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:` set to "helm" or "git".
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                          - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      sshKey:
                                        description: |-
                                          SSHKey holds the ref and key in the secret for the SshKey credential.
                                          The Secret must exist in the namespace where KKP is installed (default is "kubermatic").
                                          The Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:` set to "helm" or "git".
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                          - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      token:
                                        description: |-
                                          Token holds the ref and key in the secret for the token credential.
                                          The Secret must exist in the namespace where KKP is installed (default is "kubermatic").
                                          The Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:` set to "helm" or "git".
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                          - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      username:
                                        description: |-
                                          Username holds the ref and key in the secret for the username credential.
                                          The Secret must exist in the namespace where KKP is installed (default is "kubermatic").
                                          The Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:` set to "helm" or "git".
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                          - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    required:
                                      - method
                                    type: object
                                  path:
                                    description: Path of the "source" in the repository. default is repository root
                                    type: string
                                  ref:
                                    description: |-
                                      Git reference to checkout.
                                      For large repositories, we recommend to either use Tag, Branch or Branch+Commit.
                                      This allows a shallow clone, which dramatically speeds up performance
                                    properties:
                                      branch:
                                        description: Branch to checkout. Only the last commit of the branch will be checkout in order to reduce the amount of data to download.
                                        type: string
                                      commit:
                                        description: |-
                                          Commit SHA in a Branch to checkout.

                                          It must be used in conjunction with branch field.
                                        pattern: ^[a-f0-9]{40}$
                                        type: string
                                      tag:
                                        description: |-
                                          Tag to check out.
                                          It can not be used in conjunction with commit or branch.
                                        type: string
                                    type: object
                                  remote:
                                    description: |-
                                      URL to the repository. Can be HTTP(s) (e.g. https://example.com/myrepo) or
                                      SSH (e.g. git://example.com[:port]/path/to/repo.git/).
                                    minLength: 1
                                    type: string
                                required:
                                  - ref
                                  - remote
                                type: object
                              helm:
                                description: Install Application from a Helm repository
                                properties:
                                  chartName:
                                    description: Name of the Chart.
                                    minLength: 1
                                    type: string
                                  chartVersion:
                                    description: Version of the Chart.
                                    minLength: 1
                                    type: string
                                  credentials:
                                    description: |-
                                      Credentials are optional and hold the ref to the secret with Helm credentials.
                                      Either username / password or registryConfigFile can be defined.
                                    properties:
                                      password:
                                        description: |-
                                          Password holds the ref and key in the secret for the password credential.
                                          The Secret must exist in the namespace where KKP is installed (default is "kubermatic").
                                          The Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:` set to "helm" or "git"
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                          - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      registryConfigFile:
                                        description: |-
                                          RegistryConfigFile holds the ref and key in the secret for the registry credential file.
                                          The value is dockercfg file that follows the same format rules as ~/.docker/config.json.
                                          The Secret must exist in the namespace where KKP is installed (default is "kubermatic").
                                          The Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:` set to "helm" or "git"
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                          - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      username:
                                        description: |-
                                          Username holds the ref and key in the secret for the username credential.
                                          The Secret must exist in the namespace where KKP is installed (default is "kubermatic").
                                          The Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:` set to "helm" or "git"
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                          - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  insecure:
                                    description: |-
                                      Insecure disables certificate validation when using an HTTPS registry. This setting has no
                                      effect when using a plaintext connection.
                                    type: boolean
                                  plainHTTP:
                                    description: |-
                                      PlainHTTP will enable HTTP-only (i.e. unencrypted) traffic for oci:// URLs. By default HTTPS
                                      is used when communicating with an oci:// URL.
                                    type: boolean
                                  url:
                                    description: |-
                                      URL of the Helm repository the following schemes are supported:

                                      * http://example.com/myrepo (HTTP)
                                      * https://example.com/myrepo (HTTPS)
                                      * oci://example.com:5000/myrepo (OCI, HTTPS by default, use plainHTTP to enable unencrypted HTTP)
                                    pattern: ^(http|https|oci)://.+
                                    type: string
                                required:
                                  - chartName
                                  - chartVersion
                                  - url
                                type: object
                            type: object
                          templateCredentials:
                            description: DependencyCredentials holds the credentials that may be needed for templating the application.
                            properties:
                              helmCredentials:
                                description: |-
                                  HelmCredentials holds the ref to the secret with helm credentials needed to build helm dependencies.
                                  It is not required when using helm as a source, as dependencies are already prepackaged in this case.
                                  It's either username / password or a registryConfigFile can be defined.
                                properties:
                                  password:
                                    description: |-
                                      Password holds the ref and key in the secret for the password credential.
                                      The Secret must exist in the namespace where KKP is installed (default is "kubermatic").
                                      The Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:` set to "helm" or "git"
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    required:
                                      - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  registryConfigFile:
                                    description: |-
                                      RegistryConfigFile holds the ref and key in the secret for the registry credential file.
                                      The value is dockercfg file that follows the same format rules as ~/.docker/config.json.
                                      The Secret must exist in the namespace where KKP is installed (default is "kubermatic").
                                      The Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:` set to "helm" or "git"
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    required:
                                      - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  username:
                                    description: |-
                                      Username holds the ref and key in the secret for the username credential.
                                      The Secret must exist in the namespace where KKP is installed (default is "kubermatic").
                                      The Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:` set to "helm" or "git"
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    required:
                                      - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                            type: object
                        required:
                          - source
                        type: object
                      version:
                        description: Version of the application (e.g. v1.2.3)
                        pattern: v?([0-9]+)(\.[0-9]+)?(\.[0-9]+)?(-([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?(\+([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?
                        type: string
                    required:
                      - template
                      - version
                    type: object
                  type: array
              required:
                - description
                - method
                - versions
              type: object
          type: object
      served: true
      storage: true
