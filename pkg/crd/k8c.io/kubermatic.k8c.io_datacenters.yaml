# This file has been generated by hack/update-codegen.sh, DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  name: datacenters.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: Datacenter
    listKind: DatacenterList
    plural: datacenters
    singular: datacenter
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.clusters
          name: Clusters
          type: integer
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: Datacenter is an allowed cloud provider configuration for user clusters. Each cluster must be scheduled to use exactly one of the available datacenters (of the same provider, i.e. an AWS cluster cannot use a Hetzner datacenter).
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: DatacenterSpec configures a KKP datacenter. Provider configuration is mutually exclusive, and as such only a single provider can be configured per datacenter.
              properties:
                enforceAuditLogging:
                  description: 'Optional: EnforceAuditLogging enforces audit logging on every cluster within the DC, ignoring cluster-specific settings.'
                  type: boolean
                enforcePodSecurityPolicy:
                  description: 'Optional: EnforcePodSecurityPolicy enforces pod security policy plugin on every clusters within the DC, ignoring cluster-specific settings.'
                  type: boolean
                machineFlavorFilter:
                  description: 'Optional: MachineFlavorFilter is used to filter out allowed machine flavors based on the specified resource limits like CPU, Memory, and GPU etc.'
                  properties:
                    enableGPU:
                      description: Include VMs with GPU
                      type: boolean
                    maxCPU:
                      default: 0
                      description: Maximum number of vCPU
                      minimum: 0
                      type: integer
                    maxRAM:
                      default: 0
                      description: Maximum RAM size in GB
                      minimum: 0
                      type: integer
                    minCPU:
                      default: 0
                      description: Minimum number of vCPU
                      minimum: 0
                      type: integer
                    minRAM:
                      default: 0
                      description: Minimum RAM size in GB
                      minimum: 0
                      type: integer
                  required:
                    - enableGPU
                    - maxCPU
                    - maxRAM
                    - minCPU
                    - minRAM
                  type: object
                node:
                  description: Node holds node-specific settings, like e.g. HTTP proxy, Docker registries and the like. Proxy settings are inherited from the seed if not specified here.
                  properties:
                    containerdRegistryMirrors:
                      description: 'Optional: ContainerdRegistryMirrors configure registry mirrors endpoints. Can be used multiple times to specify multiple mirrors.'
                      properties:
                        registries:
                          additionalProperties:
                            description: ContainerdRegistry defines endpoints and security for given container registry.
                            properties:
                              mirrors:
                                description: List of registry mirrors to use
                                items:
                                  type: string
                                type: array
                            type: object
                          description: A map of registries to use to render configs and mirrors for containerd registries
                          type: object
                      type: object
                    httpProxy:
                      description: 'Optional: If set, this proxy will be configured for both HTTP and HTTPS.'
                      type: string
                    insecureRegistries:
                      description: 'Optional: These image registries will be configured as insecure on the container runtime.'
                      items:
                        type: string
                      type: array
                    noProxy:
                      description: 'Optional: If set this will be set as NO_PROXY environment variable on the node; The value must be a comma-separated list of domains for which no proxy should be used, e.g. "*.example.com,internal.dev". Note that the in-cluster apiserver URL will be automatically prepended to this value.'
                      type: string
                    pauseImage:
                      description: 'Optional: Translates to --pod-infra-container-image on the kubelet. If not set, the kubelet will default it.'
                      type: string
                    registryMirrors:
                      description: 'Optional: These image registries will be configured as registry mirrors on the container runtime.'
                      items:
                        type: string
                      type: array
                  type: object
                operatingSystemProfiles:
                  additionalProperties:
                    type: string
                  description: 'Optional: DefaultOperatingSystemProfiles specifies the OperatingSystemProfiles to use for each supported operating system.'
                  type: object
                provider:
                  description: Provider contains cloud-provider related configuration.
                  properties:
                    alibaba:
                      description: Alibaba configures an Alibaba Cloud datacenter.
                      properties:
                        region:
                          description: Region to use, for a full list of regions see https://www.alibabacloud.com/help/doc-detail/40654.htm
                          type: string
                      required:
                        - region
                      type: object
                    anexia:
                      description: Anexia configures an Anexia datacenter.
                      properties:
                        locationID:
                          description: LocationID the location of the region
                          type: string
                      required:
                        - locationID
                      type: object
                    aws:
                      description: AWS configures an Amazon Web Services (AWS) datacenter.
                      properties:
                        images:
                          additionalProperties:
                            type: string
                          description: List of AMIs to use for a given operating system. This gets defaulted by querying for the latest AMI for the given distribution when machines are created, so under normal circumstances it is not necessary to define the AMIs statically.
                          type: object
                        region:
                          description: The AWS region to use, e.g. "us-east-1". For a list of available regions, see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html
                          type: string
                      required:
                        - region
                      type: object
                    azure:
                      description: Azure configures an Azure datacenter.
                      properties:
                        location:
                          description: Region to use, for example "westeurope". A list of available regions can be found at https://azure.microsoft.com/en-us/global-infrastructure/locations/
                          type: string
                      required:
                        - location
                      type: object
                    bringyourown:
                      description: BringYourOwn contains settings for clusters using manually created nodes via kubeadm.
                      type: object
                    digitalocean:
                      description: Digitalocean contains settings for Digitalocean (DO).
                      properties:
                        region:
                          description: Datacenter location, e.g. "ams3". A list of existing datacenters can be found at https://www.digitalocean.com/docs/platform/availability-matrix/
                          type: string
                      required:
                        - region
                      type: object
                    fake:
                      description: DatacenterSpecFake describes a fake datacenter.
                      properties:
                        fakeProperty:
                          type: string
                      type: object
                    gcp:
                      description: GCP configures a Google Cloud Platform (GCP) datacenter.
                      properties:
                        region:
                          description: Region to use, for example "europe-west3", for a full list of regions see https://cloud.google.com/compute/docs/regions-zones/
                          type: string
                        regional:
                          description: 'Optional: Regional clusters spread their resources across multiple availability zones. Refer to the official documentation for more details on this: https://cloud.google.com/kubernetes-engine/docs/concepts/regional-clusters'
                          type: boolean
                        zoneSuffixes:
                          description: List of enabled zones, for example [a, c]. See the link above for the available zones in your chosen region.
                          items:
                            type: string
                          type: array
                      required:
                        - region
                        - zoneSuffixes
                      type: object
                    hetzner:
                      description: Hetzner configures a Hetzner datacenter.
                      properties:
                        datacenter:
                          description: Datacenter location, e.g. "nbg1-dc3". A list of existing datacenters can be found at https://docs.hetzner.com/general/others/data-centers-and-connection/
                          type: string
                        location:
                          description: 'Optional: Detailed location of the datacenter, like "Hamburg" or "Datacenter 7". For informational purposes only.'
                          type: string
                        network:
                          description: Network is the pre-existing Hetzner network in which the machines are running. While machines can be in multiple networks, a single one must be chosen for the HCloud CCM to work.
                          type: string
                      required:
                        - datacenter
                        - network
                      type: object
                    kubevirt:
                      description: KubeVirt configures a KubeVirt datacenter.
                      properties:
                        customNetworkPolicies:
                          description: CustomNetworkPolicies (optional) allows to add some extra custom NetworkPolicies, that are deployed in the dedicated infra KubeVirt cluster. They are added to the defaults.
                          items:
                            description: CustomNetworkPolicy contains a name and the Spec of a NetworkPolicy.
                            properties:
                              name:
                                description: Name is the name of the Custom Network Policy.
                                type: string
                              spec:
                                description: Spec is the Spec of the NetworkPolicy, using the standard type.
                                properties:
                                  egress:
                                    description: List of egress rules to be applied to the selected pods. Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8
                                    items:
                                      description: NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8
                                      properties:
                                        ports:
                                          description: List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
                                          items:
                                            description: NetworkPolicyPort describes a port to allow traffic on
                                            properties:
                                              endPort:
                                                description: If set, indicates that the range of ports from port to endPort, inclusive, should be allowed by the policy. This field cannot be defined if the port field is not defined or if the port field is defined as a named (string) port. The endPort must be equal or greater than port.
                                                format: int32
                                                type: integer
                                              port:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: The port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers. If present, only traffic on the specified protocol AND port will be matched.
                                                x-kubernetes-int-or-string: true
                                              protocol:
                                                default: TCP
                                                description: The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.
                                                type: string
                                            type: object
                                          type: array
                                        to:
                                          description: List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.
                                          items:
                                            description: NetworkPolicyPeer describes a peer to allow traffic to/from. Only certain combinations of fields are allowed
                                            properties:
                                              ipBlock:
                                                description: IPBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.
                                                properties:
                                                  cidr:
                                                    description: CIDR is a string representing the IP Block Valid examples are "192.168.1.0/24" or "2001:db8::/64"
                                                    type: string
                                                  except:
                                                    description: Except is a slice of CIDRs that should not be included within an IP Block Valid examples are "192.168.1.0/24" or "2001:db8::/64" Except values will be rejected if they are outside the CIDR range
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - cidr
                                                type: object
                                              namespaceSelector:
                                                description: "Selects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces. \n If PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector."
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                    items:
                                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              podSelector:
                                                description: "This is a label selector which selects Pods. This field follows standard label selector semantics; if present but empty, it selects all pods. \n If NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the Pods matching PodSelector in the policy's own Namespace."
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                    items:
                                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  ingress:
                                    description: List of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)
                                    items:
                                      description: NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from.
                                      properties:
                                        from:
                                          description: List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the from list.
                                          items:
                                            description: NetworkPolicyPeer describes a peer to allow traffic to/from. Only certain combinations of fields are allowed
                                            properties:
                                              ipBlock:
                                                description: IPBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.
                                                properties:
                                                  cidr:
                                                    description: CIDR is a string representing the IP Block Valid examples are "192.168.1.0/24" or "2001:db8::/64"
                                                    type: string
                                                  except:
                                                    description: Except is a slice of CIDRs that should not be included within an IP Block Valid examples are "192.168.1.0/24" or "2001:db8::/64" Except values will be rejected if they are outside the CIDR range
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - cidr
                                                type: object
                                              namespaceSelector:
                                                description: "Selects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces. \n If PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector."
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                    items:
                                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              podSelector:
                                                description: "This is a label selector which selects Pods. This field follows standard label selector semantics; if present but empty, it selects all pods. \n If NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the Pods matching PodSelector in the policy's own Namespace."
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                    items:
                                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            type: object
                                          type: array
                                        ports:
                                          description: List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
                                          items:
                                            description: NetworkPolicyPort describes a port to allow traffic on
                                            properties:
                                              endPort:
                                                description: If set, indicates that the range of ports from port to endPort, inclusive, should be allowed by the policy. This field cannot be defined if the port field is not defined or if the port field is defined as a named (string) port. The endPort must be equal or greater than port.
                                                format: int32
                                                type: integer
                                              port:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: The port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers. If present, only traffic on the specified protocol AND port will be matched.
                                                x-kubernetes-int-or-string: true
                                              protocol:
                                                default: TCP
                                                description: The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  podSelector:
                                    description: Selects the pods to which this NetworkPolicy object applies. The array of ingress rules is applied to any pods selected by this field. Multiple network policies can select the same set of pods. In this case, the ingress rules for each are combined additively. This field is NOT optional and follows standard label selector semantics. An empty podSelector matches all pods in this namespace.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  policyTypes:
                                    description: List of rule types that the NetworkPolicy relates to. Valid options are ["Ingress"], ["Egress"], or ["Ingress", "Egress"]. If this field is not specified, it will default based on the existence of Ingress or Egress rules; policies that contain an Egress section are assumed to affect Egress, and all policies (whether or not they contain an Ingress section) are assumed to affect Ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include "Egress" (since such a policy would not include an Egress section and would otherwise default to just [ "Ingress" ]). This field is beta-level in 1.8
                                    items:
                                      description: PolicyType string describes the NetworkPolicy type This type is beta-level in 1.8
                                      type: string
                                    type: array
                                required:
                                  - podSelector
                                type: object
                            required:
                              - name
                              - spec
                            type: object
                          type: array
                        dnsConfig:
                          description: DNSConfig represents the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.
                          properties:
                            nameservers:
                              description: A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
                              items:
                                type: string
                              type: array
                            options:
                              description: A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
                              items:
                                description: PodDNSConfigOption defines DNS resolver options of a pod.
                                properties:
                                  name:
                                    description: Required.
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            searches:
                              description: A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
                              items:
                                type: string
                              type: array
                          type: object
                        dnsPolicy:
                          default: ClusterFirst
                          description: DNSPolicy represents the dns policy for the pod. Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. Defaults to "ClusterFirst". DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.
                          enum:
                            - ClusterFirstWithHostNet
                            - ClusterFirst
                            - Default
                            - None
                          type: string
                        images:
                          description: Images represents standard VM Image sources.
                          properties:
                            http:
                              description: HTTP represents a http source.
                              properties:
                                operatingSystems:
                                  additionalProperties:
                                    additionalProperties:
                                      type: string
                                    description: OSVersions defines a map of OS version and the source to download the image.
                                    type: object
                                  description: OperatingSystems represents list of supported operating-systems with their URLs.
                                  type: object
                              required:
                                - operatingSystems
                              type: object
                          type: object
                        infraStorageClasses:
                          description: 'InfraStorageClasses contains a list of KubeVirt infra cluster StorageClasses names that will be used to initialise StorageClasses in the tenant cluster. In the tenant cluster, the created StorageClass name will have as name: kubevirt-<infra-storageClass-name>'
                          items:
                            properties:
                              isDefaultClass:
                                description: 'Optional: IsDefaultClass. If true, the created StorageClass in the tenant cluster will be annotated with: storageclass.kubernetes.io/is-default-class : true If missing or false, annotation will be: storageclass.kubernetes.io/is-default-class : false'
                                type: boolean
                              name:
                                type: string
                            required:
                              - name
                            type: object
                          type: array
                      type: object
                    nutanix:
                      description: Nutanix configures a Nutanix HCI datacenter.
                      properties:
                        allowInsecure:
                          description: 'Optional: AllowInsecure allows to disable the TLS certificate check against the endpoint (defaults to false)'
                          type: boolean
                        endpoint:
                          description: Endpoint to use for accessing Nutanix Prism Central. No protocol or port should be passed, for example "nutanix.example.com" or "10.0.0.1"
                          type: string
                        images:
                          additionalProperties:
                            type: string
                          description: Images to use for each supported operating system
                          type: object
                        port:
                          description: 'Optional: Port to use when connecting to the Nutanix Prism Central endpoint (defaults to 9440)'
                          format: int32
                          type: integer
                      required:
                        - endpoint
                        - images
                      type: object
                    openstack:
                      description: OpenStack configures an OpenStack datacenter.
                      properties:
                        authURL:
                          type: string
                        availabilityZone:
                          type: string
                        dnsServers:
                          description: Used for automatic network creation
                          items:
                            type: string
                          type: array
                        enabledFlavors:
                          description: 'Optional: List of enabled flavors for the given datacenter'
                          items:
                            type: string
                          type: array
                        enforceFloatingIP:
                          description: Optional
                          type: boolean
                        ignoreVolumeAZ:
                          description: Optional
                          type: boolean
                        images:
                          additionalProperties:
                            type: string
                          description: Images to use for each supported operating system.
                          type: object
                        ipv6Enabled:
                          description: 'Optional: defines if the IPv6 is enabled for the datacenter'
                          type: boolean
                        manageSecurityGroups:
                          description: 'Optional: Gets mapped to the "manage-security-groups" setting in the cloud config. This setting defaults to true.'
                          type: boolean
                        nodeSizeRequirements:
                          description: 'Optional: Restrict the allowed VM configurations that can be chosen in the KKP dashboard. This setting does not affect the validation webhook for MachineDeployments.'
                          properties:
                            minimumMemory:
                              description: MinimumMemory is the minimum required amount of memory, measured in MB
                              type: integer
                            minimumVCPUs:
                              description: VCPUs is the minimum required amount of (virtual) CPUs
                              type: integer
                          type: object
                        region:
                          type: string
                        trustDevicePath:
                          description: 'Optional: Gets mapped to the "trust-device-path" setting in the cloud config. This setting defaults to false.'
                          type: boolean
                        useOctavia:
                          description: 'Optional: Gets mapped to the "use-octavia" setting in the cloud config. use-octavia is enabled by default in CCM since v1.17.0, and disabled by default with the in-tree cloud provider.'
                          type: boolean
                      required:
                        - authURL
                        - images
                        - region
                      type: object
                    packet:
                      description: Packet configures an Equinix Metal datacenter.
                      properties:
                        facilities:
                          description: The list of enabled facilities, for example "ams1", for a full list of available facilities see https://metal.equinix.com/developers/docs/locations/facilities/
                          items:
                            type: string
                          type: array
                        metro:
                          description: Metros are facilities that are grouped together geographically and share capacity and networking features, see https://metal.equinix.com/developers/docs/locations/metros/
                          type: string
                      type: object
                    providerName:
                      description: ProviderName is the name of the cloud provider used for this datacenter. This must match the given provider spec (e.g. if the providerName is "aws", then the `aws` field must be set).
                      enum:
                        - alibaba
                        - anexia
                        - aws
                        - azure
                        - bringyourown
                        - digitalocean
                        - gcp
                        - hetzner
                        - kubevirt
                        - nutanix
                        - openstack
                        - packet
                        - vmwareclouddirector
                        - vsphere
                      type: string
                    vmwareclouddirector:
                      description: VMwareCloudDirector configures a VMware Cloud Director datacenter.
                      properties:
                        allowInsecure:
                          description: If set to true, disables the TLS certificate check against the endpoint.
                          type: boolean
                        catalog:
                          description: The default catalog which contains the VM templates.
                          type: string
                        storageProfile:
                          description: The name of the storage profile to use for disks attached to the VMs.
                          type: string
                        templates:
                          additionalProperties:
                            type: string
                          description: A list of VM templates to use for a given operating system. You must define at least one template.
                          type: object
                        url:
                          description: Endpoint URL to use, including protocol, for example "https://vclouddirector.example.com".
                          type: string
                      required:
                        - templates
                        - url
                      type: object
                    vsphere:
                      description: VSphere configures a VMware vSphere datacenter.
                      properties:
                        allowInsecure:
                          description: If set to true, disables the TLS certificate check against the endpoint.
                          type: boolean
                        cluster:
                          description: The name of the vSphere cluster to use. Used for out-of-tree CSI Driver.
                          type: string
                        datacenter:
                          description: The name of the datacenter to use.
                          type: string
                        datastore:
                          description: The default Datastore to be used for provisioning volumes using storage classes/dynamic provisioning and for storing virtual machine files in case no `Datastore` or `DatastoreCluster` is provided at Cluster level.
                          type: string
                        defaultTagCategoryID:
                          description: DefaultTagCategoryID is the tag category id that will be used as default, if users don't specify it on a cluster level, and they don't wish KKP to create default generated tag category, upon cluster creation.
                          type: string
                        endpoint:
                          description: Endpoint URL to use, including protocol, for example "https://vcenter.example.com".
                          type: string
                        infraManagementUser:
                          description: 'Optional: Infra management user is the user that will be used for everything except the cloud provider functionality, which will still use the credentials passed in via the Kubermatic dashboard/API.'
                          properties:
                            password:
                              type: string
                            username:
                              type: string
                          type: object
                        ipv6Enabled:
                          description: 'Optional: defines if the IPv6 is enabled for the datacenter'
                          type: boolean
                        rootPath:
                          description: 'Optional: The root path for cluster specific VM folders. Each cluster gets its own folder below the root folder. Must be the FQDN (for example "/datacenter-1/vm/all-kubermatic-vms-in-here") and defaults to the root VM folder: "/datacenter-1/vm"'
                          type: string
                        storagePolicy:
                          description: The name of the storage policy to use for the storage class created in the user cluster.
                          type: string
                        templates:
                          additionalProperties:
                            type: string
                          description: 'A list of VM templates to use for a given operating system. You must define at least one template. See: https://github.com/kubermatic/machine-controller/blob/master/docs/vsphere.md#template-vms-preparation'
                          type: object
                      required:
                        - cluster
                        - datacenter
                        - datastore
                        - endpoint
                        - templates
                      type: object
                  required:
                    - providerName
                  type: object
                providerReconciliationInterval:
                  description: 'Optional: ProviderReconciliationInterval is the time that must have passed since a Cluster''s status.lastProviderReconciliation to make the cliuster controller perform an in-depth provider reconciliation, where for example missing security groups will be reconciled. Setting this too low can cause rate limits by the cloud provider, setting this too high means that *if* a resource at a cloud provider is removed/changed outside of KKP, it will take this long to fix it.'
                  type: string
                requiredEmails:
                  description: 'Optional: When defined, only users with an e-mail address on the given domains can make use of this datacenter. You can define multiple domains, e.g. "example.com", one of which must match the email domain exactly (i.e. "example.com" will not match "user@test.example.com").'
                  items:
                    type: string
                  type: array
              required:
                - provider
              type: object
            status:
              description: DatacenterStatus contains runtime information regarding the datacenter.
              properties:
                clusters:
                  default: 0
                  description: Clusters is the total number of user clusters that exist on this seed.
                  minimum: 0
                  type: integer
              required:
                - clusters
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
