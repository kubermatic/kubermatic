# This file has been generated by hack/update-codegen.sh, DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  name: ipampools.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: IPAMPool
    listKind: IPAMPoolList
    plural: ipampools
    singular: ipampool
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: IPAMPool is the object representing Multi-Cluster IP Address Management (IPAM) configuration for KKP user clusters.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: IPAMPoolSpec specifies the  Multi-Cluster IP Address Management (IPAM) configuration for KKP user clusters.
              properties:
                datacenters:
                  additionalProperties:
                    description: IPAMPoolDatacenterSettings contains IPAM Pool configuration for a datacenter.
                    properties:
                      allocationPrefix:
                        description: AllocationPrefix is the prefix for the allocation. Used when "type=prefix".
                        maximum: 128
                        minimum: 1
                        type: integer
                      allocationRange:
                        description: AllocationRange is the range for the allocation. Used when "type=range".
                        minimum: 1
                        type: integer
                      excludePrefixes:
                        description: 'Optional: ExcludePrefixes is used to exclude particular subnets for the allocation. NOTE: must be the same length as allocationPrefix. Can be used when "type=prefix".'
                        items:
                          description: SubnetCIDR is used to store IPv4/IPv6 CIDR.
                          pattern: ((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))/([0-9]|[1-2][0-9]|3[0-2])$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))/([0-9]|[0-9][0-9]|1[0-1][0-9]|12[0-8])$))
                          type: string
                        type: array
                      excludeRanges:
                        description: 'Optional: ExcludeRanges is used to exclude particular IPs or IP ranges for the allocation. Examples: "192.168.1.100-192.168.1.110", "192.168.1.255". Can be used when "type=range".'
                        items:
                          type: string
                        type: array
                      poolCidr:
                        description: PoolCIDR is the pool CIDR to be used for the allocation.
                        pattern: ((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))/([0-9]|[1-2][0-9]|3[0-2])$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))/([0-9]|[0-9][0-9]|1[0-1][0-9]|12[0-8])$))
                        type: string
                      type:
                        description: Type is the allocation type to be used.
                        enum:
                          - prefix
                          - range
                        type: string
                    required:
                      - poolCidr
                      - type
                    type: object
                  description: Datacenters contains a map of datacenters (DCs) for the allocation.
                  type: object
              required:
                - datacenters
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
