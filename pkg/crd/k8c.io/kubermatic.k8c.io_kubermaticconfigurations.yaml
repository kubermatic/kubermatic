# This file has been generated by hack/update-codegen.sh, DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
    kubermatic.k8c.io/location: master,seed
  name: kubermaticconfigurations.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: KubermaticConfiguration
    listKind: KubermaticConfigurationList
    plural: kubermaticconfigurations
    singular: kubermaticconfiguration
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: KubermaticConfiguration is the configuration required for running Kubermatic.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KubermaticConfigurationSpec is the spec for a Kubermatic installation.
              properties:
                api:
                  description: API configures the frontend REST API used by the dashboard.
                  properties:
                    accessibleAddons:
                      description: AccessibleAddons is a list of addons that should be enabled in the API.
                      items:
                        type: string
                      type: array
                    debugLog:
                      description: DebugLog enables more verbose logging.
                      type: boolean
                    dockerRepository:
                      description: DockerRepository is the repository containing the Kubermatic REST API image.
                      type: string
                    pprofEndpoint:
                      description: PProfEndpoint controls the port the API should listen on to provide pprof data. This port is never exposed from the container and only available via port-forwardings.
                      type: string
                    replicas:
                      description: Replicas sets the number of pod replicas for the API deployment.
                      format: int32
                      type: integer
                    resources:
                      description: Resources describes the requested and maximum allowed CPU/memory usage.
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable."
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                type: string
                            required:
                              - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                  type: object
                auth:
                  description: Auth defines keys and URLs for Dex. These must be defined unless the HeadlessInstallation feature gate is set, which will disable the UI/API and its need for an OIDC provider entirely.
                  properties:
                    clientID:
                      type: string
                    issuerClientID:
                      type: string
                    issuerClientSecret:
                      type: string
                    issuerCookieKey:
                      type: string
                    issuerRedirectURL:
                      type: string
                    serviceAccountKey:
                      type: string
                    skipTokenIssuerTLSVerify:
                      type: boolean
                    tokenIssuer:
                      type: string
                  type: object
                caBundle:
                  description: CABundle references a ConfigMap in the same namespace as the KubermaticConfiguration. This ConfigMap must contain a ca-bundle.pem with PEM-encoded certificates. This bundle automatically synchronized into each seed and each usercluster. APIGroup and Kind are currently ignored.
                  properties:
                    apiGroup:
                      description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                      type: string
                    kind:
                      description: Kind is the type of resource being referenced
                      type: string
                    name:
                      description: Name is the name of resource being referenced
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                  x-kubernetes-map-type: atomic
                exposeStrategy:
                  description: 'ExposeStrategy is the strategy to expose the cluster with. Note: The `seed_dns_overwrite` setting of a Seed''s datacenter doesn''t have any effect if this is set to LoadBalancerStrategy.'
                  enum:
                    - NodePort
                    - LoadBalancer
                    - Tunneling
                  type: string
                featureGates:
                  additionalProperties:
                    type: boolean
                  description: FeatureGates are used to optionally enable certain features.
                  type: object
                imagePullSecret:
                  description: ImagePullSecret is used to authenticate against Docker registries.
                  type: string
                ingress:
                  description: Ingress contains settings for making the API and UI accessible remotely.
                  properties:
                    certificateIssuer:
                      description: CertificateIssuer is the name of a cert-manager Issuer or ClusterIssuer (default) that will be used to acquire the certificate for the configured domain. To use a namespaced Issuer, set the Kind to "Issuer" and manually create the matching Issuer in Kubermatic's namespace. Setting an empty name disables the automatic creation of certificates and disables the TLS settings on the Kubermatic Ingress.
                      properties:
                        apiGroup:
                          description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                          type: string
                        kind:
                          description: Kind is the type of resource being referenced
                          type: string
                        name:
                          description: Name is the name of resource being referenced
                          type: string
                      required:
                        - kind
                        - name
                      type: object
                      x-kubernetes-map-type: atomic
                    className:
                      description: ClassName is the Ingress resource's class name, used for selecting the appropriate ingress controller.
                      type: string
                    disable:
                      description: Disable will prevent an Ingress from being created at all. This is mostly useful during testing. If the Ingress is disabled, the CertificateIssuer setting can also be left empty, as no Certificate resource will be created.
                      type: boolean
                    domain:
                      description: Domain is the base domain where the dashboard shall be available. Even with a disabled Ingress, this must always be a valid hostname.
                      type: string
                  required:
                    - domain
                  type: object
                masterController:
                  description: MasterController configures the master-controller-manager.
                  properties:
                    debugLog:
                      description: DebugLog enables more verbose logging.
                      type: boolean
                    dockerRepository:
                      description: DockerRepository is the repository containing the Kubermatic master-controller-manager image.
                      type: string
                    pprofEndpoint:
                      description: PProfEndpoint controls the port the master-controller-manager should listen on to provide pprof data. This port is never exposed from the container and only available via port-forwardings.
                      type: string
                    projectsMigrator:
                      description: ProjectsMigrator configures the migrator for user projects.
                      properties:
                        dryRun:
                          description: DryRun makes the migrator only log the actions it would take.
                          type: boolean
                      type: object
                    replicas:
                      description: Replicas sets the number of pod replicas for the master-controller-manager.
                      format: int32
                      type: integer
                    resources:
                      description: Resources describes the requested and maximum allowed CPU/memory usage.
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable."
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                type: string
                            required:
                              - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                  type: object
                proxy:
                  description: Proxy allows to configure Kubermatic to use proxies to talk to the world outside of its cluster.
                  properties:
                    http:
                      description: HTTP is the full URL to the proxy to use for plaintext HTTP connections, e.g. "http://internalproxy.example.com:8080".
                      type: string
                    https:
                      description: HTTPS is the full URL to the proxy to use for encrypted HTTPS connections, e.g. "http://secureinternalproxy.example.com:8080".
                      type: string
                    noProxy:
                      description: 'NoProxy is a comma-separated list of hostnames / network masks for which no proxy shall be used. If you make use of proxies, this list should contain all local and cluster-internal domains and networks, e.g. "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,mydomain". The operator will always prepend the following elements to this list if proxying is configured (i.e. HTTP/HTTPS are not empty): "127.0.0.1/8", "localhost", ".local", ".local.", "kubernetes", ".default", ".svc"'
                      type: string
                  type: object
                seedController:
                  description: SeedController configures the seed-controller-manager.
                  properties:
                    backupCleanupContainer:
                      description: BackupCleanupContainer is the container used for removing expired backups from the storage location. This container is only relevant when the old, deprecated backup controllers are enabled.
                      type: string
                    backupDeleteContainer:
                      description: BackupDeleteContainer is the container used for deleting etcd snapshots from a backup location. This container is only relevant when the new backup/restore controllers are enabled.
                      type: string
                    backupStoreContainer:
                      description: BackupStoreContainer is the container used for shipping etcd snapshots to a backup location.
                      type: string
                    debugLog:
                      description: DebugLog enables more verbose logging.
                      type: boolean
                    dockerRepository:
                      description: DockerRepository is the repository containing the Kubermatic seed-controller-manager image.
                      type: string
                    maximumParallelReconciles:
                      description: MaximumParallelReconciles limits the number of cluster reconciliations that are active at any given time.
                      type: integer
                    pprofEndpoint:
                      description: PProfEndpoint controls the port the seed-controller-manager should listen on to provide pprof data. This port is never exposed from the container and only available via port-forwardings.
                      type: string
                    replicas:
                      description: Replicas sets the number of pod replicas for the seed-controller-manager.
                      format: int32
                      type: integer
                    resources:
                      description: Resources describes the requested and maximum allowed CPU/memory usage.
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable."
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                type: string
                            required:
                              - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                  type: object
                ui:
                  description: UI configures the dashboard.
                  properties:
                    config:
                      description: Config sets flags for various dashboard features.
                      type: string
                    dockerRepository:
                      description: DockerRepository is the repository containing the Kubermatic dashboard image.
                      type: string
                    dockerTag:
                      description: DockerTag is used to overwrite the dashboard Docker image tag and is only for development purposes. This field must not be set in production environments. ---
                      type: string
                    dockerTagSuffix:
                      description: DockerTagSuffix is appended to the KKP version used for referring to the custom dashboard image. If left empty, either the `DockerTag` if specified or the original dashboard Docker image tag will be used. With DockerTagSuffix the tag becomes <KKP_VERSION:SUFFIX> i.e. "v2.15.0-SUFFIX".
                      type: string
                    replicas:
                      description: Replicas sets the number of pod replicas for the UI deployment.
                      format: int32
                      type: integer
                    resources:
                      description: Resources describes the requested and maximum allowed CPU/memory usage.
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable."
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                type: string
                            required:
                              - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                  type: object
                userCluster:
                  description: UserCluster configures various aspects of the user-created clusters.
                  properties:
                    addons:
                      description: Addons controls the optional additions installed into each user cluster.
                      properties:
                        default:
                          description: Default is the list of addons to be installed by default into each cluster. Mutually exclusive with "defaultManifests".
                          items:
                            type: string
                          type: array
                        defaultManifests:
                          description: DefaultManifests is a list of addon manifests to install into all clusters. Mutually exclusive with "default".
                          type: string
                        dockerRepository:
                          description: DockerRepository is the repository containing the Docker image containing the possible addon manifests.
                          type: string
                        dockerTagSuffix:
                          description: DockerTagSuffix is appended to the tag used for referring to the addons image. If left empty, the tag will be the KKP version (e.g. "v2.15.0"), with a suffix it becomes "v2.15.0-SUFFIX".
                          type: string
                      type: object
                    apiserverReplicas:
                      description: APIServerReplicas configures the replica count for the API-Server deployment inside user clusters.
                      format: int32
                      type: integer
                    disableApiserverEndpointReconciling:
                      description: DisableAPIServerEndpointReconciling can be used to toggle the `--endpoint-reconciler-type` flag for the Kubernetes API server.
                      type: boolean
                    dnatControllerDockerRepository:
                      description: DNATControllerDockerRepository is the repository containing the dnat-controller image.
                      type: string
                    etcdLauncherDockerRepository:
                      description: EtcdLauncherDockerRepository is the repository containing the Kubermatic etcd-launcher image.
                      type: string
                    etcdVolumeSize:
                      description: EtcdVolumeSize configures the volume size to use for each etcd pod inside user clusters.
                      type: string
                    kubermaticDockerRepository:
                      description: KubermaticDockerRepository is the repository containing the Kubermatic user-cluster-controller-manager image.
                      type: string
                    machineController:
                      description: MachineController configures the Machine Controller
                      properties:
                        imageRepository:
                          description: ImageRepository is used to override the Machine Controller image repository. It is only for development, tests and PoC purposes. This field must not be set in production environments.
                          type: string
                        imageTag:
                          description: ImageTag is used to override the Machine Controller image. It is only for development, tests and PoC purposes. This field must not be set in production environments.
                          type: string
                      type: object
                    monitoring:
                      description: Monitoring can be used to fine-tune to in-cluster Prometheus.
                      properties:
                        customRules:
                          description: CustomRules can be used to inject custom recording and alerting rules. This field must be a YAML-formatted string with a `group` element at its root, as documented on https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/. This value is treated as a Go template, which allows to inject dynamic values like the internal cluster address or the cluster ID. Refer to pkg/resources/prometheus and the documentation for more information on the available fields.
                          type: string
                        customScrapingConfigs:
                          description: CustomScrapingConfigs can be used to inject custom scraping rules. This must be a YAML-formatted string containing an array of scrape configurations as documented on https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config. This value is treated as a Go template, which allows to inject dynamic values like the internal cluster address or the cluster ID. Refer to pkg/resources/prometheus and the documentation for more information on the available fields.
                          type: string
                        disableDefaultRules:
                          description: DisableDefaultRules disables the recording and alerting rules.
                          type: boolean
                        disableDefaultScrapingConfigs:
                          description: DisableDefaultScrapingConfigs disables the default scraping targets.
                          type: boolean
                        scrapeAnnotationPrefix:
                          description: ScrapeAnnotationPrefix (if set) is used to make the in-cluster Prometheus scrape pods inside the user clusters.
                          type: string
                      type: object
                    nodePortRange:
                      description: NodePortRange is the port range for user clusters - this must match the NodePort range of the seed cluster.
                      type: string
                    operatingSystemManager:
                      description: OperatingSystemManager configures the image repo and the tag version for osm deployment.
                      properties:
                        imageRepository:
                          description: ImageRepository is used to override the OperatingSystemManager image repository. It is recommended to use this field only for development, tests and PoC purposes. For production environments. it is not recommended, to use this field due to compatibility with the overall KKP stack.
                          type: string
                        imageTag:
                          description: ImageTag is used to override the OperatingSystemManager image. It is recommended to use this field only for development, tests and PoC purposes. For production environments. it is not recommended, to use this field due to compatibility with the overall KKP stack.
                          type: string
                      type: object
                    overwriteRegistry:
                      description: OverwriteRegistry specifies a custom Docker registry which will be used for all images used for user clusters (user cluster control plane + addons). This also applies to the KubermaticDockerRepository and DNATControllerDockerRepository fields.
                      type: string
                    systemApplications:
                      description: SystemApplications contains configuration for system Applications (such as CNI).
                      properties:
                        helmRegistryConfigFile:
                          description: HelmRegistryConfigFile optionally holds the ref and key in the secret for the OCI registry credential file. The value is dockercfg file that follows the same format rules as ~/.docker/config.json The Secret must exist in the namespace where KKP is installed (default is "kubermatic"). The Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:` set to "helm".
                          properties:
                            key:
                              description: The key of the secret to select from.  Must be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must be defined
                              type: boolean
                          required:
                            - key
                          type: object
                          x-kubernetes-map-type: atomic
                        helmRepository:
                          description: HelmRepository specifies OCI repository containing Helm charts of system Applications.
                          type: string
                      type: object
                  type: object
                versions:
                  description: Versions configures the available and default Kubernetes versions and updates.
                  properties:
                    default:
                      description: Default is the default version to offer users.
                      type: string
                    externalClusters:
                      additionalProperties:
                        description: ExternalClusterProviderVersioningConfiguration configures the available and default Kubernetes versions for ExternalCluster Providers.
                        properties:
                          default:
                            description: Default is the default version to offer users.
                            type: string
                          updates:
                            description: Updates is a list of available upgrades.
                            items:
                              description: Semver is a type that encapsulates github.com/Masterminds/semver/v3.Version struct so it can be used in our API.
                              type: string
                            type: array
                          versions:
                            description: Versions lists the available versions.
                            items:
                              description: Semver is a type that encapsulates github.com/Masterminds/semver/v3.Version struct so it can be used in our API.
                              type: string
                            type: array
                        type: object
                      description: ExternalClusters contains the available and default Kubernetes versions and updates for ExternalClusters.
                      type: object
                    providerIncompatibilities:
                      description: ProviderIncompatibilities lists all the Kubernetes version incompatibilities
                      items:
                        description: Incompatibility represents a version incompatibility for a user cluster.
                        properties:
                          condition:
                            description: Condition is the cluster or datacenter condition that must be met to block a specific version
                            enum:
                              - always
                              - externalCloudProvider
                              - inTreeProvider
                            type: string
                          operation:
                            description: Operation is the operation triggering the compatibility check (CREATE or UPDATE)
                            enum:
                              - CREATE
                              - UPGRADE
                              - SUPPORT
                            type: string
                          provider:
                            description: Provider to which to apply the compatibility check. If this is not specified, the incompatibility is valid for all cloud providers.
                            enum:
                              - alibaba
                              - anexia
                              - aws
                              - azure
                              - bringyourown
                              - digitalocean
                              - gcp
                              - hetzner
                              - kubevirt
                              - nutanix
                              - openstack
                              - packet
                              - vmwareclouddirector
                              - vsphere
                            type: string
                          version:
                            description: Version is the Kubernetes version that must be checked. Wildcards are allowed, e.g. "1.25.*".
                            type: string
                        type: object
                      type: array
                    updates:
                      description: 'Updates is a list of available and automatic upgrades. All ''to'' versions must be configured in the version list for this orchestrator. Each update may optionally be configured to be ''automatic: true'', in which case the controlplane of all clusters whose version matches the ''from'' directive will get updated to the ''to'' version. If automatic is enabled, the ''to'' version must be a version and not a version range. Also, updates may set ''automaticNodeUpdate: true'', in which case Nodes will get updates as well. ''automaticNodeUpdate: true'' implies ''automatic: true'' as well, because Nodes may not have a newer version than the controlplane.'
                      items:
                        description: Update represents an update option for a user cluster.
                        properties:
                          automatic:
                            description: Automatic controls whether this update is executed automatically for the control plane of all matching user clusters. ---
                            type: boolean
                          automaticNodeUpdate:
                            description: Automatic controls whether this update is executed automatically for the worker nodes of all matching user clusters. ---
                            type: boolean
                          from:
                            description: From is the version from which an update is allowed. Wildcards are allowed, e.g. "1.18.*".
                            type: string
                          to:
                            description: To is the version to which an update is allowed. Must be a valid version if `automatic` is set to true, e.g. "1.20.13". Can be a wildcard otherwise, e.g. "1.20.*".
                            type: string
                        type: object
                      type: array
                    versions:
                      description: Versions lists the available versions.
                      items:
                        description: Semver is a type that encapsulates github.com/Masterminds/semver/v3.Version struct so it can be used in our API.
                        type: string
                      type: array
                  type: object
                verticalPodAutoscaler:
                  description: VerticalPodAutoscaler configures the Kubernetes VPA integration.
                  properties:
                    admissionController:
                      properties:
                        dockerRepository:
                          description: DockerRepository is the repository containing the component's image.
                          type: string
                        resources:
                          description: Resources describes the requested and maximum allowed CPU/memory usage.
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable."
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                      type: object
                    recommender:
                      properties:
                        dockerRepository:
                          description: DockerRepository is the repository containing the component's image.
                          type: string
                        resources:
                          description: Resources describes the requested and maximum allowed CPU/memory usage.
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable."
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                      type: object
                    updater:
                      properties:
                        dockerRepository:
                          description: DockerRepository is the repository containing the component's image.
                          type: string
                        resources:
                          description: Resources describes the requested and maximum allowed CPU/memory usage.
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable."
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                      type: object
                  type: object
                webhook:
                  description: Webhook configures the webhook.
                  properties:
                    debugLog:
                      description: DebugLog enables more verbose logging.
                      type: boolean
                    dockerRepository:
                      description: DockerRepository is the repository containing the Kubermatic webhook image.
                      type: string
                    pprofEndpoint:
                      description: PProfEndpoint controls the port the webhook should listen on to provide pprof data. This port is never exposed from the container and only available via port-forwardings.
                      type: string
                    replicas:
                      description: Replicas sets the number of pod replicas for the webhook.
                      format: int32
                      type: integer
                    resources:
                      description: Resources describes the requested and maximum allowed CPU/memory usage.
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable."
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                type: string
                            required:
                              - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                  type: object
              type: object
            status:
              description: KubermaticConfigurationStatus stores status information about a KubermaticConfiguration.
              properties:
                kubermaticEdition:
                  description: KubermaticEdition current Kubermatic Edition , i.e. Community Edition or Enterprise Edition.
                  type: string
                kubermaticVersion:
                  description: KubermaticVersion current Kubermatic Version.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
