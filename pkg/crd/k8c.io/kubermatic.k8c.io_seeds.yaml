# This file has been generated by hack/update-codegen.sh, DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
    kubermatic.k8c.io/location: master,seed
  name: seeds.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: Seed
    listKind: SeedList
    plural: seeds
    singular: seed
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.clusters
          name: Clusters
          type: integer
        - jsonPath: .spec.location
          name: Location
          type: string
        - jsonPath: .status.versions.kubermatic
          name: KKP Version
          type: string
        - jsonPath: .status.versions.cluster
          name: Cluster Version
          type: string
        - jsonPath: .status.phase
          name: Phase
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: Seed is the type representing a Seed cluster. Seed clusters host the the control planes for KKP user clusters.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: The spec for a seed cluster.
              properties:
                country:
                  description: 'Optional: Country of the seed as ISO-3166 two-letter code, e.g. DE or UK. For informational purposes in the Kubermatic dashboard only.'
                  type: string
                datacenters:
                  additionalProperties:
                    properties:
                      country:
                        description: 'Optional: Country of the seed as ISO-3166 two-letter code, e.g. DE or UK. For informational purposes in the Kubermatic dashboard only.'
                        type: string
                      location:
                        description: 'Optional: Detailed location of the cluster, like "Hamburg" or "Datacenter 7". For informational purposes in the Kubermatic dashboard only.'
                        type: string
                      node:
                        description: Node holds node-specific settings, like e.g. HTTP proxy, Docker registries and the like. Proxy settings are inherited from the seed if not specified here.
                        properties:
                          containerdRegistryMirrors:
                            description: 'Optional: ContainerdRegistryMirrors configure registry mirrors endpoints. Can be used multiple times to specify multiple mirrors.'
                            properties:
                              registries:
                                additionalProperties:
                                  description: ContainerdRegistry defines endpoints and security for given container registry.
                                  properties:
                                    mirrors:
                                      description: List of registry mirrors to use
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                description: A map of registries to use to render configs and mirrors for containerd registries
                                type: object
                            type: object
                          httpProxy:
                            description: 'Optional: If set, this proxy will be configured for both HTTP and HTTPS.'
                            type: string
                          insecureRegistries:
                            description: 'Optional: These image registries will be configured as insecure on the container runtime.'
                            items:
                              type: string
                            type: array
                          noProxy:
                            description: 'Optional: If set this will be set as NO_PROXY environment variable on the node; The value must be a comma-separated list of domains for which no proxy should be used, e.g. "*.example.com,internal.dev". Note that the in-cluster apiserver URL will be automatically prepended to this value.'
                            type: string
                          pauseImage:
                            description: 'Optional: Translates to --pod-infra-container-image on the kubelet. If not set, the kubelet will default it.'
                            type: string
                          registryMirrors:
                            description: 'Optional: These image registries will be configured as registry mirrors on the container runtime.'
                            items:
                              type: string
                            type: array
                        type: object
                      spec:
                        description: Spec describes the cloud provider settings used to manage resources in this datacenter. Exactly one cloud provider must be defined.
                        properties:
                          alibaba:
                            description: Alibaba configures an Alibaba Cloud datacenter.
                            properties:
                              region:
                                description: Region to use, for a full list of regions see https://www.alibabacloud.com/help/doc-detail/40654.htm
                                type: string
                            required:
                              - region
                            type: object
                          anexia:
                            description: Anexia configures an Anexia datacenter.
                            properties:
                              locationID:
                                description: LocationID the location of the region
                                type: string
                            required:
                              - locationID
                            type: object
                          aws:
                            description: AWS configures an Amazon Web Services (AWS) datacenter.
                            properties:
                              images:
                                additionalProperties:
                                  type: string
                                description: List of AMIs to use for a given operating system. This gets defaulted by querying for the latest AMI for the given distribution when machines are created, so under normal circumstances it is not necessary to define the AMIs statically.
                                type: object
                              region:
                                description: The AWS region to use, e.g. "us-east-1". For a list of available regions, see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html
                                type: string
                            required:
                              - region
                            type: object
                          azure:
                            description: Azure configures an Azure datacenter.
                            properties:
                              location:
                                description: Region to use, for example "westeurope". A list of available regions can be found at https://azure.microsoft.com/en-us/global-infrastructure/locations/
                                type: string
                            required:
                              - location
                            type: object
                          bringyourown:
                            description: BringYourOwn contains settings for clusters using manually created nodes via kubeadm.
                            type: object
                          digitalocean:
                            description: DatacenterSpecDigitalocean describes a DigitalOcean datacenter.
                            properties:
                              region:
                                description: Datacenter location, e.g. "ams3". A list of existing datacenters can be found at https://www.digitalocean.com/docs/platform/availability-matrix/
                                type: string
                            required:
                              - region
                            type: object
                          enforceAuditLogging:
                            description: 'Optional: EnforceAuditLogging enforces audit logging on every cluster within the DC, ignoring cluster-specific settings.'
                            type: boolean
                          enforcePodSecurityPolicy:
                            description: 'Optional: EnforcePodSecurityPolicy enforces pod security policy plugin on every clusters within the DC, ignoring cluster-specific settings.'
                            type: boolean
                          fake:
                            description: DatacenterSpecFake describes a fake datacenter.
                            properties:
                              fakeProperty:
                                type: string
                            type: object
                          gcp:
                            description: GCP configures a Google Cloud Platform (GCP) datacenter.
                            properties:
                              region:
                                description: Region to use, for example "europe-west3", for a full list of regions see https://cloud.google.com/compute/docs/regions-zones/
                                type: string
                              regional:
                                description: 'Optional: Regional clusters spread their resources across multiple availability zones. Refer to the official documentation for more details on this: https://cloud.google.com/kubernetes-engine/docs/concepts/regional-clusters'
                                type: boolean
                              zoneSuffixes:
                                description: List of enabled zones, for example [a, c]. See the link above for the available zones in your chosen region.
                                items:
                                  type: string
                                type: array
                            required:
                              - region
                              - zoneSuffixes
                            type: object
                          hetzner:
                            description: Hetzner configures a Hetzner datacenter.
                            properties:
                              datacenter:
                                description: Datacenter location, e.g. "nbg1-dc3". A list of existing datacenters can be found at https://docs.hetzner.com/general/others/data-centers-and-connection/
                                type: string
                              location:
                                description: 'Optional: Detailed location of the datacenter, like "Hamburg" or "Datacenter 7". For informational purposes only.'
                                type: string
                              network:
                                description: Network is the pre-existing Hetzner network in which the machines are running. While machines can be in multiple networks, a single one must be chosen for the HCloud CCM to work.
                                type: string
                            required:
                              - datacenter
                              - network
                            type: object
                          kubevirt:
                            description: KubeVirt configures a KubeVirt datacenter.
                            properties:
                              customNetworkPolicies:
                                description: CustomNetworkPolicies (optional) allows to add some extra custom NetworkPolicies, that are deployed in the dedicated infra KubeVirt cluster. They are added to the defaults.
                                items:
                                  description: CustomNetworkPolicy contains a name and the Spec of a NetworkPolicy.
                                  properties:
                                    name:
                                      description: Name is the name of the Custom Network Policy.
                                      type: string
                                    spec:
                                      description: Spec is the Spec of the NetworkPolicy, using the standard type.
                                      properties:
                                        egress:
                                          description: List of egress rules to be applied to the selected pods. Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8
                                          items:
                                            description: NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8
                                            properties:
                                              ports:
                                                description: List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
                                                items:
                                                  description: NetworkPolicyPort describes a port to allow traffic on
                                                  properties:
                                                    endPort:
                                                      description: If set, indicates that the range of ports from port to endPort, inclusive, should be allowed by the policy. This field cannot be defined if the port field is not defined or if the port field is defined as a named (string) port. The endPort must be equal or greater than port.
                                                      format: int32
                                                      type: integer
                                                    port:
                                                      anyOf:
                                                        - type: integer
                                                        - type: string
                                                      description: The port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers. If present, only traffic on the specified protocol AND port will be matched.
                                                      x-kubernetes-int-or-string: true
                                                    protocol:
                                                      default: TCP
                                                      description: The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.
                                                      type: string
                                                  type: object
                                                type: array
                                              to:
                                                description: List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.
                                                items:
                                                  description: NetworkPolicyPeer describes a peer to allow traffic to/from. Only certain combinations of fields are allowed
                                                  properties:
                                                    ipBlock:
                                                      description: IPBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.
                                                      properties:
                                                        cidr:
                                                          description: CIDR is a string representing the IP Block Valid examples are "192.168.1.0/24" or "2001:db8::/64"
                                                          type: string
                                                        except:
                                                          description: Except is a slice of CIDRs that should not be included within an IP Block Valid examples are "192.168.1.0/24" or "2001:db8::/64" Except values will be rejected if they are outside the CIDR range
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                        - cidr
                                                      type: object
                                                    namespaceSelector:
                                                      description: "Selects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces. \n If PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector."
                                                      properties:
                                                        matchExpressions:
                                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                          items:
                                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                            properties:
                                                              key:
                                                                description: key is the label key that the selector applies to.
                                                                type: string
                                                              operator:
                                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                type: string
                                                              values:
                                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                              - key
                                                              - operator
                                                            type: object
                                                          type: array
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: string
                                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                          type: object
                                                      type: object
                                                      x-kubernetes-map-type: atomic
                                                    podSelector:
                                                      description: "This is a label selector which selects Pods. This field follows standard label selector semantics; if present but empty, it selects all pods. \n If NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the Pods matching PodSelector in the policy's own Namespace."
                                                      properties:
                                                        matchExpressions:
                                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                          items:
                                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                            properties:
                                                              key:
                                                                description: key is the label key that the selector applies to.
                                                                type: string
                                                              operator:
                                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                type: string
                                                              values:
                                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                              - key
                                                              - operator
                                                            type: object
                                                          type: array
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: string
                                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                          type: object
                                                      type: object
                                                      x-kubernetes-map-type: atomic
                                                  type: object
                                                type: array
                                            type: object
                                          type: array
                                        ingress:
                                          description: List of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)
                                          items:
                                            description: NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from.
                                            properties:
                                              from:
                                                description: List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the from list.
                                                items:
                                                  description: NetworkPolicyPeer describes a peer to allow traffic to/from. Only certain combinations of fields are allowed
                                                  properties:
                                                    ipBlock:
                                                      description: IPBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.
                                                      properties:
                                                        cidr:
                                                          description: CIDR is a string representing the IP Block Valid examples are "192.168.1.0/24" or "2001:db8::/64"
                                                          type: string
                                                        except:
                                                          description: Except is a slice of CIDRs that should not be included within an IP Block Valid examples are "192.168.1.0/24" or "2001:db8::/64" Except values will be rejected if they are outside the CIDR range
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                        - cidr
                                                      type: object
                                                    namespaceSelector:
                                                      description: "Selects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces. \n If PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector."
                                                      properties:
                                                        matchExpressions:
                                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                          items:
                                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                            properties:
                                                              key:
                                                                description: key is the label key that the selector applies to.
                                                                type: string
                                                              operator:
                                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                type: string
                                                              values:
                                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                              - key
                                                              - operator
                                                            type: object
                                                          type: array
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: string
                                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                          type: object
                                                      type: object
                                                      x-kubernetes-map-type: atomic
                                                    podSelector:
                                                      description: "This is a label selector which selects Pods. This field follows standard label selector semantics; if present but empty, it selects all pods. \n If NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the Pods matching PodSelector in the policy's own Namespace."
                                                      properties:
                                                        matchExpressions:
                                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                          items:
                                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                            properties:
                                                              key:
                                                                description: key is the label key that the selector applies to.
                                                                type: string
                                                              operator:
                                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                type: string
                                                              values:
                                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                              - key
                                                              - operator
                                                            type: object
                                                          type: array
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: string
                                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                          type: object
                                                      type: object
                                                      x-kubernetes-map-type: atomic
                                                  type: object
                                                type: array
                                              ports:
                                                description: List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
                                                items:
                                                  description: NetworkPolicyPort describes a port to allow traffic on
                                                  properties:
                                                    endPort:
                                                      description: If set, indicates that the range of ports from port to endPort, inclusive, should be allowed by the policy. This field cannot be defined if the port field is not defined or if the port field is defined as a named (string) port. The endPort must be equal or greater than port.
                                                      format: int32
                                                      type: integer
                                                    port:
                                                      anyOf:
                                                        - type: integer
                                                        - type: string
                                                      description: The port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers. If present, only traffic on the specified protocol AND port will be matched.
                                                      x-kubernetes-int-or-string: true
                                                    protocol:
                                                      default: TCP
                                                      description: The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.
                                                      type: string
                                                  type: object
                                                type: array
                                            type: object
                                          type: array
                                        podSelector:
                                          description: Selects the pods to which this NetworkPolicy object applies. The array of ingress rules is applied to any pods selected by this field. Multiple network policies can select the same set of pods. In this case, the ingress rules for each are combined additively. This field is NOT optional and follows standard label selector semantics. An empty podSelector matches all pods in this namespace.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        policyTypes:
                                          description: List of rule types that the NetworkPolicy relates to. Valid options are ["Ingress"], ["Egress"], or ["Ingress", "Egress"]. If this field is not specified, it will default based on the existence of Ingress or Egress rules; policies that contain an Egress section are assumed to affect Egress, and all policies (whether or not they contain an Ingress section) are assumed to affect Ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include "Egress" (since such a policy would not include an Egress section and would otherwise default to just [ "Ingress" ]). This field is beta-level in 1.8
                                          items:
                                            description: PolicyType string describes the NetworkPolicy type This type is beta-level in 1.8
                                            type: string
                                          type: array
                                      required:
                                        - podSelector
                                      type: object
                                  required:
                                    - name
                                    - spec
                                  type: object
                                type: array
                              dnsConfig:
                                description: DNSConfig represents the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.
                                properties:
                                  nameservers:
                                    description: A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
                                    items:
                                      type: string
                                    type: array
                                  options:
                                    description: A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
                                    items:
                                      description: PodDNSConfigOption defines DNS resolver options of a pod.
                                      properties:
                                        name:
                                          description: Required.
                                          type: string
                                        value:
                                          type: string
                                      type: object
                                    type: array
                                  searches:
                                    description: A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              dnsPolicy:
                                default: ClusterFirst
                                description: DNSPolicy represents the dns policy for the pod. Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. Defaults to "ClusterFirst". DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.
                                enum:
                                  - ClusterFirstWithHostNet
                                  - ClusterFirst
                                  - Default
                                  - None
                                type: string
                              images:
                                description: Images represents standard VM Image sources.
                                properties:
                                  http:
                                    description: HTTP represents a http source.
                                    properties:
                                      operatingSystems:
                                        additionalProperties:
                                          additionalProperties:
                                            type: string
                                          description: OSVersions defines a map of OS version and the source to download the image.
                                          type: object
                                        description: OperatingSystems represents list of supported operating-systems with their URLs.
                                        type: object
                                    required:
                                      - operatingSystems
                                    type: object
                                type: object
                              infraStorageClasses:
                                description: 'InfraStorageClasses contains a list of KubeVirt infra cluster StorageClasses names that will be used to initialise StorageClasses in the tenant cluster. In the tenant cluster, the created StorageClass name will have as name: kubevirt-<infra-storageClass-name>'
                                items:
                                  properties:
                                    isDefaultClass:
                                      description: 'Optional: IsDefaultClass. If true, the created StorageClass in the tenant cluster will be annotated with: storageclass.kubernetes.io/is-default-class : true If missing or false, annotation will be: storageclass.kubernetes.io/is-default-class : false'
                                      type: boolean
                                    name:
                                      type: string
                                  required:
                                    - name
                                  type: object
                                type: array
                            type: object
                          machineFlavorFilter:
                            description: 'Optional: MachineFlavorFilter is used to filter out allowed machine flavors based on the specified resource limits like CPU, Memory, and GPU etc.'
                            properties:
                              enableGPU:
                                description: Include VMs with GPU
                                type: boolean
                              maxCPU:
                                default: 0
                                description: Maximum number of vCPU
                                minimum: 0
                                type: integer
                              maxRAM:
                                default: 0
                                description: Maximum RAM size in GB
                                minimum: 0
                                type: integer
                              minCPU:
                                default: 0
                                description: Minimum number of vCPU
                                minimum: 0
                                type: integer
                              minRAM:
                                default: 0
                                description: Minimum RAM size in GB
                                minimum: 0
                                type: integer
                            required:
                              - enableGPU
                              - maxCPU
                              - maxRAM
                              - minCPU
                              - minRAM
                            type: object
                          nutanix:
                            description: Nutanix configures a Nutanix HCI datacenter.
                            properties:
                              allowInsecure:
                                description: 'Optional: AllowInsecure allows to disable the TLS certificate check against the endpoint (defaults to false)'
                                type: boolean
                              endpoint:
                                description: Endpoint to use for accessing Nutanix Prism Central. No protocol or port should be passed, for example "nutanix.example.com" or "10.0.0.1"
                                type: string
                              images:
                                additionalProperties:
                                  type: string
                                description: Images to use for each supported operating system
                                type: object
                              port:
                                description: 'Optional: Port to use when connecting to the Nutanix Prism Central endpoint (defaults to 9440)'
                                format: int32
                                type: integer
                            required:
                              - endpoint
                              - images
                            type: object
                          openstack:
                            description: OpenStack configures an OpenStack datacenter.
                            properties:
                              authURL:
                                type: string
                              availabilityZone:
                                type: string
                              dnsServers:
                                description: Used for automatic network creation
                                items:
                                  type: string
                                type: array
                              enabledFlavors:
                                description: 'Optional: List of enabled flavors for the given datacenter'
                                items:
                                  type: string
                                type: array
                              enforceFloatingIP:
                                description: Optional
                                type: boolean
                              ignoreVolumeAZ:
                                description: Optional
                                type: boolean
                              images:
                                additionalProperties:
                                  type: string
                                description: Images to use for each supported operating system.
                                type: object
                              ipv6Enabled:
                                description: 'Optional: defines if the IPv6 is enabled for the datacenter'
                                type: boolean
                              manageSecurityGroups:
                                description: 'Optional: Gets mapped to the "manage-security-groups" setting in the cloud config. This setting defaults to true.'
                                type: boolean
                              nodeSizeRequirements:
                                description: 'Optional: Restrict the allowed VM configurations that can be chosen in the KKP dashboard. This setting does not affect the validation webhook for MachineDeployments.'
                                properties:
                                  minimumMemory:
                                    description: MinimumMemory is the minimum required amount of memory, measured in MB
                                    type: integer
                                  minimumVCPUs:
                                    description: VCPUs is the minimum required amount of (virtual) CPUs
                                    type: integer
                                type: object
                              region:
                                type: string
                              trustDevicePath:
                                description: 'Optional: Gets mapped to the "trust-device-path" setting in the cloud config. This setting defaults to false.'
                                type: boolean
                              useOctavia:
                                description: 'Optional: Gets mapped to the "use-octavia" setting in the cloud config. use-octavia is enabled by default in CCM since v1.17.0, and disabled by default with the in-tree cloud provider.'
                                type: boolean
                            required:
                              - authURL
                              - images
                              - region
                            type: object
                          operatingSystemProfiles:
                            additionalProperties:
                              type: string
                            description: 'Optional: DefaultOperatingSystemProfiles specifies the OperatingSystemProfiles to use for each supported operating system.'
                            type: object
                          packet:
                            description: Packet configures an Equinix Metal datacenter.
                            properties:
                              facilities:
                                description: The list of enabled facilities, for example "ams1", for a full list of available facilities see https://metal.equinix.com/developers/docs/locations/facilities/
                                items:
                                  type: string
                                type: array
                              metro:
                                description: Metros are facilities that are grouped together geographically and share capacity and networking features, see https://metal.equinix.com/developers/docs/locations/metros/
                                type: string
                            type: object
                          providerReconciliationInterval:
                            description: 'Optional: ProviderReconciliationInterval is the time that must have passed since a Cluster''s status.lastProviderReconciliation to make the cliuster controller perform an in-depth provider reconciliation, where for example missing security groups will be reconciled. Setting this too low can cause rate limits by the cloud provider, setting this too high means that *if* a resource at a cloud provider is removed/changed outside of KKP, it will take this long to fix it.'
                            type: string
                          requiredEmails:
                            description: 'Optional: When defined, only users with an e-mail address on the given domains can make use of this datacenter. You can define multiple domains, e.g. "example.com", one of which must match the email domain exactly (i.e. "example.com" will not match "user@test.example.com").'
                            items:
                              type: string
                            type: array
                          vmwareclouddirector:
                            description: VMwareCloudDirector configures a VMware Cloud Director datacenter.
                            properties:
                              allowInsecure:
                                description: If set to true, disables the TLS certificate check against the endpoint.
                                type: boolean
                              catalog:
                                description: The default catalog which contains the VM templates.
                                type: string
                              storageProfile:
                                description: The name of the storage profile to use for disks attached to the VMs.
                                type: string
                              templates:
                                additionalProperties:
                                  type: string
                                description: A list of VM templates to use for a given operating system. You must define at least one template.
                                type: object
                              url:
                                description: Endpoint URL to use, including protocol, for example "https://vclouddirector.example.com".
                                type: string
                            required:
                              - templates
                              - url
                            type: object
                          vsphere:
                            description: VSphere configures a VMware vSphere datacenter.
                            properties:
                              allowInsecure:
                                description: If set to true, disables the TLS certificate check against the endpoint.
                                type: boolean
                              cluster:
                                description: The name of the vSphere cluster to use. Used for out-of-tree CSI Driver.
                                type: string
                              datacenter:
                                description: The name of the datacenter to use.
                                type: string
                              datastore:
                                description: The default Datastore to be used for provisioning volumes using storage classes/dynamic provisioning and for storing virtual machine files in case no `Datastore` or `DatastoreCluster` is provided at Cluster level.
                                type: string
                              defaultTagCategoryID:
                                description: DefaultTagCategoryID is the tag category id that will be used as default, if users don't specify it on a cluster level, and they don't wish KKP to create default generated tag category, upon cluster creation.
                                type: string
                              endpoint:
                                description: Endpoint URL to use, including protocol, for example "https://vcenter.example.com".
                                type: string
                              infraManagementUser:
                                description: 'Optional: Infra management user is the user that will be used for everything except the cloud provider functionality, which will still use the credentials passed in via the Kubermatic dashboard/API.'
                                properties:
                                  password:
                                    type: string
                                  username:
                                    type: string
                                type: object
                              ipv6Enabled:
                                description: 'Optional: defines if the IPv6 is enabled for the datacenter'
                                type: boolean
                              rootPath:
                                description: 'Optional: The root path for cluster specific VM folders. Each cluster gets its own folder below the root folder. Must be the FQDN (for example "/datacenter-1/vm/all-kubermatic-vms-in-here") and defaults to the root VM folder: "/datacenter-1/vm"'
                                type: string
                              storagePolicy:
                                description: The name of the storage policy to use for the storage class created in the user cluster.
                                type: string
                              templates:
                                additionalProperties:
                                  type: string
                                description: 'A list of VM templates to use for a given operating system. You must define at least one template. See: https://github.com/kubermatic/machine-controller/blob/master/docs/vsphere.md#template-vms-preparation'
                                type: object
                            required:
                              - cluster
                              - datacenter
                              - datastore
                              - endpoint
                              - templates
                            type: object
                        type: object
                    required:
                      - spec
                    type: object
                  description: Datacenters contains a map of the possible datacenters (DCs) in this seed. Each DC must have a globally unique identifier (i.e. names must be unique across all seeds).
                  type: object
                defaultClusterTemplate:
                  description: DefaultClusterTemplate is the name of a cluster template of scope "seed" that is used to default all new created clusters
                  type: string
                defaultComponentSettings:
                  description: 'DefaultComponentSettings are default values to set for newly created clusters. Deprecated: Use DefaultClusterTemplate instead.'
                  properties:
                    apiserver:
                      description: Apiserver configures kube-apiserver settings.
                      properties:
                        endpointReconcilingDisabled:
                          type: boolean
                        nodePortRange:
                          type: string
                        replicas:
                          format: int32
                          type: integer
                        resources:
                          description: ResourceRequirements describes the compute resource requirements.
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable."
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        tolerations:
                          items:
                            description: The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                            properties:
                              effect:
                                description: Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                type: string
                              key:
                                description: Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                type: string
                              operator:
                                description: Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                                type: string
                              tolerationSeconds:
                                description: TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                                format: int64
                                type: integer
                              value:
                                description: Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                                type: string
                            type: object
                          type: array
                      type: object
                    controllerManager:
                      description: ControllerManager configures kube-controller-manager settings.
                      properties:
                        leaderElection:
                          properties:
                            leaseDurationSeconds:
                              description: LeaseDurationSeconds is the duration in seconds that non-leader candidates will wait to force acquire leadership. This is measured against time of last observed ack.
                              format: int32
                              type: integer
                            renewDeadlineSeconds:
                              description: RenewDeadlineSeconds is the duration in seconds that the acting controlplane will retry refreshing leadership before giving up.
                              format: int32
                              type: integer
                            retryPeriodSeconds:
                              description: RetryPeriodSeconds is the duration in seconds the LeaderElector clients should wait between tries of actions.
                              format: int32
                              type: integer
                          type: object
                        replicas:
                          format: int32
                          type: integer
                        resources:
                          description: ResourceRequirements describes the compute resource requirements.
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable."
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        tolerations:
                          items:
                            description: The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                            properties:
                              effect:
                                description: Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                type: string
                              key:
                                description: Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                type: string
                              operator:
                                description: Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                                type: string
                              tolerationSeconds:
                                description: TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                                format: int64
                                type: integer
                              value:
                                description: Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                                type: string
                            type: object
                          type: array
                      type: object
                    etcd:
                      description: Etcd configures the etcd ring used to store Kubernetes data.
                      properties:
                        clusterSize:
                          format: int32
                          type: integer
                        diskSize:
                          anyOf:
                            - type: integer
                            - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        resources:
                          description: ResourceRequirements describes the compute resource requirements.
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable."
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        storageClass:
                          type: string
                        tolerations:
                          items:
                            description: The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                            properties:
                              effect:
                                description: Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                type: string
                              key:
                                description: Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                type: string
                              operator:
                                description: Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                                type: string
                              tolerationSeconds:
                                description: TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                                format: int64
                                type: integer
                              value:
                                description: Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                                type: string
                            type: object
                          type: array
                      type: object
                    konnectivityProxy:
                      description: KonnectivityProxy configures konnectivity-server and konnectivity-agent components.
                      properties:
                        keepaliveTime:
                          description: KeepaliveTime represents a duration of time to check if the transport is still alive. The option is propagated to agents and server. Defaults to 1m.
                          type: string
                        resources:
                          description: Resources configure limits/requests for Konnectivity components.
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable."
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                      type: object
                    nodePortProxyEnvoy:
                      description: NodePortProxyEnvoy configures the per-cluster nodeport-proxy-envoy that is deployed if the `LoadBalancer` expose strategy is used. This is not effective if a different expose strategy is configured.
                      properties:
                        dockerRepository:
                          description: DockerRepository is the repository containing the component's image.
                          type: string
                        resources:
                          description: Resources describes the requested and maximum allowed CPU/memory usage.
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable."
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                      type: object
                    prometheus:
                      description: Prometheus configures the Prometheus instance deployed into the cluster control plane.
                      properties:
                        resources:
                          description: ResourceRequirements describes the compute resource requirements.
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable."
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                      type: object
                    scheduler:
                      description: Scheduler configures kube-scheduler settings.
                      properties:
                        leaderElection:
                          properties:
                            leaseDurationSeconds:
                              description: LeaseDurationSeconds is the duration in seconds that non-leader candidates will wait to force acquire leadership. This is measured against time of last observed ack.
                              format: int32
                              type: integer
                            renewDeadlineSeconds:
                              description: RenewDeadlineSeconds is the duration in seconds that the acting controlplane will retry refreshing leadership before giving up.
                              format: int32
                              type: integer
                            retryPeriodSeconds:
                              description: RetryPeriodSeconds is the duration in seconds the LeaderElector clients should wait between tries of actions.
                              format: int32
                              type: integer
                          type: object
                        replicas:
                          format: int32
                          type: integer
                        resources:
                          description: ResourceRequirements describes the compute resource requirements.
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable."
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        tolerations:
                          items:
                            description: The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                            properties:
                              effect:
                                description: Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                type: string
                              key:
                                description: Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                type: string
                              operator:
                                description: Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                                type: string
                              tolerationSeconds:
                                description: TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                                format: int64
                                type: integer
                              value:
                                description: Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                                type: string
                            type: object
                          type: array
                      type: object
                  required:
                    - apiserver
                    - controllerManager
                    - etcd
                    - scheduler
                  type: object
                etcdBackupRestore:
                  description: EtcdBackupRestore holds the configuration of the automatic etcd backup restores for the Seed; if this is set, the new backup/restore controllers are enabled for this Seed.
                  properties:
                    defaultDestination:
                      description: DefaultDestination marks the default destination that will be used for the default etcd backup config which is created for every user cluster. Has to correspond to a destination in Destinations. If removed, it removes the related default etcd backup configs.
                      maxLength: 63
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    destinations:
                      additionalProperties:
                        description: BackupDestination defines the bucket name and endpoint as a backup destination, and holds reference to the credentials secret.
                        properties:
                          bucketName:
                            description: BucketName is the bucket name to use for backup and restore.
                            type: string
                          credentials:
                            description: Credentials hold the ref to the secret with backup credentials
                            properties:
                              name:
                                description: name is unique within a namespace to reference a secret resource.
                                type: string
                              namespace:
                                description: namespace defines the space within which the secret name must be unique.
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          endpoint:
                            description: Endpoint is the API endpoint to use for backup and restore.
                            type: string
                        required:
                          - bucketName
                          - endpoint
                        type: object
                      description: Destinations stores all the possible destinations where the backups for the Seed can be stored. If not empty, it enables automatic backup and restore for the seed.
                      type: object
                  type: object
                exposeStrategy:
                  description: 'Optional: ExposeStrategy explicitly sets the expose strategy for this seed cluster, if not set, the default provided by the master is used.'
                  enum:
                    - NodePort
                    - LoadBalancer
                    - Tunneling
                  type: string
                kubeconfig:
                  description: A reference to the Kubeconfig of this cluster. The Kubeconfig must have cluster-admin privileges. This field is mandatory for every seed, even if there are no datacenters defined yet.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                location:
                  description: 'Optional: Detailed location of the cluster, like "Hamburg" or "Datacenter 7". For informational purposes in the Kubermatic dashboard only.'
                  type: string
                metering:
                  description: Metering configures the metering tool on user clusters across the seed.
                  properties:
                    enabled:
                      type: boolean
                    reports:
                      additionalProperties:
                        properties:
                          interval:
                            default: 7
                            description: Interval defines the number of days consulted in the metering report.
                            format: int32
                            minimum: 1
                            type: integer
                          retention:
                            description: Retention defines a number of days after which reports are queued for removal. If not set, reports are kept forever. Please note that this functionality works only for object storage that supports an object lifecycle management mechanism.
                            format: int32
                            minimum: 1
                            type: integer
                          schedule:
                            default: 0 1 * * 6
                            description: Schedule in Cron format, see https://en.wikipedia.org/wiki/Cron. Please take a note that Schedule is responsible only for setting the time when a report generation mechanism kicks off. The Interval MUST be set independently.
                            type: string
                          type:
                            default:
                              - cluster
                              - namespace
                            description: Types of reports to generate. Available report types are cluster and namespace. By default, all types of reports are generated.
                            items:
                              type: string
                            type: array
                        type: object
                      default:
                        weekly:
                          interval: 7
                          schedule: 0 1 * * 6
                      description: ReportConfigurations is a map of report configuration definitions.
                      type: object
                    storageClassName:
                      description: StorageClassName is the name of the storage class that the metering prometheus instance uses to store metric data for reporting.
                      type: string
                    storageSize:
                      description: StorageSize is the size of the storage class. Default value is 100Gi.
                      type: string
                  required:
                    - enabled
                    - storageClassName
                    - storageSize
                  type: object
                mla:
                  description: 'Optional: MLA allows configuring seed level MLA (Monitoring, Logging & Alerting) stack settings.'
                  properties:
                    userClusterMLAEnabled:
                      description: 'Optional: controls whether the user cluster MLA (Monitoring, Logging & Alerting) stack is enabled in the seed.'
                      type: boolean
                  type: object
                nodeportProxy:
                  description: NodeportProxy can be used to configure the NodePort proxy service that is responsible for making user-cluster control planes accessible from the outside.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: 'Annotations are used to further tweak the LoadBalancer integration with the cloud provider where the seed cluster is running. Deprecated: Use .envoy.loadBalancerService.annotations instead.'
                      type: object
                    disable:
                      description: Disable will prevent the Kubermatic Operator from creating a nodeport-proxy setup on the seed cluster. This should only be used if a suitable replacement is installed (like the nodeport-proxy Helm chart).
                      type: boolean
                    envoy:
                      description: Envoy configures the Envoy application itself.
                      properties:
                        dockerRepository:
                          description: DockerRepository is the repository containing the component's image.
                          type: string
                        loadBalancerService:
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations are used to further tweak the LoadBalancer integration with the cloud provider.
                              type: object
                            sourceRanges:
                              description: 'SourceRanges will restrict loadbalancer service to IP ranges specified using CIDR notation like 172.25.0.0/16. This field will be ignored if the cloud-provider does not support the feature. More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/'
                              items:
                                pattern: ^((\d{1,3}\.){3}\d{1,3}\/([0-9]|[1-2][0-9]|3[0-2]))$
                                type: string
                              type: array
                          type: object
                        resources:
                          description: Resources describes the requested and maximum allowed CPU/memory usage.
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable."
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                      type: object
                    envoyManager:
                      description: EnvoyManager configures the Kubermatic-internal Envoy manager.
                      properties:
                        dockerRepository:
                          description: DockerRepository is the repository containing the component's image.
                          type: string
                        resources:
                          description: Resources describes the requested and maximum allowed CPU/memory usage.
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable."
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                      type: object
                    updater:
                      description: Updater configures the component responsible for updating the LoadBalancer service.
                      properties:
                        dockerRepository:
                          description: DockerRepository is the repository containing the component's image.
                          type: string
                        resources:
                          description: Resources describes the requested and maximum allowed CPU/memory usage.
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable."
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                      type: object
                  type: object
                oidcProviderConfiguration:
                  description: OIDCProviderConfiguration allows to configure OIDC provider at the Seed level.
                  properties:
                    cookieHashKey:
                      description: 'Optional: CookieHashKey is required, used to authenticate the cookie value using HMAC. It is recommended to use a key with 32 or 64 bytes. If not set, configuration is inherited from the default OIDC provider.'
                      type: string
                    cookieSecureMode:
                      description: 'Optional: CookieSecureMode if true then cookie received only with HTTPS otherwise with HTTP. If not set, configuration is inherited from the default OIDC provider.'
                      type: boolean
                    issuerClientID:
                      description: IssuerClientID is the application's ID.
                      type: string
                    issuerClientSecret:
                      description: IssuerClientSecret is the application's secret.
                      type: string
                    issuerURL:
                      description: URL of the provider which allows the API server to discover public signing keys.
                      type: string
                    offlineAccessAsScope:
                      description: 'Optional:  OfflineAccessAsScope if true then "offline_access" scope will be used otherwise ''access_type=offline" query param will be passed. If not set, configuration is inherited from the default OIDC provider.'
                      type: boolean
                    skipTLSVerify:
                      description: 'Optional: SkipTLSVerify skip TLS verification for the token issuer. If not set, configuration is inherited from the default OIDC provider.'
                      type: boolean
                  required:
                    - issuerClientID
                    - issuerClientSecret
                    - issuerURL
                  type: object
                proxySettings:
                  description: 'Optional: ProxySettings can be used to configure HTTP proxy settings on the worker nodes in user clusters. However, proxy settings on nodes take precedence.'
                  properties:
                    httpProxy:
                      description: 'Optional: If set, this proxy will be configured for both HTTP and HTTPS.'
                      type: string
                    noProxy:
                      description: 'Optional: If set this will be set as NO_PROXY environment variable on the node; The value must be a comma-separated list of domains for which no proxy should be used, e.g. "*.example.com,internal.dev". Note that the in-cluster apiserver URL will be automatically prepended to this value.'
                      type: string
                  type: object
                seedDNSOverwrite:
                  description: 'Optional: This can be used to override the DNS name used for this seed. By default the seed name is used.'
                  type: string
              required:
                - kubeconfig
              type: object
            status:
              description: SeedStatus contains runtime information regarding the seed.
              properties:
                clusters:
                  default: 0
                  description: Clusters is the total number of user clusters that exist on this seed.
                  minimum: 0
                  type: integer
                conditions:
                  additionalProperties:
                    properties:
                      lastHeartbeatTime:
                        description: Last time we got an update on a given condition.
                        format: date-time
                        type: string
                      lastTransitionTime:
                        description: Last time the condition transit from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Human readable message indicating details about last transition.
                        type: string
                      reason:
                        description: (brief) reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                    required:
                      - lastHeartbeatTime
                      - status
                    type: object
                  description: Conditions contains conditions the seed is in, its primary use case is status signaling between controllers or between controllers and the API.
                  type: object
                phase:
                  description: Phase contains a human readable text to indicate the seed cluster status. No logic should be tied to this field, as its content can change in between KKP releases.
                  enum:
                    - Healthy
                    - Unhealthy
                    - Invalid
                    - Terminating
                    - Paused
                  type: string
                versions:
                  description: Versions contains information regarding versions of components in the cluster and the cluster itself.
                  properties:
                    cluster:
                      description: Cluster is the Kubernetes version of the cluster's control plane.
                      type: string
                    kubermatic:
                      description: Kubermatic is the version of the currently deployed KKP components. Note that a permanent version skew between master and seed is not supported and KKP setups should never run for longer times with a skew between the clusters.
                      type: string
                  type: object
              required:
                - clusters
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
