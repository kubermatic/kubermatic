// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "k8c.io/kubermatic/v2/pkg/crd/kubermatic/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RuleGroupLister helps list RuleGroups.
// All objects returned here must be treated as read-only.
type RuleGroupLister interface {
	// List lists all RuleGroups in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.RuleGroup, err error)
	// RuleGroups returns an object that can list and get RuleGroups.
	RuleGroups(namespace string) RuleGroupNamespaceLister
	RuleGroupListerExpansion
}

// ruleGroupLister implements the RuleGroupLister interface.
type ruleGroupLister struct {
	indexer cache.Indexer
}

// NewRuleGroupLister returns a new RuleGroupLister.
func NewRuleGroupLister(indexer cache.Indexer) RuleGroupLister {
	return &ruleGroupLister{indexer: indexer}
}

// List lists all RuleGroups in the indexer.
func (s *ruleGroupLister) List(selector labels.Selector) (ret []*v1.RuleGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.RuleGroup))
	})
	return ret, err
}

// RuleGroups returns an object that can list and get RuleGroups.
func (s *ruleGroupLister) RuleGroups(namespace string) RuleGroupNamespaceLister {
	return ruleGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RuleGroupNamespaceLister helps list and get RuleGroups.
// All objects returned here must be treated as read-only.
type RuleGroupNamespaceLister interface {
	// List lists all RuleGroups in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.RuleGroup, err error)
	// Get retrieves the RuleGroup from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.RuleGroup, error)
	RuleGroupNamespaceListerExpansion
}

// ruleGroupNamespaceLister implements the RuleGroupNamespaceLister
// interface.
type ruleGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RuleGroups in the indexer for a given namespace.
func (s ruleGroupNamespaceLister) List(selector labels.Selector) (ret []*v1.RuleGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.RuleGroup))
	})
	return ret, err
}

// Get retrieves the RuleGroup from the indexer for a given namespace and name.
func (s ruleGroupNamespaceLister) Get(name string) (*v1.RuleGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("rulegroup"), name)
	}
	return obj.(*v1.RuleGroup), nil
}
