# This file has been generated, DO NOT EDIT.

metadata:
  creationTimestamp: null
  name: etcd
  namespace: cluster-de-test-01
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app: etcd
      cluster: de-test-01
  serviceName: etcd
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: launcher
      creationTimestamp: null
      labels:
        apiserver-etcd-client-certificate-secret-revision: "123456"
        app: etcd
        ca-secret-revision: "123456"
        cluster: de-test-01
        etcd-tls-certificate-secret-revision: "123456"
      name: etcd
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: etcd
              topologyKey: kubernetes.io/hostname
            weight: 100
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: etcd
              topologyKey: topology.kubernetes.io/zone
            weight: 100
      containers:
      - command:
        - /usr/local/bin/etcd
        - --name
        - $(POD_NAME)
        - --data-dir
        - /var/run/etcd/pod_$(POD_NAME)/
        - --initial-cluster
        - $(INITIAL_CLUSTER)
        - --initial-cluster-token
        - de-test-01
        - --initial-cluster-state
        - new
        - --advertise-client-urls
        - https://$(POD_NAME).etcd.cluster-de-test-01.svc.cluster.local:2379,https://$(POD_IP):2379
        - --listen-client-urls
        - https://$(POD_IP):2379,https://127.0.0.1:2379
        - --listen-peer-urls
        - http://$(POD_IP):2380
        - --listen-metrics-urls
        - http://$(POD_IP):2378,http://127.0.0.1:2378
        - --initial-advertise-peer-urls
        - http://$(POD_NAME).etcd.cluster-de-test-01.svc.cluster.local:2380
        - --trusted-ca-file
        - /etc/etcd/pki/ca/ca.crt
        - --client-cert-auth
        - --cert-file
        - /etc/etcd/pki/tls/etcd-tls.crt
        - --key-file
        - /etc/etcd/pki/tls/etcd-tls.key
        - --auto-compaction-retention
        - "8"
        - --experimental-initial-corrupt-check
        - --experimental-corrupt-check-time
        - 240m
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: TOKEN
          value: de-test-01
        - name: ENABLE_CORRUPTION_CHECK
          value: "true"
        - name: ETCDCTL_API
          value: "3"
        - name: ETCDCTL_CACERT
          value: /etc/etcd/pki/ca/ca.crt
        - name: ETCDCTL_CERT
          value: /etc/etcd/pki/client/apiserver-etcd-client.crt
        - name: ETCDCTL_KEY
          value: /etc/etcd/pki/client/apiserver-etcd-client.key
        - name: MASTER_ENDPOINT
          value: https://etcd-0.etcd.cluster-de-test-01.svc.cluster.local:2379
        - name: INITIAL_CLUSTER
          value: etcd-0=http://etcd-0.etcd.cluster-de-test-01.svc.cluster.local:2380,etcd-1=http://etcd-1.etcd.cluster-de-test-01.svc.cluster.local:2380,etcd-2=http://etcd-2.etcd.cluster-de-test-01.svc.cluster.local:2380
        image: gcr.io/etcd-development/etcd:v3.5.9
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health?exclude=NOSPACE&serializable=true
            port: 2378
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: etcd
        ports:
        - containerPort: 2379
          name: client
          protocol: TCP
        - containerPort: 2380
          name: peer
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /usr/local/bin/etcdctl
            - --command-timeout
            - 10s
            - endpoint
            - health
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "2"
            memory: 2Gi
          requests:
            cpu: 50m
            memory: 256Mi
        startupProbe:
          failureThreshold: 16
          httpGet:
            path: /health?serializable=false
            port: 2378
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 15
        volumeMounts:
        - mountPath: /var/run/etcd
          name: data
        - mountPath: /etc/etcd/pki/tls
          name: etcd-tls-certificate
        - mountPath: /etc/etcd/pki/ca
          name: ca
        - mountPath: /etc/etcd/pki/client
          name: apiserver-etcd-client-certificate
          readOnly: true
        - mountPath: /opt/bin/
          name: launcher
      imagePullSecrets:
      - name: dockercfg
      serviceAccountName: etcd-launcher
      volumes:
      - name: etcd-tls-certificate
        secret:
          secretName: etcd-tls-certificate
      - name: ca
        secret:
          items:
          - key: ca.crt
            path: ca.crt
          secretName: ca
      - name: apiserver-etcd-client-certificate
        secret:
          secretName: apiserver-etcd-client-certificate
      - emptyDir: {}
        name: launcher
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
      storageClassName: kubermatic-fast
    status: {}
status:
  availableReplicas: 0
  replicas: 0
