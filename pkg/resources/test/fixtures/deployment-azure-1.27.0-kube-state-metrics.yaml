# This file has been generated, DO NOT EDIT.

metadata:
  creationTimestamp: null
  labels:
    app: kube-state-metrics
  name: kube-state-metrics
  namespace: cluster-de-test-01
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-state-metrics
  strategy: {}
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: http-prober-bin
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: kube-state-metrics
        cluster: de-test-01
        kube-state-metrics-kubeconfig-secret-revision: "123456"
    spec:
      containers:
      - args:
        - -endpoint
        - https://apiserver-external.cluster-de-test-01.svc.cluster.local./healthz
        - -insecure
        - -retries
        - "100"
        - -retry-wait
        - "2"
        - -timeout
        - "1"
        - -command
        - '{"command":"/kube-state-metrics","args":["--kubeconfig","/etc/kubernetes/kubeconfig/kubeconfig","--port","8080","--telemetry-port","8081"]}'
        command:
        - /http-prober-bin/http-prober
        image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.2
        name: kube-state-metrics
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 8081
          name: telemetry
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 15
        resources:
          limits:
            cpu: 100m
            memory: 1Gi
          requests:
            cpu: 10m
            memory: 12Mi
        volumeMounts:
        - mountPath: /etc/kubernetes/kubeconfig
          name: kube-state-metrics-kubeconfig
          readOnly: true
        - mountPath: /http-prober-bin
          name: http-prober-bin
      imagePullSecrets:
      - name: dockercfg
      initContainers:
      - command:
        - /bin/cp
        - /usr/local/bin/http-prober
        - /http-prober-bin/http-prober
        image: quay.io/kubermatic/http-prober:v0.4.0
        name: copy-http-prober
        resources: {}
        volumeMounts:
        - mountPath: /http-prober-bin
          name: http-prober-bin
      volumes:
      - name: kube-state-metrics-kubeconfig
        secret:
          secretName: kube-state-metrics-kubeconfig
      - emptyDir: {}
        name: http-prober-bin
status: {}
