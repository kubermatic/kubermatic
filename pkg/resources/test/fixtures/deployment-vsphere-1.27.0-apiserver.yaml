# This file has been generated, DO NOT EDIT.

metadata:
  creationTimestamp: null
  labels:
    app: apiserver
  name: apiserver
  namespace: cluster-de-test-01
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apiserver
  strategy: {}
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: audit-log,konnectivity-uds
        prometheus.io/path: /metrics
        prometheus.io/port: "30000"
        prometheus.io/scrape_with_kube_cert: "true"
      creationTimestamp: null
      labels:
        adm-control-configmap-revision: "123456"
        apiserver-etcd-client-certificate-secret-revision: "123456"
        apiserver-proxy-client-certificate-secret-revision: "123456"
        apiserver-tls-secret-revision: "123456"
        app: apiserver
        app.kubernetes.io/version: 1.27.0
        audit-config-configmap-revision: "123456"
        ca-bundle-configmap-revision: "123456"
        ca-secret-revision: "123456"
        cloud-config-secret-revision: "123456"
        cluster: de-test-01
        front-proxy-ca-secret-revision: "123456"
        konnectivity-kubeconfig-secret-revision: "123456"
        konnectivityproxy-tls-secret-revision: "123456"
        kube-apiserver-egress-configmap-revision: "123456"
        kubelet-client-certificates-secret-revision: "123456"
        service-account-key-secret-revision: "123456"
        tokens-secret-revision: "123456"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: apiserver
              topologyKey: kubernetes.io/hostname
            weight: 100
      automountServiceAccountToken: true
      containers:
      - args:
        - --logtostderr=true
        - -v=3
        - --cluster-key=/etc/kubernetes/pki/konnectivityproxy-tls.key
        - --cluster-cert=/etc/kubernetes/pki/konnectivityproxy-tls.crt
        - --uds-name=/etc/kubernetes/konnectivity-server/konnectivity-server.socket
        - --kubeconfig=/etc/kubernetes/kubeconfig/kubeconfig
        - --server-count=1
        - --mode=grpc
        - --server-port=0
        - --agent-port=8132
        - --admin-port=8133
        - --health-port=8134
        - --agent-namespace=kube-system
        - --agent-service-account=system-konnectivity-agent
        - --delete-existing-uds-file=true
        - --authentication-audience=system:konnectivity-server
        - --proxy-strategies=default
        - --keepalive-time=1m
        command:
        - /proxy-server
        image: registry.k8s.io/kas-network-proxy/proxy-server:v0.1.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8134
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 15
        name: konnectivity-server
        ports:
        - containerPort: 8132
          name: agentport
          protocol: TCP
        - containerPort: 8133
          name: adminport
          protocol: TCP
        - containerPort: 8134
          name: healthport
          protocol: TCP
        resources:
          limits:
            cpu: "2"
            memory: 200Mi
          requests:
            cpu: 10m
            memory: 10Mi
        volumeMounts:
        - mountPath: /etc/kubernetes/konnectivity-server
          name: konnectivity-uds
        - mountPath: /etc/kubernetes/kubeconfig
          name: konnectivity-kubeconfig
          readOnly: true
        - mountPath: /etc/kubernetes/pki/
          name: konnectivityproxy-tls
          readOnly: true
      - args:
        - --advertise-address
        - 35.198.93.90
        - --secure-port
        - "30000"
        - --etcd-servers
        - https://etcd-0.etcd.cluster-de-test-01.svc.cluster.local.:2379,https://etcd-1.etcd.cluster-de-test-01.svc.cluster.local.:2379,https://etcd-2.etcd.cluster-de-test-01.svc.cluster.local.:2379
        - --etcd-cafile
        - /etc/etcd/pki/client/ca.crt
        - --etcd-certfile
        - /etc/etcd/pki/client/apiserver-etcd-client.crt
        - --etcd-keyfile
        - /etc/etcd/pki/client/apiserver-etcd-client.key
        - --storage-backend
        - etcd3
        - --enable-admission-plugins
        - DefaultStorageClass,DefaultTolerationSeconds,LimitRanger,MutatingAdmissionWebhook,NamespaceLifecycle,NodeRestriction,Priority,ResourceQuota,ServiceAccount,ValidatingAdmissionWebhook
        - --admission-control-config-file
        - /etc/kubernetes/adm-control/admission-control.yaml
        - --authorization-mode
        - Node,RBAC
        - --external-hostname
        - jh8j81chn.europe-west3-c.dev.kubermatic.io
        - --token-auth-file
        - /etc/kubernetes/tokens/tokens.csv
        - --enable-bootstrap-token-auth
        - --service-account-key-file
        - /etc/kubernetes/service-account-key/sa.key
        - --service-cluster-ip-range
        - 10.240.16.0/20
        - --service-node-port-range
        - 30000-32767
        - --allow-privileged
        - --audit-log-maxage
        - "30"
        - --audit-log-maxbackup
        - "3"
        - --audit-log-maxsize
        - "100"
        - --audit-log-path
        - /var/log/kubernetes/audit/audit.log
        - --tls-cert-file
        - /etc/kubernetes/tls/apiserver-tls.crt
        - --tls-cipher-suites
        - TLS_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
        - --tls-private-key-file
        - /etc/kubernetes/tls/apiserver-tls.key
        - --proxy-client-cert-file
        - /etc/kubernetes/pki/front-proxy/client/apiserver-proxy-client.crt
        - --proxy-client-key-file
        - /etc/kubernetes/pki/front-proxy/client/apiserver-proxy-client.key
        - --client-ca-file
        - /etc/kubernetes/pki/ca/ca.crt
        - --kubelet-client-certificate
        - /etc/kubernetes/kubelet/kubelet-client.crt
        - --kubelet-client-key
        - /etc/kubernetes/kubelet/kubelet-client.key
        - --kubelet-certificate-authority
        - /etc/kubernetes/pki/ca/ca.crt
        - --requestheader-client-ca-file
        - /etc/kubernetes/pki/front-proxy/ca/ca.crt
        - --requestheader-allowed-names
        - apiserver-aggregator
        - --requestheader-extra-headers-prefix
        - X-Remote-Extra-
        - --requestheader-group-headers
        - X-Remote-Group
        - --requestheader-username-headers
        - X-Remote-User
        - --endpoint-reconciler-type
        - none
        - --profiling=false
        - --service-account-issuer
        - https://jh8j81chn.europe-west3-c.dev.kubermatic.io:30000
        - --service-account-signing-key-file
        - /etc/kubernetes/service-account-key/sa.key
        - --api-audiences
        - https://jh8j81chn.europe-west3-c.dev.kubermatic.io:30000,system:konnectivity-server
        - --kubelet-preferred-address-types
        - InternalIP,ExternalIP
        - --cloud-provider
        - vsphere
        - --cloud-config
        - /etc/kubernetes/cloud/config
        - --oidc-ca-file
        - /etc/kubernetes/pki/ca-bundle/ca-bundle.pem
        - --oidc-issuer-url
        - https://dev.kubermatic.io/dex
        - --oidc-client-id
        - kubermaticIssuer
        - --oidc-username-claim
        - email
        - --oidc-groups-prefix
        - 'oidc:'
        - --oidc-groups-claim
        - groups
        - --egress-selector-config-file
        - /etc/kubernetes/konnectivity/egress-selector-configuration.yaml
        command:
        - /usr/local/bin/kube-apiserver
        env:
        - name: SSL_CERT_FILE
          value: /etc/kubernetes/pki/ca-bundle/ca-bundle.pem
        - name: HTTP_PROXY
          value: http://my-corp
        - name: HTTPS_PROXY
          value: http://my-corp
        - name: http_proxy
          value: http://my-corp
        - name: https_proxy
          value: http://my-corp
        - name: NO_PROXY
          value: apiserver-external.cluster-de-test-01.svc.cluster.local.
        - name: no_proxy
          value: apiserver-external.cluster-de-test-01.svc.cluster.local.
        image: registry.k8s.io/kube-apiserver:v1.27.0
        livenessProbe:
          failureThreshold: 8
          httpGet:
            path: /healthz
            port: 30000
            scheme: HTTPS
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 15
        name: apiserver
        ports:
        - containerPort: 30000
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 30000
            scheme: HTTPS
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 15
        resources:
          limits:
            cpu: "2"
            memory: 4Gi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - mountPath: /etc/kubernetes/tls
          name: apiserver-tls
          readOnly: true
        - mountPath: /etc/kubernetes/tokens
          name: tokens
          readOnly: true
        - mountPath: /etc/kubernetes/kubelet
          name: kubelet-client-certificates
          readOnly: true
        - mountPath: /etc/kubernetes/pki/ca
          name: ca
          readOnly: true
        - mountPath: /etc/kubernetes/pki/ca-bundle
          name: ca-bundle
          readOnly: true
        - mountPath: /etc/kubernetes/service-account-key
          name: service-account-key
          readOnly: true
        - mountPath: /etc/kubernetes/cloud
          name: cloud-config
          readOnly: true
        - mountPath: /etc/etcd/pki/client
          name: apiserver-etcd-client-certificate
          readOnly: true
        - mountPath: /etc/kubernetes/pki/front-proxy/client
          name: apiserver-proxy-client-certificate
          readOnly: true
        - mountPath: /etc/kubernetes/pki/front-proxy/ca
          name: front-proxy-ca
          readOnly: true
        - mountPath: /etc/kubernetes/audit
          name: audit-config
          readOnly: true
        - mountPath: /var/log/kubernetes/audit
          name: audit-log
        - mountPath: /etc/kubernetes/adm-control
          name: adm-control
          readOnly: true
        - mountPath: /etc/kubernetes/konnectivity-server
          name: konnectivity-uds
        - mountPath: /etc/kubernetes/konnectivity
          name: kube-apiserver-egress
          readOnly: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: dockercfg
      initContainers:
      - command:
        - /etcd-launcher
        - is-running
        - --etcd-ca-file=/etc/etcd/pki/client/ca.crt
        - --etcd-client-cert-file=/etc/etcd/pki/client/apiserver-etcd-client.crt
        - --etcd-client-key-file=/etc/etcd/pki/client/apiserver-etcd-client.key
        - --cluster=de-test-01
        image: quay.io/kubermatic/etcd-launcher:v0.0.0-test
        imagePullPolicy: IfNotPresent
        name: etcd-running
        resources: {}
        volumeMounts:
        - mountPath: /etc/etcd/pki/client
          name: apiserver-etcd-client-certificate
          readOnly: true
      serviceAccountName: etcd-launcher
      volumes:
      - name: apiserver-tls
        secret:
          secretName: apiserver-tls
      - name: tokens
        secret:
          secretName: tokens
      - name: kubelet-client-certificates
        secret:
          secretName: kubelet-client-certificates
      - name: ca
        secret:
          items:
          - key: ca.crt
            path: ca.crt
          secretName: ca
      - configMap:
          name: ca-bundle
        name: ca-bundle
      - name: service-account-key
        secret:
          secretName: service-account-key
      - name: cloud-config
        secret:
          secretName: cloud-config
      - name: apiserver-etcd-client-certificate
        secret:
          secretName: apiserver-etcd-client-certificate
      - name: apiserver-proxy-client-certificate
        secret:
          secretName: apiserver-proxy-client-certificate
      - name: front-proxy-ca
        secret:
          secretName: front-proxy-ca
      - configMap:
          name: audit-config
          optional: false
        name: audit-config
      - emptyDir: {}
        name: audit-log
      - configMap:
          name: adm-control
        name: adm-control
      - name: konnectivity-kubeconfig
        secret:
          defaultMode: 420
          secretName: konnectivity-kubeconfig
      - name: konnectivityproxy-tls
        secret:
          defaultMode: 420
          secretName: konnectivityproxy-tls
      - emptyDir: {}
        name: konnectivity-uds
      - configMap:
          defaultMode: 420
          name: kube-apiserver-egress
        name: kube-apiserver-egress
status: {}
