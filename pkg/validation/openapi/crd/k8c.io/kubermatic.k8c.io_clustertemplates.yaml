---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: clustertemplates.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: ClusterTemplate
    listKind: ClusterTemplateList
    plural: clustertemplates
    singular: clustertemplate
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.humanReadableName
      name: HumanReadableName
      type: string
    - jsonPath: .spec.version
      name: Version
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: ClusterTemplate is the object representing a cluster template.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          clusterLabels:
            additionalProperties:
              type: string
            type: object
          credential:
            type: string
          inheritedClusterLabels:
            additionalProperties:
              type: string
            type: object
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec describes the desired state of a user cluster.
            properties:
              admissionPlugins:
                description: A list of arbitrary admission plugin names that are passed
                  to kube-apiserver. Must not include admission plugins that can be
                  enabled via a separate setting.
                items:
                  type: string
                type: array
              auditLogging:
                description: 'Optional: AuditLogging configures Kubernetes API audit
                  logging (https://kubernetes.io/docs/tasks/debug-application-cluster/audit/)
                  for the user cluster.'
                properties:
                  enabled:
                    description: Enabled will enable or disable audit logging.
                    type: boolean
                  policyPreset:
                    description: 'Optional: PolicyPreset can be set to utilize a pre-defined
                      set of audit policy rules.'
                    enum:
                    - ""
                    - metadata
                    - recommended
                    - minimal
                    type: string
                type: object
              cloud:
                description: CloudSpec stores configuration options for a given cloud
                  provider. Provider specs are mutually exclusive.
                properties:
                  alibaba:
                    description: AlibabaCloudSpec specifies the access data to Alibaba.
                    properties:
                      accessKeyID:
                        type: string
                      accessKeySecret:
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                    type: object
                  anexia:
                    description: AnexiaCloudSpec specifies the access data to Anexia.
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      token:
                        type: string
                    type: object
                  aws:
                    description: AWSCloudSpec specifies access data to Amazon Web
                      Services.
                    properties:
                      accessKeyID:
                        type: string
                      assumeRoleARN:
                        type: string
                      assumeRoleExternalID:
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      instanceProfileName:
                        type: string
                      nodePortsAllowedIPRange:
                        type: string
                      roleARN:
                        description: The IAM role, the control plane will use. The
                          control plane will perform an assume-role
                        type: string
                      routeTableID:
                        type: string
                      secretAccessKey:
                        type: string
                      securityGroupID:
                        type: string
                      vpcID:
                        type: string
                    required:
                    - instanceProfileName
                    - roleARN
                    - routeTableID
                    - securityGroupID
                    - vpcID
                    type: object
                  azure:
                    description: AzureCloudSpec defines cloud resource references
                      for Microsoft Azure.
                    properties:
                      assignAvailabilitySet:
                        description: 'Optional: AssignAvailabilitySet determines whether
                          KKP creates and assigns an AvailabilitySet to machines.
                          Defaults to `true` internally if not set.'
                        type: boolean
                      availabilitySet:
                        description: An availability set that will be associated with
                          nodes created for this cluster. If this field is set to
                          empty string at cluster creation and `AssignAvailabilitySet`
                          is set to `true`, a new availability set will be created
                          and this field will be updated to the generated availability
                          set's name.
                        type: string
                      clientID:
                        description: ClientID is the service principal used to access
                          Azure. Can be read from `credentialsReference` instead.
                        type: string
                      clientSecret:
                        description: ClientSecret is the client secret corresponding
                          to the given service principal. Can be read from `credentialsReference`
                          instead.
                        type: string
                      credentialsReference:
                        description: CredentialsReference allows referencing a `Secret`
                          resource instead of passing secret data in this spec.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      loadBalancerSKU:
                        description: Azure SKU for Load Balancers. Possible values
                          are `basic` and `standard`.
                        enum:
                        - standard
                        - basic
                        type: string
                      nodePortsAllowedIPRange:
                        description: A CIDR range that will be used to allow access
                          to the node port range in the security group to. Only applies
                          if the security group is generated by KKP and not preexisting.
                          Defaults to `0.0.0.0/0` internally if not set.
                        type: string
                      resourceGroup:
                        description: The resource group that will be used to look
                          up and create resources for the cluster in. If set to empty
                          string at cluster creation, a new resource group will be
                          created and this field will be updated to the generated
                          resource group's name.
                        type: string
                      routeTable:
                        description: The name of a route table associated with the
                          subnet referenced by `subnet`. If set to empty string at
                          cluster creation, a new route table will be created and
                          this field will be updated to the generated route table's
                          name. If no subnet is defined at cluster creation, this
                          field should be empty as well.
                        type: string
                      securityGroup:
                        description: The name of a security group associated with
                          the subnet referenced by `subnet`. If set to empty string
                          at cluster creation, a new security group will be created
                          and this field will be updated to the generated security
                          group's name. If no subnet is defined at cluster creation,
                          this field should be empty as well.
                        type: string
                      subnet:
                        description: The name of a subnet in the VNet referenced by
                          `vnet`. If set to empty string at cluster creation, a new
                          subnet will be created and this field will be updated to
                          the generated subnet's name. If no VNet is defined at cluster
                          creation, this field should be empty as well.
                        type: string
                      subscriptionID:
                        description: SubscriptionID is the Azure Subscription used
                          for this cluster. Can be read from `credentialsReference`
                          instead.
                        type: string
                      tenantID:
                        description: TenantID is the Azure Active Directory Tenant
                          used for this cluster. Can be read from `credentialsReference`
                          instead.
                        type: string
                      vnet:
                        description: The name of the VNet resource used for setting
                          up networking in. If set to empty string at cluster creation,
                          a new VNet will be created and this field will be updated
                          to the generated VNet's name.
                        type: string
                      vnetResourceGroup:
                        description: 'Optional: VNetResourceGroup optionally defines
                          a second resource group that will be used for VNet related
                          resources instead. If left empty, NO additional resource
                          group will be created and all VNet related resources use
                          the resource group defined by `resourceGroup`.'
                        type: string
                    required:
                    - availabilitySet
                    - loadBalancerSKU
                    - resourceGroup
                    - routeTable
                    - securityGroup
                    - subnet
                    - vnet
                    - vnetResourceGroup
                    type: object
                  bringyourown:
                    description: BringYourOwnCloudSpec specifies access data for a
                      bring your own cluster.
                    type: object
                  dc:
                    description: DatacenterName states the name of a cloud provider
                      "datacenter" (defined in `Seed` resources) this cluster should
                      be deployed into.
                    type: string
                  digitalocean:
                    description: DigitaloceanCloudSpec specifies access data to DigitalOcean.
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      token:
                        type: string
                    type: object
                  fake:
                    description: FakeCloudSpec specifies access data for a fake cloud.
                    properties:
                      token:
                        type: string
                    type: object
                  gcp:
                    description: GCPCloudSpec specifies access data to GCP.
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      network:
                        type: string
                      nodePortsAllowedIPRange:
                        type: string
                      serviceAccount:
                        type: string
                      subnetwork:
                        type: string
                    required:
                    - network
                    - subnetwork
                    type: object
                  hetzner:
                    description: HetznerCloudSpec specifies access data to hetzner
                      cloud.
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      network:
                        description: Network is the pre-existing Hetzner network in
                          which the machines are running. While machines can be in
                          multiple networks, a single one must be chosen for the HCloud
                          CCM to work. If this is empty, the network configured on
                          the datacenter will be used.
                        type: string
                      token:
                        description: Token is used to authenticate with the Hetzner
                          cloud API.
                        type: string
                    type: object
                  kubevirt:
                    description: KubevirtCloudSpec specifies the access data to Kubevirt.
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      csiKubeconfig:
                        type: string
                      kubeconfig:
                        type: string
                    type: object
                  nutanix:
                    description: NutanixCloudSpec specifies the access data to Nutanix.
                    properties:
                      clusterName:
                        description: ClusterName is the Nutanix cluster that this
                          user cluster will be deployed to.
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      csi:
                        description: NutanixCSIConfig for csi driver that connects
                          to a prism element
                        properties:
                          endpoint:
                            description: Prism Element Endpoint to access Nutanix
                              Prism Element for csi driver
                            type: string
                          fstype:
                            description: 'Optional: defaults to "xfs"'
                            type: string
                          password:
                            description: Prism Element Password for csi driver
                            type: string
                          port:
                            description: 'Optional: Port to use when connecting to
                              the Nutanix Prism Element endpoint (defaults to 9440)'
                            format: int32
                            type: integer
                          ssSegmentedIscsiNetwork:
                            description: 'Optional: defaults to "false"'
                            type: boolean
                          storageContainer:
                            description: 'Optional: defaults to "SelfServiceContainer"'
                            type: string
                          username:
                            description: Prism Element Username for csi driver
                            type: string
                        required:
                        - endpoint
                        type: object
                      password:
                        type: string
                      projectName:
                        description: ProjectName is the project that this cluster
                          is deployed into. If none is given, no project will be used.
                        type: string
                      proxyURL:
                        type: string
                      username:
                        type: string
                    required:
                    - clusterName
                    type: object
                  openstack:
                    description: OpenstackCloudSpec specifies access data to an OpenStack
                      cloud.
                    properties:
                      applicationCredentialID:
                        type: string
                      applicationCredentialSecret:
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      domain:
                        type: string
                      floatingIPPool:
                        description: "FloatingIPPool holds the name of the public
                          network The public network is reachable from the outside
                          world and should provide the pool of IP addresses to choose
                          from. \n When specified, all worker nodes will receive a
                          public ip from this floating ip pool \n Note that the network
                          is external if the \"External\" field is set to true"
                        type: string
                      ipv6SubnetID:
                        description: IPv6SubnetID holds the ID of the subnet used
                          for IPv6 networking. If not provided, a new subnet will
                          be created if IPv6 is enabled.
                        type: string
                      ipv6SubnetPool:
                        description: IPv6SubnetPool holds the name of the subnet pool
                          used for creating new IPv6 subnets. If not provided, the
                          default IPv6 subnet pool will be used.
                        type: string
                      network:
                        description: "Network holds the name of the internal network
                          When specified, all worker nodes will be attached to this
                          network. If not specified, a network, subnet & router will
                          be created \n Note that the network is internal if the \"External\"
                          field is set to false"
                        type: string
                      nodePortsAllowedIPRange:
                        type: string
                      password:
                        type: string
                      project:
                        description: project, formally known as tenant.
                        type: string
                      projectID:
                        description: project id, formally known as tenantID.
                        type: string
                      routerID:
                        type: string
                      securityGroups:
                        type: string
                      subnetID:
                        type: string
                      token:
                        description: Used internally during cluster creation
                        type: string
                      useOctavia:
                        description: "Whether or not to use Octavia for LoadBalancer
                          type of Service implementation instead of using Neutron-LBaaS.
                          Attention:Openstack CCM use Octavia as default load balancer
                          implementation since v1.17.0 \n Takes precedence over the
                          'use_octavia' flag provided at datacenter level if both
                          are specified."
                        type: boolean
                      useToken:
                        type: boolean
                      username:
                        type: string
                    required:
                    - floatingIPPool
                    - network
                    - routerID
                    - securityGroups
                    - subnetID
                    type: object
                  packet:
                    description: PacketCloudSpec specifies access data to a Packet
                      cloud.
                    properties:
                      apiKey:
                        type: string
                      billingCycle:
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      projectID:
                        type: string
                    required:
                    - billingCycle
                    type: object
                  providerName:
                    description: ProviderName is the name of the cloud provider used
                      for this cluster. This must match the given provider spec (e.g.
                      if the providerName is "aws", then the `aws` field must be set).
                    type: string
                  vsphere:
                    description: VSphereCloudSpec specifies access data to VSphere
                      cloud.
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      datastore:
                        description: Datastore to be used for storing virtual machines
                          and as a default for dynamic volume provisioning, it is
                          mutually exclusive with DatastoreCluster.
                        type: string
                      datastoreCluster:
                        description: DatastoreCluster to be used for storing virtual
                          machines, it is mutually exclusive with Datastore.
                        type: string
                      folder:
                        description: Folder is the folder to be used to group the
                          provisioned virtual machines.
                        type: string
                      infraManagementUser:
                        description: This user will be used for everything except
                          cloud provider functionality
                        properties:
                          password:
                            type: string
                          username:
                            type: string
                        type: object
                      password:
                        description: Password is the vSphere user password.
                        type: string
                      resourcePool:
                        description: ResourcePool is used to manage resources such
                          as cpu and memory for vSphere virtual machines. The resource
                          pool should be defined on vSphere cluster level.
                        type: string
                      storagePolicy:
                        description: StoragePolicy to be used for storage provisioning
                        type: string
                      tagCategoryID:
                        description: This is category for the machine deployment tags
                        type: string
                      username:
                        description: Username is the vSphere user name.
                        type: string
                      vmNetName:
                        description: VMNetName is the name of the vSphere network.
                        type: string
                    required:
                    - infraManagementUser
                    - storagePolicy
                    - vmNetName
                    type: object
                required:
                - dc
                - providerName
                type: object
              clusterNetwork:
                description: ClusterNetworkingConfig specifies the different networking
                  parameters for a cluster.
                properties:
                  dnsDomain:
                    description: Domain name for services.
                    type: string
                  ipvs:
                    description: IPVS defines kube-proxy ipvs configuration options
                    properties:
                      strictArp:
                        default: true
                        description: StrictArp configure arp_ignore and arp_announce
                          to avoid answering ARP queries from kube-ipvs0 interface.
                          defaults to true.
                        type: boolean
                    type: object
                  konnectivityEnabled:
                    description: KonnectivityEnabled enables konnectivity for controlplane
                      to node network communication.
                    type: boolean
                  nodeCidrMaskSizeIPv4:
                    description: NodeCIDRMaskSizeIPv4 is the mask size used to address
                      the nodes within provided IPv4 Pods CIDR. It has to be larger
                      than the provided IPv4 Pods CIDR. Defaults to 24.
                    format: int32
                    type: integer
                  nodeCidrMaskSizeIPv6:
                    description: NodeCIDRMaskSizeIPv6 is the mask size used to address
                      the nodes within provided IPv6 Pods CIDR. It has to be larger
                      than the provided IPv6 Pods CIDR. Defaults to 64.
                    format: int32
                    type: integer
                  nodeLocalDNSCacheEnabled:
                    default: true
                    description: NodeLocalDNSCacheEnabled controls whether the NodeLocal
                      DNS Cache feature is enabled. Defaults to true.
                    type: boolean
                  pods:
                    description: The network ranges from which POD networks are allocated.
                      It can contain one IPv4 and/or one IPv6 CIDR. If both address
                      families are specified, the first one defines the primary address
                      family.
                    properties:
                      cidrBlocks:
                        items:
                          type: string
                        type: array
                    required:
                    - cidrBlocks
                    type: object
                  proxyMode:
                    default: ipvs
                    description: ProxyMode defines the kube-proxy mode ("ipvs" / "iptables"
                      / "ebpf"). Defaults to "ipvs". "ebpf" disables kube-proxy and
                      requires CNI support.
                    enum:
                    - ipvs
                    - iptables
                    - ebpf
                    type: string
                  services:
                    description: The network ranges from which service VIPs are allocated.
                      It can contain one IPv4 and/or one IPv6 CIDR. If both address
                      families are specified, the first one defines the primary address
                      family.
                    properties:
                      cidrBlocks:
                        items:
                          type: string
                        type: array
                    required:
                    - cidrBlocks
                    type: object
                required:
                - dnsDomain
                - pods
                - proxyMode
                - services
                type: object
              cniPlugin:
                description: CNIPluginSettings contains the spec of the CNI plugin
                  used by the Cluster.
                properties:
                  type:
                    description: Type is the CNI plugin type to be used.
                    enum:
                    - canal
                    - cilium
                    - none
                    type: string
                  version:
                    description: Version defines the CNI plugin version to be used.
                      This varies by chosen CNI plugin type.
                    type: string
                required:
                - type
                - version
                type: object
              componentsOverride:
                description: 'Optional: Component specific overrides that allow customization
                  of control plane components.'
                properties:
                  apiserver:
                    properties:
                      endpointReconcilingDisabled:
                        type: boolean
                      nodePortRange:
                        type: string
                      replicas:
                        format: int32
                        type: integer
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      tolerations:
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                  controllerManager:
                    properties:
                      leaderElection:
                        properties:
                          leaseDurationSeconds:
                            description: LeaseDurationSeconds is the duration in seconds
                              that non-leader candidates will wait to force acquire
                              leadership. This is measured against time of last observed
                              ack.
                            format: int32
                            type: integer
                          renewDeadlineSeconds:
                            description: RenewDeadlineSeconds is the duration in seconds
                              that the acting controlplane will retry refreshing leadership
                              before giving up.
                            format: int32
                            type: integer
                          retryPeriodSeconds:
                            description: RetryPeriodSeconds is the duration in seconds
                              the LeaderElector clients should wait between tries
                              of actions.
                            format: int32
                            type: integer
                        type: object
                      replicas:
                        format: int32
                        type: integer
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      tolerations:
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                  etcd:
                    properties:
                      clusterSize:
                        format: int32
                        type: integer
                      diskSize:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      storageClass:
                        type: string
                      tolerations:
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                  nodePortProxyEnvoy:
                    properties:
                      dockerRepository:
                        description: DockerRepository is the repository containing
                          the component's image.
                        type: string
                      resources:
                        description: Resources describes the requested and maximum
                          allowed CPU/memory usage.
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                  prometheus:
                    properties:
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                  scheduler:
                    properties:
                      leaderElection:
                        properties:
                          leaseDurationSeconds:
                            description: LeaseDurationSeconds is the duration in seconds
                              that non-leader candidates will wait to force acquire
                              leadership. This is measured against time of last observed
                              ack.
                            format: int32
                            type: integer
                          renewDeadlineSeconds:
                            description: RenewDeadlineSeconds is the duration in seconds
                              that the acting controlplane will retry refreshing leadership
                              before giving up.
                            format: int32
                            type: integer
                          retryPeriodSeconds:
                            description: RetryPeriodSeconds is the duration in seconds
                              the LeaderElector clients should wait between tries
                              of actions.
                            format: int32
                            type: integer
                        type: object
                      replicas:
                        format: int32
                        type: integer
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      tolerations:
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                required:
                - apiserver
                - controllerManager
                - etcd
                - nodePortProxyEnvoy
                - prometheus
                - scheduler
                type: object
              containerRuntime:
                default: containerd
                description: ContainerRuntime to use, i.e. `docker` or `containerd`.
                  By default `containerd` will be used.
                enum:
                - docker
                - containerd
                type: string
              debugLog:
                description: Enables more verbose logging in KKP's user-cluster-controller-manager.
                type: boolean
              enableOperatingSystemManager:
                description: 'Optional: Enables operating-system-manager (OSM), which
                  is responsible for creating and managing worker node configuration.
                  This is an experimental feature.'
                type: boolean
              enableUserSSHKeyAgent:
                description: 'Optional: Deploys the UserSSHKeyAgent to the user cluster.
                  This field is immutable. If enabled, the agent will be deployed
                  and used to sync user ssh keys attached by users to the cluster.
                  No SSH keys will be synced after node creation if this is disabled.'
                type: boolean
              eventRateLimitConfig:
                description: 'Optional: Configures the EventRateLimit admission plugin
                  (if enabled via `useEventRateLimitAdmissionPlugin`) to create limits
                  on Kubernetes event generation. The EventRateLimit plugin is capable
                  of comparing and rate limiting incoming `Events` based on several
                  configured buckets.'
                properties:
                  namespace:
                    properties:
                      burst:
                        format: int32
                        type: integer
                      cacheSize:
                        format: int32
                        type: integer
                      qps:
                        format: int32
                        type: integer
                    required:
                    - burst
                    - qps
                    type: object
                  server:
                    properties:
                      burst:
                        format: int32
                        type: integer
                      cacheSize:
                        format: int32
                        type: integer
                      qps:
                        format: int32
                        type: integer
                    required:
                    - burst
                    - qps
                    type: object
                  sourceAndObject:
                    properties:
                      burst:
                        format: int32
                        type: integer
                      cacheSize:
                        format: int32
                        type: integer
                      qps:
                        format: int32
                        type: integer
                    required:
                    - burst
                    - qps
                    type: object
                  user:
                    properties:
                      burst:
                        format: int32
                        type: integer
                      cacheSize:
                        format: int32
                        type: integer
                      qps:
                        format: int32
                        type: integer
                    required:
                    - burst
                    - qps
                    type: object
                type: object
              exposeStrategy:
                description: ExposeStrategy is the strategy used to expose a cluster
                  control plane. Possible values are `NodePort`, `LoadBalancer` or
                  `Tunneling` (requires a feature gate).
                enum:
                - NodePort
                - LoadBalancer
                - Tunneling
                type: string
              features:
                additionalProperties:
                  type: boolean
                description: A map of optional or early-stage features that can be
                  enabled for the user cluster. Some feature gates cannot be disabled
                  after being enabled. The available feature gates vary based on KKP
                  version, Kubernetes version and Seed configuration. Please consult
                  the KKP documentation for specific feature gates.
                type: object
              humanReadableName:
                description: HumanReadableName is the cluster name provided by the
                  user.
                type: string
              kubernetesDashboard:
                description: KubernetesDashboard holds the configuration for the kubernetes-dashboard
                  component.
                properties:
                  enabled:
                    default: true
                    description: Controls whether kubernetes-dashboard is deployed
                      to the user cluster or not.
                    type: boolean
                type: object
              machineNetworks:
                items:
                  description: MachineNetworkingConfig specifies the networking parameters
                    used for IPAM.
                  properties:
                    cidr:
                      type: string
                    dnsServers:
                      items:
                        type: string
                      type: array
                    gateway:
                      type: string
                  required:
                  - cidr
                  - dnsServers
                  - gateway
                  type: object
                type: array
              mla:
                description: 'Optional: MLA contains monitoring, logging and alerting
                  related settings for the user cluster.'
                properties:
                  loggingEnabled:
                    description: LoggingEnabled is the flag for enabling logging in
                      user cluster.
                    type: boolean
                  loggingResources:
                    description: LoggingResources is the resource requirements for
                      user cluster promtail.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  monitoringEnabled:
                    description: MonitoringEnabled is the flag for enabling monitoring
                      in user cluster.
                    type: boolean
                  monitoringReplicas:
                    description: MonitoringReplicas is the number of desired pods
                      of user cluster prometheus deployment.
                    format: int32
                    type: integer
                  monitoringResources:
                    description: MonitoringResources is the resource requirements
                      for user cluster prometheus.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                type: object
              oidc:
                properties:
                  clientID:
                    type: string
                  clientSecret:
                    type: string
                  extraScopes:
                    type: string
                  groupsClaim:
                    type: string
                  issuerURL:
                    type: string
                  requiredClaim:
                    type: string
                  usernameClaim:
                    type: string
                type: object
              opaIntegration:
                description: 'Optional: OPAIntegration is a preview feature that enables
                  OPA integration for the cluster. Enabling it causes OPA Gatekeeper
                  and its resources to be deployed on the user cluster. By default
                  it is disabled.'
                properties:
                  auditResources:
                    description: 'Optional: AuditResources is the resource requirements
                      for user cluster gatekeeper audit.'
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  controllerResources:
                    description: 'Optional: ControllerResources is the resource requirements
                      for user cluster gatekeeper controller.'
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  enabled:
                    description: Enables OPA Gatekeeper integration.
                    type: boolean
                  experimentalEnableMutation:
                    description: 'Optional: Enables experimental mutation in Gatekeeper.'
                    type: boolean
                  webhookTimeoutSeconds:
                    default: 10
                    description: The timeout in seconds that is set for the Gatekeeper
                      validating webhook admission review calls. Defaults to `10`
                      (seconds).
                    format: int32
                    type: integer
                type: object
              pause:
                default: false
                description: If this is set to true, the cluster will not be reconciled
                  by KKP. This indicates that the user needs to do some action to
                  resolve the pause.
                type: boolean
              pauseReason:
                description: PauseReason is the reason why the cluster is not being
                  managed. This field is for informational purpose only and can be
                  set by a user or a controller to communicate the reason for pausing
                  the cluster.
                type: string
              podNodeSelectorAdmissionPluginConfig:
                additionalProperties:
                  type: string
                description: 'Optional: Provides configuration for the PodNodeSelector
                  admission plugin (needs plugin enabled via `usePodNodeSelectorAdmissionPlugin`).
                  It''s used by the backend to create a configuration file for this
                  plugin. The key:value from this map is converted to <namespace>:<node-selectors-labels>
                  in the file. Use `clusterDefaultNodeSelector` as key to configure
                  a default node selector.'
                type: object
              serviceAccount:
                description: 'Optional: ServiceAccount contains service account related
                  settings for the user cluster''s kube-apiserver.'
                properties:
                  apiAudiences:
                    description: APIAudiences are the Identifiers of the API If this
                      is not specified, it will be set to a single element list containing
                      the issuer URL
                    items:
                      type: string
                    type: array
                  issuer:
                    description: Issuer is the identifier of the service account token
                      issuer If this is not specified, it will be set to the URL of
                      apiserver by default
                    type: string
                  tokenVolumeProjectionEnabled:
                    type: boolean
                type: object
              updateWindow:
                description: 'Optional: UpdateWindow configures automatic update systems
                  to respect a maintenance window for applying OS updates to nodes.
                  This is only respected on Flatcar nodes currently.'
                properties:
                  length:
                    description: Sets the length of the update window beginning with
                      the start time. This needs to be a valid duration as parsed
                      by Go's time.ParseDuration (https://pkg.go.dev/time#ParseDuration),
                      e.g. `2h`.
                    type: string
                  start:
                    description: Sets the start time of the update window. This can
                      be a time of day in 24h format, e.g. `22:30`, or a day of week
                      plus a time of day, for example `Mon 21:00`. Only short names
                      for week days are supported, i.e. `Mon`, `Tue`, `Wed`, `Thu`,
                      `Fri`, `Sat` and `Sun`.
                    type: string
                type: object
              useEventRateLimitAdmissionPlugin:
                description: Enables the admission plugin `EventRateLimit`. Needs
                  additional configuration via the `eventRateLimitConfig` field. This
                  plugin is considered "alpha" by Kubernetes.
                type: boolean
              usePodNodeSelectorAdmissionPlugin:
                description: Enables the admission plugin `PodNodeSelector`. Needs
                  additional configuration via the `podNodeSelectorAdmissionPluginConfig`
                  field.
                type: boolean
              usePodSecurityPolicyAdmissionPlugin:
                description: Enables the admission plugin `PodSecurityPolicy`. This
                  plugin is deprecated by Kubernetes.
                type: boolean
              version:
                description: Version defines the wanted version of the control plane.
                type: string
            required:
            - cloud
            - clusterNetwork
            - exposeStrategy
            - humanReadableName
            - pause
            - version
            type: object
          userSSHKeys:
            items:
              description: ClusterTemplateSSHKey is the object for holding SSH key.
              properties:
                id:
                  description: ID is the name of the UserSSHKey object that is supposed
                    to be assigned to any ClusterTemplateInstance created based on
                    this template.
                  type: string
                name:
                  description: Name is the human readable SSH key name.
                  type: string
              required:
              - id
              - name
              type: object
            type: array
        required:
        - credential
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
