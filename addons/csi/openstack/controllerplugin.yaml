# Copyright 2020 The Kubermatic Kubernetes Platform contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{ if .Cluster.Features.Has "externalCloudProvider" }}

{{ if eq .Cluster.CloudProviderName "openstack" }}
{{ $csiImage := "UNSUPPORTED" }}
{{ if eq .Cluster.MajorMinorVersion "1.23" }}
{{ $csiImage = "docker.io/k8scloudprovider/cinder-csi-plugin:v1.23.4"}}
{{ end }}
{{ if eq .Cluster.MajorMinorVersion "1.24" }}
{{ $csiImage = "registry.k8s.io/provider-os/cinder-csi-plugin:v1.24.6"}}
{{ end }}
{{ if eq .Cluster.MajorMinorVersion "1.25" }}
{{ $csiImage = "registry.k8s.io/provider-os/cinder-csi-plugin:v1.25.5"}}
{{ end }}
{{ if eq .Cluster.MajorMinorVersion "1.26" }}
{{ $csiImage = "registry.k8s.io/provider-os/cinder-csi-plugin:v1.26.2"}}
{{ end }}
{{ if eq .Cluster.MajorMinorVersion "1.27" }}
{{ $csiImage = "registry.k8s.io/provider-os/cinder-csi-plugin:v1.27.1"}}
{{ end }}
{{ if not (eq $csiImage "UNSUPPORTED") }}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: csi-cinder-controllerplugin
  namespace: kube-system
spec:
  replicas: 1
  strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1
  selector:
    matchLabels:
      app: csi-cinder-controllerplugin
  template:
    metadata:
      labels:
        app: csi-cinder-controllerplugin
    spec:
      serviceAccount: csi-cinder-controller-sa
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: csi-attacher
          image: '{{ Image "registry.k8s.io/sig-storage/csi-attacher:v3.4.0" }}'
          args:
            - "--csi-address=$(ADDRESS)"
            - "--timeout=3m"
            - "--leader-election=true"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-provisioner
          image: '{{ Image "registry.k8s.io/sig-storage/csi-provisioner:v3.1.0" }}'
          args:
            - "--csi-address=$(ADDRESS)"
            - "--timeout=3m"
            - "--default-fstype=ext4"
            - "--leader-election=true"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-snapshotter
          image: '{{ Image "registry.k8s.io/sig-storage/csi-snapshotter:v5.0.1" }}'
          args:
            - "--csi-address=$(ADDRESS)"
            - "--timeout=3m"
            - "--leader-election=true"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /var/lib/csi/sockets/pluginproxy/
              name: socket-dir
        - name: csi-resizer
          image: '{{ Image "registry.k8s.io/sig-storage/csi-resizer:v1.4.0" }}'
          args:
            - "--csi-address=$(ADDRESS)"
            - "--timeout=3m"
            - "--handle-volume-inuse-error=false"
            - "--leader-election=true"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: liveness-probe
          image: '{{ Image "registry.k8s.io/sig-storage/livenessprobe:v2.7.0" }}'
          args:
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - mountPath: /var/lib/csi/sockets/pluginproxy/
              name: socket-dir
        - name: cinder-csi-plugin
          image: '{{ Image $csiImage }}'
          args:
            - /bin/cinder-csi-plugin
            - "--nodeid=$(NODE_ID)"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--cloud-config=$(CLOUD_CONFIG)"
            - "--cluster=$(CLUSTER_NAME)"
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix://csi/csi.sock
            - name: CLOUD_CONFIG
              value: /etc/config/config
            - name: CLUSTER_NAME
              value: {{ .Cluster.Name }}
            - name: SSL_CERT_FILE
              value: "/etc/kubermatic/certs/ca-bundle.pem"
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 9808
              name: healthz
              protocol: TCP
          # The probe
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 60
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: cloud-config
              mountPath: /etc/config
              readOnly: true
            - mountPath: /etc/kubermatic/certs
              name: ca-bundle
              readOnly: true
      volumes:
        - name: socket-dir
          emptyDir:
        - name: cloud-config
          secret:
            secretName: cloud-config
        - name: ca-bundle
          configMap:
            name: ca-bundle

{{ if .Cluster.Features.Has "kubeSystemNetworkPolicies" }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: csi-cinder-controllerplugin
  namespace: kube-system
spec:
  podSelector:
    matchLabels:
      app: csi-cinder-controllerplugin
  policyTypes:
    - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
{{ end }}
{{ end }}
{{ end }}
{{ end }}
