# Copyright 2024 The Kubermatic Kubernetes Platform contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file was generated, DO NOT EDIT.
# Run `make` instead.

{{ if eq .Cluster.CloudProviderName "openstack" }}
{{ if .Cluster.Features.Has "externalCloudProvider" }}

{{ $version := "UNSUPPORTED" }}
{{ if eq .Cluster.MajorMinorVersion "1.27" }}
{{ $version = "v1.27.3" }}
{{ end }}
{{ if eq .Cluster.MajorMinorVersion "1.28" }}
{{ $version = "v1.28.1" }}
{{ end }}
{{ if eq .Cluster.MajorMinorVersion "1.29" }}
{{ $version = "v1.29.0" }}
{{ end }}
{{ if eq .Cluster.MajorMinorVersion "1.30" }}
{{ $version = "v1.30.0" }}
{{ end }}
{{ if eq .Cluster.MajorMinorVersion "1.31" }}
{{ $version = "v1.30.0" }}
{{ end }}

{{ if .Cluster.Features.Has "kubeSystemNetworkPolicies" }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: csi-cinder-controllerplugin
  namespace: kube-system
spec:
  podSelector:
    matchLabels:
      app: openstack-cinder-csi
      component: controllerplugin
  policyTypes:
    - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
{{ end }}
allowVolumeExpansion: true
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: csi-cinder-sc-delete
provisioner: cinder.csi.openstack.org
reclaimPolicy: Delete
---
allowVolumeExpansion: true
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: csi-cinder-sc-retain
provisioner: cinder.csi.openstack.org
reclaimPolicy: Retain
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-cinder-controller-sa
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-cinder-node-sa
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csi-attacher-role
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - patch
  - apiGroups:
      - storage.k8s.io
    resources:
      - csinodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattachments
    verbs:
      - get
      - list
      - watch
      - patch
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattachments/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - watch
      - list
      - delete
      - update
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csi-nodeplugin-role
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csi-provisioner-role
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - create
      - delete
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - csinodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshots
    verbs:
      - get
      - list
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotcontents
    verbs:
      - get
      - list
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - watch
      - list
      - delete
      - update
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csi-resizer-role
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - patch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims/status
    verbs:
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - watch
      - list
      - delete
      - update
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csi-snapshotter-role
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotcontents
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - delete
      - patch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotcontents/status
    verbs:
      - update
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - watch
      - list
      - delete
      - update
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-attacher-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csi-attacher-role
subjects:
  - kind: ServiceAccount
    name: csi-cinder-controller-sa
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-nodeplugin-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csi-nodeplugin-role
subjects:
  - kind: ServiceAccount
    name: csi-cinder-node-sa
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-provisioner-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csi-provisioner-role
subjects:
  - kind: ServiceAccount
    name: csi-cinder-controller-sa
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-resizer-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csi-resizer-role
subjects:
  - kind: ServiceAccount
    name: csi-cinder-controller-sa
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-snapshotter-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csi-snapshotter-role
subjects:
  - kind: ServiceAccount
    name: csi-cinder-controller-sa
    namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: socket-dir
  labels:
    app: openstack-cinder-csi
    chart: openstack-cinder-csi-2.30.1-alpha.1
    component: controllerplugin
    heritage: Helm
    release: openstack-cinder-csi
  name: openstack-cinder-csi-controllerplugin
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openstack-cinder-csi
      component: controllerplugin
      release: openstack-cinder-csi
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: socket-dir
      labels:
        app: openstack-cinder-csi
        chart: openstack-cinder-csi-2.30.1-alpha.1
        component: controllerplugin
        heritage: Helm
        release: openstack-cinder-csi
    spec:
      affinity: {}
      containers:
        - args:
            - -v=2
            - --csi-address=$(ADDRESS)
            - --timeout=3m
            - --leader-election=true
            - --default-fstype=ext4
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          image: '{{ Image "registry.k8s.io/sig-storage/csi-attacher:v4.4.2" }}'
          imagePullPolicy: IfNotPresent
          name: csi-attacher
          resources: {}
          securityContext: {}
          volumeMounts:
            - mountPath: /var/lib/csi/sockets/pluginproxy/
              name: socket-dir
        - args:
            - -v=2
            - --csi-address=$(ADDRESS)
            - --timeout=3m
            - --leader-election=true
            - --default-fstype=ext4
            - --feature-gates=Topology={{ .Cluster.CSI.CinderTopologyEnabled }}
            - --extra-create-metadata
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          image: '{{ Image "registry.k8s.io/sig-storage/csi-provisioner:v3.6.2" }}'
          imagePullPolicy: IfNotPresent
          name: csi-provisioner
          resources: {}
          securityContext: {}
          volumeMounts:
            - mountPath: /var/lib/csi/sockets/pluginproxy/
              name: socket-dir
        - args:
            - -v=2
            - --csi-address=$(ADDRESS)
            - --timeout=3m
            - --leader-election=true
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          image: '{{ Image "registry.k8s.io/sig-storage/csi-snapshotter:v6.3.2" }}'
          imagePullPolicy: IfNotPresent
          name: csi-snapshotter
          resources: {}
          securityContext: {}
          volumeMounts:
            - mountPath: /var/lib/csi/sockets/pluginproxy/
              name: socket-dir
        - args:
            - -v=2
            - --csi-address=$(ADDRESS)
            - --timeout=3m
            - --handle-volume-inuse-error=false
            - --leader-election=true
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          image: '{{ Image "registry.k8s.io/sig-storage/csi-resizer:v1.9.2" }}'
          imagePullPolicy: IfNotPresent
          name: csi-resizer
          resources: {}
          securityContext: {}
          volumeMounts:
            - mountPath: /var/lib/csi/sockets/pluginproxy/
              name: socket-dir
        - args:
            - -v=2
            - --csi-address=$(ADDRESS)
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          image: '{{ Image "registry.k8s.io/sig-storage/livenessprobe:v2.11.0" }}'
          imagePullPolicy: IfNotPresent
          name: liveness-probe
          resources: {}
          securityContext: {}
          volumeMounts:
            - mountPath: /var/lib/csi/sockets/pluginproxy/
              name: socket-dir
        - args:
            - /bin/cinder-csi-plugin
            - -v=2
            - --endpoint=$(CSI_ENDPOINT)
            - --cloud-config=$(CLOUD_CONFIG)
            - --cluster=$(CLUSTER_NAME)
          env:
            - name: CSI_ENDPOINT
              value: unix://csi/csi.sock
            - name: CLOUD_CONFIG
              value: /etc/kubernetes/config
            - name: CLUSTER_NAME
              value: '{{ .Cluster.Name }}'
            - name: SSL_CERT_FILE
              value: /etc/kubermatic/certs/ca-bundle.pem
          image: '{{ Image (print "registry.k8s.io/provider-os/cinder-csi-plugin:" $version) }}'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            periodSeconds: 60
            timeoutSeconds: 10
          name: cinder-csi-plugin
          ports:
            - containerPort: 9808
              name: healthz
              protocol: TCP
          resources: {}
          securityContext: {}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /etc/kubermatic/certs
              name: ca-bundle
              readOnly: true
            - mountPath: /etc/kubernetes
              name: cloud-config
              readOnly: true
      nodeSelector: {}
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: csi-cinder-controller-sa
      tolerations: []
      volumes:
        - emptyDir: null
          name: socket-dir
        - name: cloud-config
          secret:
            secretName: cloud-config-csi
        - configMap:
            name: ca-bundle
          name: ca-bundle
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: socket-dir
  labels:
    app: openstack-cinder-csi
    chart: openstack-cinder-csi-2.30.1-alpha.1
    component: nodeplugin
    heritage: Helm
    release: openstack-cinder-csi
  name: openstack-cinder-csi-nodeplugin
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: openstack-cinder-csi
      component: nodeplugin
      release: openstack-cinder-csi
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: socket-dir
      labels:
        app: openstack-cinder-csi
        chart: openstack-cinder-csi-2.30.1-alpha.1
        component: nodeplugin
        heritage: Helm
        release: openstack-cinder-csi
    spec:
      affinity: {}
      containers:
        - args:
            - -v=2
            - --csi-address=$(ADDRESS)
            - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/cinder.csi.openstack.org/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          image: '{{ Image "registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.9.2" }}'
          imagePullPolicy: IfNotPresent
          name: node-driver-registrar
          resources: {}
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /registration
              name: registration-dir
        - args:
            - -v=2
            - --csi-address=/csi/csi.sock
          image: '{{ Image "registry.k8s.io/sig-storage/livenessprobe:v2.11.0" }}'
          imagePullPolicy: IfNotPresent
          name: liveness-probe
          resources: {}
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        - args:
            - /bin/cinder-csi-plugin
            - -v=2
            - --endpoint=$(CSI_ENDPOINT)
            - --cloud-config=$(CLOUD_CONFIG)
          env:
            - name: CSI_ENDPOINT
              value: unix://csi/csi.sock
            - name: CLOUD_CONFIG
              value: /etc/kubernetes/config
            - name: SSL_CERT_FILE
              value: /etc/kubermatic/certs/ca-bundle.pem
          image: '{{ Image (print "registry.k8s.io/provider-os/cinder-csi-plugin:" $version) }}'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            periodSeconds: 60
            timeoutSeconds: 10
          name: cinder-csi-plugin
          ports:
            - containerPort: 9808
              name: healthz
              protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
                - SYS_ADMIN
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /var/lib/kubelet
              mountPropagation: Bidirectional
              name: kubelet-dir
            - mountPath: /dev
              mountPropagation: HostToContainer
              name: pods-probe-dir
            - mountPath: /etc/kubermatic/certs
              name: ca-bundle
              readOnly: true
            - mountPath: /etc/kubernetes
              name: cloud-config
              readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      nodeSelector: {}
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: csi-cinder-node-sa
      tolerations:
        - operator: Exists
      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/cinder.csi.openstack.org
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: /dev
            type: Directory
          name: pods-probe-dir
        - name: cloud-config
          secret:
            secretName: cloud-config-csi
        - configMap:
            name: ca-bundle
          name: ca-bundle
---
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: cinder.csi.openstack.org
spec:
  attachRequired: true
  podInfoOnMount: true
  volumeLifecycleModes:
    - Persistent
    - Ephemeral
{{ end }}
{{ end }}
