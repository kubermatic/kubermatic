# Copyright 2021 The Kubermatic Kubernetes Platform contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is based on
# https://github.com/hetznercloud/csi-driver/blob/v2.4.0/deploy/kubernetes/hcloud-csi.yml
# and is applicable for k8s 1.23+ clusters.
# modifications:
# - seccomp profile in DaemonSet hcloud-csi-node
# - seccomp profile in Deployment hcloud-csi-controller
# - add "cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: socket-dir" annotation to template

{{ if .Cluster.Features.Has "externalCloudProvider" }}
{{ if eq .Cluster.CloudProviderName "hetzner" }}
apiVersion: v1
kind: Secret
metadata:
  name: hcloud-csi
  namespace: kube-system
data:
  token: {{ .Credentials.Hetzner.Token | b64enc }}
---
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: csi.hetzner.cloud
spec:
  attachRequired: true
  fsGroupPolicy: File
  podInfoOnMount: true
  volumeLifecycleModes:
    - Persistent
---
# storage class is defined in the default-storage-class addon
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hcloud-csi
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hcloud-csi
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - csi.storage.k8s.io
    resources:
      - csinodeinfos
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - csinodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattachments
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattachments/status
    verbs:
      - patch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
      - persistentvolumeclaims/status
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshots
    verbs:
      - get
      - list
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotcontents
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hcloud-csi
subjects:
  - kind: ServiceAccount
    name: hcloud-csi
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: hcloud-csi
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hcloud-csi-controller
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: hcloud-csi-controller
  replicas: 1
  template:
    metadata:
      labels:
        app: hcloud-csi-controller
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: socket-dir
    spec:
      serviceAccount: hcloud-csi
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: csi-attacher
          image: '{{ Image "registry.k8s.io/sig-storage/csi-attacher:v4.1.0" }}'
          args:
            - --default-fstype=ext4
          volumeMounts:
            - name: socket-dir
              mountPath: /run/csi
        - name: csi-resizer
          image: '{{ Image "registry.k8s.io/sig-storage/csi-resizer:v1.7.0" }}'
          volumeMounts:
            - name: socket-dir
              mountPath: /run/csi
        - name: csi-provisioner
          image: '{{ Image "registry.k8s.io/sig-storage/csi-provisioner:v3.4.0" }}'
          args:
            - --feature-gates=Topology=true
            - --default-fstype=ext4
          volumeMounts:
            - name: socket-dir
              mountPath: /run/csi
        - name: hcloud-csi-driver
          image: '{{ Image "hetznercloud/hcloud-csi-driver:v2.4.0" }}'
          command:
            - /bin/hcloud-csi-driver-controller
          env:
            - name: CSI_ENDPOINT
              value: unix:///run/csi/socket
            - name: METRICS_ENDPOINT
              value: 0.0.0.0:9189
            - name: ENABLE_METRICS
              value: "true"
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: HCLOUD_TOKEN
              valueFrom:
                secretKeyRef:
                  name: hcloud-csi
                  key: token
          ports:
            - containerPort: 9189
              name: metrics
            - name: healthz
              containerPort: 9808
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
          volumeMounts:
            - name: socket-dir
              mountPath: /run/csi
        - name: liveness-probe
          image: '{{ Image "registry.k8s.io/sig-storage/livenessprobe:v2.9.0" }}'
          volumeMounts:
            - mountPath: /run/csi
              name: socket-dir
      volumes:
        - name: socket-dir
          emptyDir: {}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: hcloud-csi-node
  namespace: kube-system
  labels:
    app: hcloud-csi
spec:
  selector:
    matchLabels:
      app: hcloud-csi
  template:
    metadata:
      labels:
        app: hcloud-csi
    spec:
      tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "instance.hetzner.cloud/is-root-server"
                    operator: NotIn
                    values:
                      - "true"
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: csi-node-driver-registrar
          image: '{{ Image "registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.7.0" }}'
          args:
            - --kubelet-registration-path=/var/lib/kubelet/plugins/csi.hetzner.cloud/socket
          volumeMounts:
            - name: plugin-dir
              mountPath: /run/csi
            - name: registration-dir
              mountPath: /registration
        - name: hcloud-csi-driver
          image: '{{ Image "hetznercloud/hcloud-csi-driver:v2.4.0" }}'
          command:
            - /bin/hcloud-csi-driver-node
          env:
            - name: CSI_ENDPOINT
              value: unix:///run/csi/socket
            - name: METRICS_ENDPOINT
              value: 0.0.0.0:9189
            - name: ENABLE_METRICS
              value: "true"
          securityContext:
            privileged: true
          ports:
            - containerPort: 9189
              name: metrics
            - name: healthz
              containerPort: 9808
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            periodSeconds: 2
            timeoutSeconds: 3
          volumeMounts:
            - mountPath: /var/lib/kubelet
              mountPropagation: Bidirectional
              name: kubelet-dir
            - mountPath: /run/csi
              name: plugin-dir
            - mountPath: /dev
              name: device-dir
        - name: liveness-probe
          image: '{{ Image "registry.k8s.io/sig-storage/livenessprobe:v2.9.0" }}'
          volumeMounts:
            - mountPath: /run/csi
              name: plugin-dir
      volumes:
        - name: kubelet-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi.hetzner.cloud/
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
        - name: device-dir
          hostPath:
            path: /dev
            type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: hcloud-csi-controller-metrics
  namespace: kube-system
  labels:
    app: hcloud-csi
spec:
  selector:
    app: hcloud-csi-controller
  ports:
    - port: 9189
      name: metrics
      targetPort: metrics
---
apiVersion: v1
kind: Service
metadata:
  name: hcloud-csi-node-metrics
  namespace: kube-system
  labels:
    app: hcloud-csi
spec:
  selector:
    app: hcloud-csi
  ports:
    - port: 9189
      name: metrics
      targetPort: metrics

{{ if .Cluster.Features.Has "kubeSystemNetworkPolicies" }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: hcloud-csi
  namespace: kube-system
spec:
  podSelector:
    matchLabels:
      app: hcloud-csi
  policyTypes:
    - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
{{ end }}
{{ end }}
{{ end }}
