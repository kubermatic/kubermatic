# Copyright 2022 The Kubermatic Kubernetes Platform contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Sourced from:
# - https://github.com/vmware/cloud-director-named-disk-csi-driver/blob/1.3.2/manifests/csi-controller.yaml
#
# Changes:
# - image source includes registry templating
# - add a securityContext

{{ if eq .Cluster.CloudProviderName "vmwareclouddirector" }}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-vcd-controller-sa
  namespace: kube-system

---
# external attacher
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-attacher-role
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-attacher-binding
subjects:
  - kind: ServiceAccount
    name: csi-vcd-controller-sa
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: csi-attacher-role
  apiGroup: rbac.authorization.k8s.io

---
# external Provisioner
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-provisioner-role
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-provisioner-binding
subjects:
  - kind: ServiceAccount
    name: csi-vcd-controller-sa
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: csi-provisioner-role
  apiGroup: rbac.authorization.k8s.io
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: csi-vcd-controllerplugin
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: csi-vcd-controllerplugin
  template:
    metadata:
      labels:
        app: csi-vcd-controllerplugin
    spec:
      serviceAccount: csi-vcd-controller-sa
      dnsPolicy: Default
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: csi-attacher
          image: {{ Image "registry.k8s.io/sig-storage/csi-attacher:v3.2.1" }}
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=$(ADDRESS)
            - --timeout=180s
            - --v=5
          env:
            - name: ADDRESS
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-provisioner
          image: {{ Image "registry.k8s.io/sig-storage/csi-provisioner:v2.2.2" }}
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=$(ADDRESS)
            - --default-fstype=ext4
            - --timeout=300s
            - --v=5
          env:
            - name: ADDRESS
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: vcd-csi-plugin
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image:  {{ Image "projects.registry.vmware.com/vmware-cloud-director/cloud-director-named-disk-csi-driver:1.3.2" }}
          imagePullPolicy: IfNotPresent
          command:
            - /opt/vcloud/bin/cloud-director-named-disk-csi-driver
            - --cloud-config=/etc/kubernetes/vcloud/vcloud-csi-config.yaml
            - --endpoint=$(CSI_ENDPOINT)
            - --upgrade-rde
            - --v=5
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
            - name: pods-probe-dir
              mountPath: /dev
              mountPropagation: HostToContainer
            - name: pv-dir
              mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi/pv
              mountPropagation: "Bidirectional"
            - name: vcloud-csi-config-volume
              mountPath: /etc/kubernetes/vcloud
            - name: vcloud-basic-auth-volume
              mountPath: /etc/kubernetes/vcloud/basic-auth
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
        - key: node-role.kubernetes.io/control-plane
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      volumes:
        - name: socket-dir
          emptyDir: {}
        - name: pods-probe-dir
          hostPath:
            path: /dev
            type: Directory
        - name: pv-dir
          hostPath:
            path: /var/lib/kubelet/plugins/kubernetes.io/csi/pv
            type: DirectoryOrCreate
        - name: vcloud-csi-config-volume
          configMap:
            name: vcloud-csi-configmap
        - name: vcloud-basic-auth-volume
          secret:
            secretName: vcloud-basic-auth

{{ end }}
