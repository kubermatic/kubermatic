# Copyright 2022 The Kubermatic Kubernetes Platform contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file was generated by `make cluster-autoscaler` and then edited a bit to make
# the image tag in the Deployment dynamic.

{{ $version := "UNSUPPORTED" }}
{{ if eq .Cluster.MajorMinorVersion "1.25" }}
{{ $version = "v1.25.3" }}
{{ end }}
{{ if eq .Cluster.MajorMinorVersion "1.26" }}
{{ $version = "v1.26.6" }}
{{ end }}
{{ if eq .Cluster.MajorMinorVersion "1.27" }}
{{ $version = "v1.27.5" }}
{{ end }}
{{ if eq .Cluster.MajorMinorVersion "1.28" }}
{{ $version = "v1.28.2" }}
{{ end }}
{{ if eq .Cluster.MajorMinorVersion "1.29" }}
{{ $version = "v1.29.0" }}
{{ end }}

{{ if not (eq $version "UNSUPPORTED") }}
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cluster-autoscaler-management
rules:
  - apiGroups:
      - cluster.k8s.io
    resources:
      - machinedeployments
      - machinedeployments/scale
      - machines
      - machinesets
    verbs:
      - get
      - list
      - update
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cluster-autoscaler-management
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-autoscaler-management
subjects:
   - kind: ServiceAccount
     name: cluster-autoscaler-clusterapi-cluster-autoscaler
     namespace: kube-system
---
---
# Source: cluster-autoscaler/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/instance: "cluster-autoscaler"
    app.kubernetes.io/name: "clusterapi-cluster-autoscaler"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "1.28.2"
    helm.sh/chart: "cluster-autoscaler-9.34.1"
  name: cluster-autoscaler-clusterapi-cluster-autoscaler
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: "cluster-autoscaler"
      app.kubernetes.io/name: "clusterapi-cluster-autoscaler"

  maxUnavailable: 1
---
# Source: cluster-autoscaler/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: "cluster-autoscaler"
    app.kubernetes.io/name: "clusterapi-cluster-autoscaler"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "1.28.2"
    helm.sh/chart: "cluster-autoscaler-9.34.1"
  name: cluster-autoscaler-clusterapi-cluster-autoscaler
  namespace: kube-system
automountServiceAccountToken: true
---
# Source: cluster-autoscaler/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: "cluster-autoscaler"
    app.kubernetes.io/name: "clusterapi-cluster-autoscaler"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "1.28.2"
    helm.sh/chart: "cluster-autoscaler-9.34.1"
  name: cluster-autoscaler-clusterapi-cluster-autoscaler
rules:
  - apiGroups:
      - ""
    resources:
      - events
      - endpoints
    verbs:
      - create
      - patch
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
      - ""
    resources:
      - pods/status
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - endpoints
    resourceNames:
      - cluster-autoscaler
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
    - watch
    - list
    - create
    - delete
    - get
    - update
  - apiGroups:
    - ""
    resources:
      - namespaces
      - pods
      - services
      - replicationcontrollers
      - persistentvolumeclaims
      - persistentvolumes
    verbs:
      - watch
      - list
      - get
  - apiGroups:
    - batch
    resources:
      - jobs
      - cronjobs
    verbs:
      - watch
      - list
      - get
  - apiGroups:
    - batch
    - extensions
    resources:
    - jobs
    verbs:
    - get
    - list
    - patch
    - watch
  - apiGroups:
      - extensions
    resources:
      - replicasets
      - daemonsets
    verbs:
      - watch
      - list
      - get
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - watch
      - list
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - replicasets
    - statefulsets
    verbs:
    - watch
    - list
    - get
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    - csinodes
    - csidrivers
    - csistoragecapacities
    verbs:
    - watch
    - list
    - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - list
      - watch
      - get
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - cluster-autoscaler
    resources:
    - leases
    verbs:
    - get
    - update
  - apiGroups:
    - cluster.x-k8s.io
    resources:
    - machinedeployments
    - machinepools
    - machines
    - machinesets
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - cluster.x-k8s.io
    resources:
    - machinedeployments/scale
    - machinepools/scale
    verbs:
    - get
    - patch
    - update
---
# Source: cluster-autoscaler/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: "cluster-autoscaler"
    app.kubernetes.io/name: "clusterapi-cluster-autoscaler"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "1.28.2"
    helm.sh/chart: "cluster-autoscaler-9.34.1"
  name: cluster-autoscaler-clusterapi-cluster-autoscaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-autoscaler-clusterapi-cluster-autoscaler
subjects:
  - kind: ServiceAccount
    name: cluster-autoscaler-clusterapi-cluster-autoscaler
    namespace: kube-system
---
# Source: cluster-autoscaler/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: "cluster-autoscaler"
    app.kubernetes.io/name: "clusterapi-cluster-autoscaler"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "1.28.2"
    helm.sh/chart: "cluster-autoscaler-9.34.1"
  name: cluster-autoscaler-clusterapi-cluster-autoscaler
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - cluster-autoscaler-status
    verbs:
      - delete
      - get
      - update
---
# Source: cluster-autoscaler/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: "cluster-autoscaler"
    app.kubernetes.io/name: "clusterapi-cluster-autoscaler"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "1.28.2"
    helm.sh/chart: "cluster-autoscaler-9.34.1"
  name: cluster-autoscaler-clusterapi-cluster-autoscaler
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cluster-autoscaler-clusterapi-cluster-autoscaler
subjects:
  - kind: ServiceAccount
    name: cluster-autoscaler-clusterapi-cluster-autoscaler
    namespace: kube-system
---
# Source: cluster-autoscaler/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: "cluster-autoscaler"
    app.kubernetes.io/name: "clusterapi-cluster-autoscaler"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "1.28.2"
    helm.sh/chart: "cluster-autoscaler-9.34.1"
  name: cluster-autoscaler-clusterapi-cluster-autoscaler
  namespace: kube-system
spec:
  ports:
    - port: 8085
      protocol: TCP
      targetPort: 8085
      name: http
  selector:
    app.kubernetes.io/instance: "cluster-autoscaler"
    app.kubernetes.io/name: "clusterapi-cluster-autoscaler"
  type: "ClusterIP"
---
# Source: cluster-autoscaler/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {}
  labels:
    app.kubernetes.io/instance: "cluster-autoscaler"
    app.kubernetes.io/name: "clusterapi-cluster-autoscaler"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "1.28.2"
    helm.sh/chart: "cluster-autoscaler-9.34.1"
  name: cluster-autoscaler-clusterapi-cluster-autoscaler
  namespace: kube-system
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: "cluster-autoscaler"
      app.kubernetes.io/name: "clusterapi-cluster-autoscaler"
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: "cluster-autoscaler"
        app.kubernetes.io/name: "clusterapi-cluster-autoscaler"
    spec:
      priorityClassName: "system-cluster-critical"
      dnsPolicy: "ClusterFirst"
      containers:
        - name: clusterapi-cluster-autoscaler
          image: '{{ Image (print "registry.k8s.io/autoscaling/cluster-autoscaler:" $version) }}'
          imagePullPolicy: "IfNotPresent"
          command:
            - ./cluster-autoscaler
            - --cloud-provider=clusterapi
            - --namespace=kube-system
            - --node-group-auto-discovery=clusterapi:clusterName={{ .Cluster.Name }}
            - --logtostderr=true
            - --stderrthreshold=info
            - --v=4
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: CAPI_GROUP
              value: "cluster.k8s.io"
          livenessProbe:
            httpGet:
              path: /health-check
              port: 8085
          ports:
            - containerPort: 8085
          resources:
            {}
      serviceAccountName: cluster-autoscaler-clusterapi-cluster-autoscaler
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      securityContext:
        seccompProfile:
          type: RuntimeDefault
{{ end }}
