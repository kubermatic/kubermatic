# Copyright 2022 The Kubermatic Kubernetes Platform contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# This file has been generated by `make`, DO NOT EDIT.
#

{{ if .Cluster.Features.Has "externalCloudProvider" }}
{{ if eq .Cluster.CloudProviderName "azure" }}

{{ $version := "UNSUPPORTED" }}
{{ if eq .Cluster.MajorMinorVersion "1.25" }}{{ $version = "v1.25.23" }}{{ end }}
{{ if eq .Cluster.MajorMinorVersion "1.26" }}{{ $version = "v1.26.18" }}{{ end }}
{{ if eq .Cluster.MajorMinorVersion "1.27" }}{{ $version = "v1.27.12" }}{{ end }}
{{ if eq .Cluster.MajorMinorVersion "1.28" }}{{ $version = "v1.28.4" }}{{ end }}

{{ if not (eq $version "UNSUPPORTED") }}
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: cloud-node-manager
    kubernetes.io/cluster-service: "true"
  name: cloud-node-manager
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: cloud-node-manager
    kubernetes.io/cluster-service: "true"
  name: cloud-node-manager
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - watch
      - list
      - get
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: cloud-node-manager
    kubernetes.io/cluster-service: "true"
  name: cloud-node-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cloud-node-manager
subjects:
  - kind: ServiceAccount
    name: cloud-node-manager
    namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    component: cloud-node-manager
    kubernetes.io/cluster-service: "true"
  name: cloud-node-manager
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cloud-node-manager
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
      labels:
        k8s-app: cloud-node-manager
    spec:
      containers:
        - command:
            - cloud-node-manager
            - --node-name=$(NODE_NAME)
            - --wait-routes=true
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          image: '{{ Image (print "mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:" $version) }}'
          imagePullPolicy: IfNotPresent
          name: cloud-node-manager
          resources:
            limits:
              cpu: 2000m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 50Mi
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: cloud-node-manager
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: "true"
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
{{ end }}
{{ end }}
{{ end }}
