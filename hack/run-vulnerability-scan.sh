#!/usr/bin/env bash

# Copyright 2020 The Kubermatic Kubernetes Platform contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

### Run vurnability scanning on images, repos of filesystems
###
###     Usage: run-image-scan.sh [-i or -f or -r]
###
###     -i for image scanning, -f for filesystem scanning and -r for repo scanning

set -euo pipefail

cd $(dirname $0)/..
source hack/lib.sh

success_images=()
failed_images=()

usage() {
cat << EOF
Usage:
  $(basename $0) -i image1,image2
  $(basename $0) -f fs1,fs2 # WIP
  $(basename $0) -r repo1,repo2 # WIP
Example:
  $(basename $0) -i quay.io/kubermatic/kubermatic:v2.21.1,quay.io/kubermatic/kubermatic:v2.21.0
  $(basename $0) -f ./ # WIP
  $(basename $0) -r https://github.com/kubermatic/kubeone # WIP
EOF
  exit 0
}

if [ "$#" -lt 1 ]; then
  echodate "You need to provide a valid option"
  usage
elif [ "${1}" == "--help" ]; then
  usage
fi

image_scan() {
  for i in "${image_array[@]}"; do
    EXIT_CODE=0
    trivy image --exit-code 1 --no-progress ${i} || EXIT_CODE=1
    if [[ EXIT_CODE -eq 1 ]]; then
      failed_images[${#failed_images[@]}]=${i}
    else
      success_images[${#failed_images[@]}]=${i}
    fi
  done
  if [ "${#failed_images[@]}" -gt 0 ]; then
    echodate "Vurnabilities found on the images ${failed_images[@]}"
  else
    echodate "No vurnabilitiies found on the images ${success_images[@]}"
  fi
}

fs_scan() {
echodate "Filesystem Scan is not yet implemented"
}

repo_scan() {
echodate "Repository Scan is not yet implemented"
}

while getopts ":i:f:r:" flag
do
  case "$flag" in
    i) set -f
       IFS=,
       image_array=($OPTARG)
       image_scan image_array;;
    f) # This is not yet completed
       set -f
       IFS=,
       fs_array=($OPTARG)
       fs_scan fs_array;;
    r) # This is not yet completed
       set -f
       IFS=,
       repo_array=($OPTARG)
       repo_scan repo_array;;
    :) echodate "Option -$OPTARG has no argument"
       usage;;
    \?)echodate "-$OPTARG is an invalid option"
       usage;;
  esac
done

shift $(($OPTIND - 1))
if [ "$#" -gt 0 ]; then
echodate "${@} is not a valid option"
usage
fi
