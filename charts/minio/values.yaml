# Copyright 2020 The Kubermatic Kubernetes Platform contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

minio:
  # list of image pull secret references, e.g.
  # imagePullSecrets:
  #   - name: docker-io-pull-secret
  #   - name: quay-io-pull-secret
  imagePullSecrets: []

  image:
    repository: quay.io/minio/minio
    tag: RELEASE.2023-05-04T21-44-30Z
  storeSize: 100Gi

  # The is required to enable the BackupRestore controller so it can backup
  # and restore from the local minio deployment. The TLS certificates should be
  # signed by the global KKP CA.
  # If you are enabling it, make sure to enable prometheus scraping for minio as well.
  certificateSecret: "" # tls secret used by minio.

  # Management Console for Minio Access
  console:
    # configure a port enables the console
    port: 80

  # These settings are required. Keys must be alphanumeric.
  credentials:
    accessKey: "" # 32 byte long
    secretKey: "" # 64 byte long

    # When set to true, a Secret will be created in the given namespace.
    # Kubermatic requires an "kubermatic-s3-credentials" Secret in the kube-system
    # namespace to perform usercluster etcd snapshots, _if_ the default
    # backup containers are used (see KubermaticConfiguration).
    # Otherwise, this can be disabled for example by setting
    # `--set "minio.credentials.secret=null"` when running Helm.
    secret:
      name: kubermatic-s3-credentials
      namespace: kube-system

  flags:
    # Set to true to enable Minio's strict S3 compatibility mode.
    # See https://github.com/minio/minio/pull/7609 for more information.
    compat: false

    # hide sensitive information from logging
    anonymous: false

  # Optional: Expose Minio external
  ingress:
    # configure a host name enables the ingress deployment
    server:
      host: "minio.kkp.example.com"
    console:
      host: "minio-console.kkp.example.com"
    # if set to "non-existent", no Ingress resource will be created
    class: "non-existent"

  # the cert-manager Issuer (or ClusterIssuer) responsible for managing the certificates
  certIssuer: null
  # If you want to deploy a certificate using cert-manager
  # uncomment the next lines and remove certIssuer configuration above.
  # certIssuer:
  #   name: letsencrypt-prod
  #   kind: ClusterIssuer

  backup:
    enabled: true
    image:
      repository: quay.io/kubermatic/util
      tag: 2.5.0

  # If your cluster does not have a default storage class,
  # you can specify the class to use for Minio. Note that
  # you cannot change this later on without purging the
  # chart and losing data.
  #storageClass: hdd

  resources:
    minio:
      requests:
        cpu: 100m
        memory: 32Mi
      limits:
        cpu: 1
        memory: 512Mi
    backup:
      requests:
        cpu: 50m
        memory: 32Mi
      limits:
        cpu: 1
        memory: 1500Mi

  nodeSelector: {}
  affinity: {}
  tolerations: []
