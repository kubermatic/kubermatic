---
# Source: node-exporter/charts/node-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-exporter
  namespace: default
  labels:
    helm.sh/chart: node-exporter-4.44.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: node-exporter
    app.kubernetes.io/name: node-exporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.0"
automountServiceAccountToken: false
---
# Source: node-exporter/charts/node-exporter/templates/rbac-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: node-exporter-rbac-config
  namespace: default
data:
  config-file.yaml: |+
    authorization:
      resourceAttributes:
        namespace: default
        apiVersion: v1
        resource: services
        subresource: node-exporter
        name: node-exporter
---
# Source: node-exporter/charts/node-exporter/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: node-exporter
  labels:
    helm.sh/chart: node-exporter-4.44.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: node-exporter
    app.kubernetes.io/name: node-exporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.0"
rules:
  - apiGroups: [ "authentication.k8s.io" ]
    resources:
      - tokenreviews
    verbs: [ "create" ]
  - apiGroups: [ "authorization.k8s.io" ]
    resources:
      - subjectaccessreviews
    verbs: [ "create" ]
---
# Source: node-exporter/charts/node-exporter/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: node-exporter-4.44.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: node-exporter
    app.kubernetes.io/name: node-exporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.0"
  name: node-exporter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: node-exporter
subjects:
- kind: ServiceAccount
  name: node-exporter
  namespace: default
---
# Source: node-exporter/charts/node-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: node-exporter
  namespace: default
  labels:
    helm.sh/chart: node-exporter-4.44.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: node-exporter
    app.kubernetes.io/name: node-exporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.0"
  annotations:
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  clusterIP: "None"
  ports:
    - port: 9100
      targetPort: 9100
      protocol: TCP
      name: https
  selector:
    app.kubernetes.io/name: node-exporter
    app.kubernetes.io/instance: release-name
---
# Source: node-exporter/charts/node-exporter/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-exporter
  namespace: default
  labels:
    helm.sh/chart: node-exporter-4.44.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: node-exporter
    app.kubernetes.io/name: node-exporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.0"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: node-exporter
      app.kubernetes.io/instance: release-name
  revisionHistoryLimit: 10
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "9100"
        prometheus.io/scrape: "true"
      labels:
        helm.sh/chart: node-exporter-4.44.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: metrics
        app.kubernetes.io/part-of: node-exporter
        app.kubernetes.io/name: node-exporter
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.9.0"
    spec:
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: node-exporter
      containers:
        - name: node-exporter
          image: quay.io/prometheus/node-exporter:v1.9.0
          imagePullPolicy: IfNotPresent
          args:
            - --path.procfs=/host/proc
            - --path.sysfs=/host/sys
            - --path.rootfs=/host/root
            - --path.udev.data=/host/root/run/udev/data
            - --web.listen-address=[$(HOST_IP)]:8100
          securityContext:
            readOnlyRootFilesystem: true
          env:
            - name: HOST_IP
              value: 127.0.0.1
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              path: /
              port: 8100
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              path: /
              port: 8100
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 250m
              memory: 48Mi
            requests:
              cpu: 50m
              memory: 24Mi
          volumeMounts:
            - name: proc
              mountPath: /host/proc
              readOnly:  true
            - name: sys
              mountPath: /host/sys
              readOnly: true
            - name: root
              mountPath: /host/root
              mountPropagation: HostToContainer
              readOnly: true
        - name: kube-rbac-proxy
          args:
            - --secure-listen-address=:9100
            - --upstream=http://127.0.0.1:8100/
            - --proxy-endpoints-port=8888
            - --config-file=/etc/kube-rbac-proxy-config/config-file.yaml
          volumeMounts:
            - name: kube-rbac-proxy-config
              mountPath: /etc/kube-rbac-proxy-config
          imagePullPolicy: IfNotPresent
          image: "quay.io/brancz/kube-rbac-proxy:v0.18.2"
          ports:
            - containerPort: 9100
              name: https
              hostPort: 9100
            - containerPort: 8888
              name: "http-healthz"
          readinessProbe:
            httpGet:
              scheme: HTTPS
              port: 8888
              path: healthz
            initialDelaySeconds: 5
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 48Mi
            requests:
              cpu: 50m
              memory: 24Mi
      hostNetwork: true
      hostPID: true
      hostIPC: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: eks.amazonaws.com/compute-type
                operator: NotIn
                values:
                - fargate
              - key: type
                operator: NotIn
                values:
                - virtual-kubelet
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
      volumes:
        - name: proc
          hostPath:
            path: /proc
        - name: sys
          hostPath:
            path: /sys
        - name: root
          hostPath:
            path: /
        - name: kube-rbac-proxy-config
          configMap:
            name: node-exporter-rbac-config
