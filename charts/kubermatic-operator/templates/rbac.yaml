# Copyright 2020 The Kubermatic Kubernetes Platform contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubermatic-operator
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: kubermatic-operator
rules:
  # read-only access to KKP resources
  - apiGroups:
      - kubermatic.k8c.io
    resources:
      - kubermaticconfigurations
      - secrets
      - seeds
    verbs:
      - get
      - list

  # allow the operator to manage applications in its own namespace
  - apiGroups: [""]
    resources: [configmaps, secrets, serviceaccounts, services]
    verbs: [get, list, update, delete]

  - apiGroups: [apps]
    resources: [deployments]
    verbs: [get, list, update, delete]

  - apiGroups: [rbac.authorization.k8s.io]
    resources: [roles, rolebindings]
    verbs: [get, list, update, delete]

  - apiGroups: [networking.k8s.io]
    resources: [ingresses]
    verbs: [get, list, update, delete]

  - apiGroups: [policy]
    resources: [poddisruptionbudgets]
    verbs: [get, list, update, delete]

  # allow the operator to manage the status subresource
  - apiGroups:
      - kubermatic.k8c.io
    resources:
      - kubermaticconfigurations/status
      - seeds/status
    verbs:
      - update
      - patch

  # allow leaderelection
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
      - patch
      - delete

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubermatic-operator
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: kubermatic-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubermatic-operator
subjects:
- kind: ServiceAccount
  name: kubermatic-operator

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubermatic-operator-{{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: kubermatic-operator
rules:
  # allow the operator to manage the labels on its own namespace
  - apiGroups: [""]
    resources: [namespaces]
    resourceNames: [{{ .Release.Namespace }}]
    verbs: [get, list, update, patch]

  # manage cluster-global resources related to KKP
  - apiGroups: [rbac.authorization.k8s.io]
    resources: [clusterroles, clusterrolebindings]
    verbs: [get, list, update, delete]

  - apiGroups: [admissionregistration.k8s.io]
    resources: [validatingwebhookconfigurations, mutatingwebhookconfigurations]
    verbs: [get, list, update, delete]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubermatic-operator-{{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: kubermatic-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubermatic-operator-{{ .Release.Namespace }}
subjects:
- kind: ServiceAccount
  name: kubermatic-operator
  namespace: '{{ .Release.Namespace }}'
