# Copyright 2020 The Kubermatic Kubernetes Platform contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

dex:
  image:
    repository: "ghcr.io/dexidp/dex"
    tag: "v2.36.0"
  # list of image pull secret references, e.g.
  # imagePullSecrets:
  #   - name: gchr-io-pull-secret
  imagePullSecrets: []
  replicas: 2
  # this options allows setting custom envvars in the dex container
  # this list is directly handed to the container spec
  env:
    - name: KUBERNETES_POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
  #  - name: HTTP_PROXY
  #    value: "http://USER:PASSWORD@IPADDR:PORT"
  #  - name: HTTPS_PROXY
  #    valueFrom:
  #     secretKeyRef:
  #       key: HTTPS_PROXY
  #       name: http-proxy-secret
  ingress:
    # this option is required
    host: ""
    path: "/dex"
    # this option is only used for testing and should not be
    # changed to anything unencrypted in production setups
    scheme: "https"
    # if set to "non-existent", no Ingress resource will be created
    class: "nginx"
  expiry:
    signingKeys: "6h"
    idTokens: "24h"
  # frontend:
  #   issuer: dex

  #  connectors:
  #  - type: github
  #    id: github
  #    name: GitHub
  #    config:
  #      clientID: some-client-id
  #      clientSecret: some-client-secret
  #      redirectURI: https://kkp.example.com/dex/callback
  #      orgs:
  #      - name: kubermatic
  #
  #  clients:
  #  - id: kubermatic
  #    name: Kubermatic
  #    secret: very-secret
  #    RedirectURIs:
  #    - http://localhost:8000
  #    - https://kkp.example.com
  #    - http://localhost:8000/projects
  #    - https://kkp.example.com/projects
  #
  #  staticPasswords:
  #  - email: "admin@example.com"
  #    # bcrypt hash of the string "password"
  #    hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
  #    username: "admin"
  #    userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
  resources:
    requests:
      cpu: 200m
      memory: 32Mi
    limits:
      cpu: 300m
      memory: 128Mi

  nodeSelector: {}
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app: dex
            topologyKey: kubernetes.io/hostname
          weight: 10
  tolerations: []

  # mount additional volumes into the dex Pod to provide data from outside the chart
  # (for example a service account file for Google provider group support).
  extraVolumes: []
  extraVolumeMounts: []

  # the cert-manager Issuer (or ClusterIssuer) responsible for managing the certificates
  # If you want to deploy your own certificate without relying on cert-manager
  # uncomment the next line and remove subsequent certIssuer configuration.
  # certIssuer: null
  certIssuer:
    name: letsencrypt-prod
    kind: ClusterIssuer

  # Theme contains the Dex theme assets converted to string and base64 encoded.
  # By default, the assets from `/theme` directory are used.
  theme: {}
  #   favicon.png: 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
