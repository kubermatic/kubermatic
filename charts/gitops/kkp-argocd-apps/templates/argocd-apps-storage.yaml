# Copyright 2024 The Kubermatic Kubernetes Platform contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{ if .Values.minio.enable }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: minio
  namespace: argocd
spec:
  project: default
  sources:
  - repoURL: '{{ .Values.kkpRepoURL }}'
    path: {{ template "kkp.chart.pathprefix" . }}/charts/minio
    targetRevision: {{ .Values.kkpVersion }}
    helm:
      valueFiles:
        - values.yaml
        - $values/{{ template "argo-cd-apps.env-specific-values-file.path" . }}
        - $values/{{ template "argo-cd-apps.seed-override-values-file.path" . }}
  # This is your private repo where you have stored the values.yaml customizations which you used to provide to KKP installer. 
  - repoURL: '{{ .Values.repoURL }}'
    targetRevision: {{ template "git-tag-version" . }}
    path: {{ .Values.valuesPathPrefix }}
    ref: values
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: minio
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
  {{- if .Values.minio.autoSync }}
    automated: {}
  {{ end }}

---
# create required buckets as needed
---
apiVersion: v1
kind: Namespace
metadata:
  name: minio

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: minio-bucket-user-create-script
  namespace: minio
data:
  minio-create.sh: |
    #! /bin/bash
    set -uo pipefail
    # set -x
    max_retry=60 # wait for 1 hour for minio to become available
    counter=0
    until :> /dev/tcp/minio.minio.svc.cluster.local/9000
    do
      sleep 60
      [[ counter -eq $max_retry ]] && echo "Failed! Maximum retries reached!" && exit 2
      ((counter++))
      echo "Minio not available. Trying again. Try #$counter"
    done
    set -e
    mc config host add minio http://minio.minio.svc.cluster.local:9000 "$MINIO_ACCESS_KEY" "$MINIO_SECRET_KEY"
    mc mb --ignore-existing minio/usercluster-etcd-backups
    mc mb --ignore-existing minio/metering-{{ .Values.seed }}-seed
    # mc admin user add minio XX YY
    # mc admin policy attach minio readwrite --user XX
{{ if .Values.velero.enable }}
    mc mb --ignore-existing minio/velero-backup-{{ .Values.environment }}
    # mc admin user add minio AA BB
    # mc admin policy attach minio readwrite --user AA
{{ end }}

---
apiVersion: batch/v1
kind: Job
metadata:
  name: create-minio-buckets-users
  namespace: minio
spec:
  backoffLimit: 2
  template:
    spec:
      containers:
        - name: mc
          image: quay.io/minio/mc
          command:
            - /bin/sh
            - -c
            - /script/minio-create.sh
          volumeMounts:
            - name: minio-script
              mountPath: "/script"
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio
                  key: accessKey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio
                  key: secretKey
      volumes:
        - name: minio-script
          configMap:
            name: minio-bucket-user-create-script
            defaultMode: 0500
      restartPolicy: Never


{{ end }}
