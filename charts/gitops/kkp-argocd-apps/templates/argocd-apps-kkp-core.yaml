# Copyright 2024 The Kubermatic Kubernetes Platform contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: kubermatic-config
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  description: ArgoCD Project for all core KKP configurations
  clusterResourceWhitelist:
  - group: '*'
    kind: '*'
  sourceRepos:
  - '*'
  destinations:
  - namespace: kubermatic
    server: https://kubernetes.default.svc
  - namespace: mla
    server: https://kubernetes.default.svc
  - namespace: iap
    server: https://kubernetes.default.svc
  - namespace: argocd
    server: https://kubernetes.default.svc

{{ if .Values.oauth.enable }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: oauth
  namespace: argocd
spec:
  project: default
  sources:
  - repoURL: '{{ .Values.kkpRepoURL }}'
    path: {{ template "kkp.chart.pathprefix" . }}/charts/oauth
    targetRevision: {{ .Values.kkpVersion }}
    helm:
      valueFiles:
        - values.yaml
        - $values/{{ template "argo-cd-apps.env-specific-values-file.path" . }}
        - $values/{{ template "argo-cd-apps.seed-override-values-file.path" . }}
  # This is your private repo where you have stored the values.yaml customizations which you used to provide to KKP installer. 
  - repoURL: '{{ .Values.repoURL }}'
    targetRevision: {{ template "git-tag-version" . }}
    path: {{ .Values.valuesPathPrefix }}
    ref: values
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: oauth
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
  {{- if .Values.oauth.autoSync }}
    automated: {}
  {{ end }}
{{ end }}

{{ if .Values.nginx.enable }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: nginx-ingress-controller
  namespace: argocd
spec:
  project: default
  sources:
  - repoURL: '{{ .Values.kkpRepoURL }}'
    path: {{ template "kkp.chart.pathprefix" . }}/charts/nginx-ingress-controller
    targetRevision: {{ .Values.kkpVersion }}
    helm:
      valueFiles:
        - values.yaml
        - $values/{{ template "argo-cd-apps.env-specific-values-file.path" . }}
        - $values/{{ template "argo-cd-apps.seed-override-values-file.path" . }}
  # This is your private repo where you have stored the values.yaml customizations which you used to provide to KKP installer. 
  - repoURL: '{{ .Values.repoURL }}'
    targetRevision: {{ template "git-tag-version" . }}
    path: {{ .Values.valuesPathPrefix }}
    ref: values
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: nginx-ingress-controller
  # nginx ingress app to be synced automatically so that we can access ArgoCD via it!
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - Retry=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  {{- if .Values.nginx.autoSync }}
    automated: {}
  {{ end }}
{{ end }}


{{ if .Values.certManager.enable }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager
  namespace: argocd
spec:
  project: default
  sources:
  - repoURL: '{{ .Values.kkpRepoURL }}'
    path: {{ template "kkp.chart.pathprefix" . }}/charts/cert-manager
    targetRevision: {{ .Values.kkpVersion }}
    helm:
      parameters:
      - name: "cert-manager.installCRDs"
        value: "true"
      valueFiles:
        - values.yaml
        - $values/{{ template "argo-cd-apps.env-specific-values-file.path" . }}
        - $values/{{ template "argo-cd-apps.seed-override-values-file.path" . }}
  # This is your private repo where you have stored the values.yaml customizations which you used to provide to KKP installer. 
  - repoURL: '{{ .Values.repoURL }}'
    targetRevision: {{ template "git-tag-version" . }}
    path: {{ .Values.valuesPathPrefix }}
    ref: values
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: cert-manager
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
  {{- if .Values.certManager.autoSync }}
  # cert-manager app to be synced automatically so that we get certificates issued for KKP dashboard and ArgoCD to start with
    automated: {}
  {{ end }}
{{ end }}

{{ if and .Values.seedSettings.enable .Values.isMasterSeed }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: master-settings-{{ .Values.seed }}
  namespace: argocd
spec:
  project: kubermatic-config
  sources:
  - repoURL: '{{ .Values.repoURL }}'
    targetRevision: {{ template "git-tag-version" . }}
    path: {{ template "argo-cd-apps.env-specific-kkp-settings.path" . }}
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: kubermatic
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
  {{- if .Values.seedSettings.autoSync }}
    automated: {}
  {{ end }}
{{ end }}

{{ if .Values.seedExtras.enable }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: seed-extras-{{ .Values.seed }}
  namespace: argocd
spec:
  project: kubermatic-config
  sources:
  - repoURL: '{{ .Values.repoURL }}'
    targetRevision: {{ template "git-tag-version" . }}
    path: '{{ .Values.environment }}'
    directory:
      recurse: true
      exclude: '{**/values.yaml,**/{{ .Values.userMlaValuesFileName }},**/k8cConfig.yaml}'
      include: '{common/*,{{ .Values.seed }}/*}'
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: kubermatic
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    # sometimes things take time and hence we should control the retry params
    retry:
      limit: 100
      backoff:
        duration: "20s"
        factor: 1
        maxDuration: "3m0s"
  {{- if .Values.seedExtras.autoSync }}
    automated: {}
  {{ end }}
{{ end }}