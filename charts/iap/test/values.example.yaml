# Copyright 2021 The Kubermatic Kubernetes Platform contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

iap:
  deployments:
    alertmanager:
      name: alertmanager
      replicas: 3
      client_id: alertmanager
      client_secret: xxx
      encryption_key: xxx
      config: ## see https://oauth2-proxy.github.io/oauth2-proxy/docs/configuration/overview
        scope: "groups openid email"
        email_domains:
          - '*'
        ## example configuration allowing access only to the mygroup from mygithuborg organization
        github_org: mygithuborg
        github_team: mygroup
        ## do not route health endpoint through the proxy
        skip_auth_regex:
          - '/-/healthy'
      upstream_service: alertmanager.monitoring.svc.cluster.local
      upstream_port: 9093
      ingress:
        ## optional name of an existing TLS secret that needs to attached with ingress for this iap deployment.
        tlsSecretName: ""
        host: "alertmanager.kubermatic.tld"
        annotations: {}
        ## (Optional) Allow setting the value for ingressClassName to the different ingress controller such as "cilium". Default is set to "nginx"
        class: "nginx"
    #
    grafana:
      name: grafana
      client_id: grafana
      client_secret: xxx
      encryption_key: xxx
      config: ## see https://oauth2-proxy.github.io/oauth2-proxy/docs/configuration/overview
        scope: "groups openid email"
        email_domains:
          - '*'
        ## do not route health endpoint through the proxy
        skip_auth_regex:
          - '/api/health'
        ## auto-register users based on their email address
        ## Grafana is configured to look for the X-Forwarded-Email header
        pass_user_headers: true
      upstream_service: grafana.monitoring.svc.cluster.local
      upstream_port: 3000
      ingress:
        host: "grafana.kubermatic.tld"
        annotations: {}
        ## (Optional) Allow setting the value for ingressClassName to the different ingress controller such as "cilium". Default is set to "nginx"
        class: "nginx"

  certIssuer:
    name: letsencrypt-prod
    kind: ClusterIssuer

  resources:
    requests:
      cpu: 25m
      memory: 25Mi
    limits:
      cpu: 100m
      memory: 50Mi
