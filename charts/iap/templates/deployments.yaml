# Copyright 2020 The Kubermatic Kubernetes Platform contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{ range .Values.iap.deployments }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iap-{{ .name }}
  labels:
    app: iap
    target: {{ .name }}
spec:
  replicas: {{ .replicas | default $.Values.iap.replicas | default 1 }}
  selector:
    matchLabels:
      app: iap
      target: {{ .name }}
  template:
    metadata:
      labels:
        app: iap
        target: {{ .name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmaps.yaml") $ | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") $ | sha256sum }}
    spec:
      containers:
      - name: oauth2-proxy
        image: "{{ $.Values.iap.image.repository }}:{{ $.Values.iap.image.tag }}"
        imagePullPolicy: {{ $.Values.iap.image.pullPolicy }}
        args:
        - --provider=oidc
        {{- if .Values.iap.custom_provider_ca_secret }}
        - --provider-ca-file=/etc/ssl/certs/ca.crt
        {{- end }}
        - --oidc-issuer-url={{ $.Values.iap.oidc_issuer_url }}
        - --http-address=0.0.0.0:{{ $.Values.iap.port }}
        - --upstream=http://{{ .upstream_service }}:{{ .upstream_port }}
        - --cookie-name={{ .name }}_oauth2_proxy
        - --proxy-prefix=/oauth
        - --ping-path=/oauth/healthy
        - --silence-ping-logging=true
        - --reverse-proxy=true
        - --skip-provider-button=true
        - --config=/config/config.yaml
        envFrom:
        - secretRef:
            name: iap-{{ .name }}-secret
        ports:
        - name: http
          containerPort: {{ $.Values.iap.port }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /oauth/healthy
            port: http
          initialDelaySeconds: 3
          timeoutSeconds: 2
        readinessProbe:
          httpGet:
            path: /oauth/healthy
            port: http
          initialDelaySeconds: 3
          timeoutSeconds: 2
        resources:
{{ toYaml $.Values.iap.resources | indent 10 }}
        volumeMounts:
        - name: config
          mountPath: /config
        {{- if .Values.iap.custom_provider_ca_secret }}
        - name: ca
          mountPath: /etc/ssl/certs               
        {{- end }}  
      volumes:
      - name: config
        configMap:
          name: iap-{{ .name }}-configmap
          items:
          - key: config.yaml
            path: config.yaml
      {{- if .Values.iap.custom_provider_ca_secret }}
      - name: ca
        secret:
          secretName: {{ .Values.iap.custom_provider_ca_secret }}
          items:
          - key: ca.crt
            path: ca.crt            
      {{- end }}            
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      nodeSelector:
{{ toYaml $.Values.iap.nodeSelector | indent 8 }}
      affinity:
{{ (tpl (toYaml $.Values.iap.affinity) (merge (deepCopy $) .)) | fromYaml | toYaml | indent 8 }}
      tolerations:
{{ toYaml $.Values.iap.tolerations | indent 8 }}
{{ end }}
