#######################################################################################
# presubmit jobs
#######################################################################################

presubmits:
  #########################################################
  # unit tests
  #########################################################

  - name: kubermatic-pre-build
    run_if_changed: "^api/"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    spec:
      containers:
      - image: golang:1.12.12
        command:
        - make
        args:
        - -C
        - api
        - build
        resources:
          requests:
            memory: 2Gi
            cpu: 2
          limits:
            memory: 4Gi

  - name: kubermatic-pre-test
    run_if_changed: "^api/"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    spec:
      containers:
      - image: golang:1.12.12
        command:
        - make
        args:
        - -C
        - api
        - test
        resources:
          requests:
            memory: 7Gi
            cpu: 2

  - name: kubermatic-pre-verify
    run_if_changed: "^api/"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    spec:
      containers:
      - image: golang:1.12.12
        command:
        - make
        args:
        - -C
        - api
        - verify
        resources:
          requests:
            memory: 1.5Gi
            cpu: 500m
          limits:
            memory: 2.5Gi
            cpu: 1

  - name: kubermatic-pre-verify-charts
    run_if_changed: "^config/"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    spec:
      containers:
      - image: quay.io/kubermatic/util:1.3.0
        command:
        - "./api/hack/verify-chart-versions.sh"
        resources:
          requests:
            memory: 128Mi
            cpu: 50m
          limits:
            memory: 256Mi
            cpu: 250m

  - name: kubermatic-pre-verify-grafana-dashboards
    run_if_changed: "^config/monitoring/grafana/"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    spec:
      containers:
      - image: quay.io/kubermatic/util:1.3.0
        command:
        - "./api/hack/verify-grafana-dashboards.sh"
        resources:
          requests:
            memory: 64Mi
            cpu: 50m
          limits:
            memory: 128Mi
            cpu: 250m

  - name: kubermatic-pre-verify-yaml-examples
    run_if_changed: "^(api|docs)/"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - "./api/hack/verify-yaml-examples.sh"
        resources:
          requests:
            memory: 128Mi
            cpu: 250m

  - name: kubermatic-pre-lint
    run_if_changed: "^api/"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    spec:
      containers:
      - image: golangci/golangci-lint:v1.17.1
        command:
        - make
        args:
        - -C
        - api
        - lint
        resources:
          requests:
            memory: 17Gi
            cpu: 3
          limits:
            memory: 17Gi

  - name: kubermatic-pre-dependencies
    run_if_changed: "^api/"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    spec:
      containers:
      - image: quay.io/kubermatic/dep:0.5.4-2
        command:
        - make
        args:
        - -C
        - api
        - check-dependencies
        resources:
          requests:
            memory: 256Mi
            cpu: 250m
          limits:
            memory: 256Mi
            cpu: 250m

  - name: kubermatic-pre-shellcheck
    optional: true
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    spec:
      containers:
      - image: koalaman/shellcheck-alpine:v0.7.0
        command:
        - sh
        args:
        - -c
        - shellcheck --shell=bash $(find . -name '*.sh')
        resources:
          requests:
            memory: 1Gi
            cpu: 0.5

  - name: kubermatic-pre-license-validation
    run_if_changed: "vendor"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    spec:
      containers:
      - image: quay.io/kubermatic/wwhrd:0.2.1-1
        command:
        - make
        args:
        - -C
        - api
        - license-validation

  - name: kubermatic-pre-prometheus-rules-validation
    run_if_changed: "config/monitoring"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    spec:
      containers:
      - image: quay.io/kubermatic/promtool:2.7.0-3
        command:
        - make
        args:
        - -C
        - config/monitoring
        - check-rules
      imagePullSecrets:
      - name: quay

  - name: kubermatic-pre-user-cluster-prometheus-config-validation
    run_if_changed: "api/pkg/resources/prometheus"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    spec:
      containers:
      - image: quay.io/kubermatic/promtool:2.7.0-3
        command:
        - "./api/hack/verify-user-cluster-prometheus-configs.sh"
      imagePullSecrets:
      - name: quay

  - name: kubermatic-pre-validate-prow-yaml
    always_run: true
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    extra_refs:
    - org: kubermatic
      repo: infra
      base_ref: master
      clone_uri: git@github.com:kubermatic/infra.git
    spec:
     containers:
     - image: gcr.io/k8s-prow/checkconfig:v20191204-d7993c80e
       command:
       - /app/prow/cmd/checkconfig/app.binary
       args:
       - --plugin-config=/home/prow/go/src/github.com/kubermatic/infra/prow/plugins.yaml
       - --config-path=/home/prow/go/src/github.com/kubermatic/infra/prow/config.yaml
       - --job-config-path=/home/prow/go/src/github.com/kubermatic/infra/prow/jobs
       - --prow-yaml-repo-name=$(REPO_OWNER)/$(REPO_NAME)

  #########################################################
  # e2e tests for Kubernetes 1.14
  #########################################################

  - name: kubermatic-pre-e2e-aws-coreos-1.14
    run_if_changed: "(api/|config/kubermatic)"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    skip_branches:
    - release/v2.9
    labels:
      preset-aws: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: docker.io/kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.14.8"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2.5Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-pre-e2e-aws-coreos-1.14-kind
    decorate: true
    always_run: false
    optional: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - master
    labels:
      preset-aws: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/e2e-kind:with-conformance-tests-v1.0.13-dev1
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.14.8"
        - name: SERVICE_ACCOUNT_KEY
          valueFrom:
            secretKeyRef:
              name: e2e-ci
              key: serviceAccountSigningKey
        command:
        - "./api/hack/ci-kind-e2e.sh"
        volumeMounts:
        - name: modules
          mountPath: /lib/modules
        - name: cgroup
          mountPath: /sys/fs/cgroup
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2.5Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 3.5
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory

  - name: kubermatic-pre-e2e-azure-coreos-1.14
    decorate: true
    optional: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-azure: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: docker.io/kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.14.8"
        - name: PROVIDER
          value: "azure"
        - name: DEFAULT_TIMEOUT_MINUTES
          value: "20"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2.5Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  #########################################################
  # e2e tests for Kubernetes 1.15
  #########################################################

  - name: kubermatic-pre-e2e-aws-coreos-1.15
    decorate: true
    run_if_changed: "(api/|config/kubermatic)"
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    skip_branches:
    - release/v2.9
    - release/v2.10
    labels:
      preset-aws: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: docker.io/kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.15.5"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2.5Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-pre-e2e-aws-coreos-1.15-kind
    decorate: true
    always_run: false
    optional: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - master
    labels:
      preset-aws: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/e2e-kind:with-conformance-tests-v1.0.13-dev1
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.15.5"
        - name: SERVICE_ACCOUNT_KEY
          valueFrom:
            secretKeyRef:
              name: e2e-ci
              key: serviceAccountSigningKey
        command:
        - "./api/hack/ci-kind-e2e.sh"
        volumeMounts:
        - name: modules
          mountPath: /lib/modules
        - name: cgroup
          mountPath: /sys/fs/cgroup
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2.5Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 3.5
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory

  - name: kubermatic-pre-e2e-gcp-coreos-1.15
    decorate: true
    always_run: false
    optional: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    skip_branches:
    - release/v2.9
    labels:
      preset-gce: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: docker.io/kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.15.5"
        - name: PROVIDER
          value: "gcp"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2.5Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-pre-e2e-gcp-coreos-1.15-psp
    decorate: true
    optional: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    labels:
      preset-gce: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: docker.io/kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.15.5"
        - name: PROVIDER
          value: "gcp"
        - name: KUBERMATIC_PSP_ENABLED
          value: "true"
        - name: ONLY_TEST_CREATION
          value: "true"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2.5Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-pre-e2e-azure-coreos-1.15
    decorate: true
    optional: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-azure: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: docker.io/kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.15.5"
        - name: PROVIDER
          value: "azure"
        - name: DEFAULT_TIMEOUT_MINUTES
          value: "20"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2.5Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-pre-e2e-do-centos-1.15
    decorate: true
    always_run: false
    optional: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    skip_branches:
    - release/v2.9
    labels:
      preset-digitalocean: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: docker.io/kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.15.5"
        - name: EXCLUDE_DISTRIBUTIONS
          value: "ubuntu,coreos"
        - name: PROVIDER
          value: "digitalocean"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2.5Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-pre-e2e-packet-coreos-1.15
    decorate: true
    optional: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-packet: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.15.5"
        - name: PROVIDER
          value: "packet"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-pre-e2e-kubevirt-centos-1.15
    decorate: true
    optional: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-kubevirt: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.15.5"
        - name: PROVIDER
          value: "kubevirt"
        - name: EXCLUDE_DISTRIBUTIONS
          value: "ubuntu,coreos"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-pre-e2e-hetzner-ubuntu-1.15
    decorate: true
    optional: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-hetzner: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.15.5"
        - name: PROVIDER
          value: "hetzner"
        # Hetzner doesn't support coreos
        - name: EXCLUDE_DISTRIBUTIONS
          value: "centos,coreos"
        - name: DEFAULT_TIMEOUT_MINUTES
          value: "20"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-pre-e2e-openstack-coreos-1.15
    decorate: true
    optional: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-openstack: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.15.5"
        - name: PROVIDER
          value: "openstack"
        - name: DEFAULT_TIMEOUT_MINUTES
          value: "20"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-pre-e2e-vsphere-coreos-1.15
    decorate: true
    run_if_changed: "api/pkg/provider/cloud/vsphere"
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-vsphere: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.15.5"
        - name: PROVIDER
          value: "vsphere"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-pre-e2e-vsphere-coreos-1.15-customfolder
    decorate: true
    optional: true
    run_if_changed: "api/pkg/provider/cloud/vsphere"
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-vsphere: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.15.5"
        - name: PROVIDER
          value: "vsphere"
        - name: SCENARIO_OPTIONS
          value: "custom-folder"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  #########################################################
  # e2e tests for Kubernetes 1.16
  #########################################################

  - name: kubermatic-pre-e2e-aws-coreos-1.16
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-aws: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: docker.io/kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.16.2"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2.5Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-pre-e2e-aws-coreos-1.16-kind
    decorate: true
    always_run: false
    optional: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - master
    labels:
      preset-aws: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/e2e-kind:with-conformance-tests-v1.0.13-dev1
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.16.2"
        - name: SERVICE_ACCOUNT_KEY
          valueFrom:
            secretKeyRef:
              name: e2e-ci
              key: serviceAccountSigningKey
        command:
        - "./api/hack/ci-kind-e2e.sh"
        volumeMounts:
        - name: modules
          mountPath: /lib/modules
        - name: cgroup
          mountPath: /sys/fs/cgroup
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2.5Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 3.5
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory

  - name: kubermatic-pre-e2e-openstack-centos-1.16
    decorate: true
    optional: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-openstack: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.16.3"
        - name: PROVIDER
          value: "openstack"
        - name: DEFAULT_TIMEOUT_MINUTES
          value: "20"
        - name: EXCLUDE_DISTRIBUTIONS
          value: "coreos,ubuntu"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-pre-e2e-openstack-ubuntu-1.16
    decorate: true
    optional: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-openstack: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.16.3"
        - name: PROVIDER
          value: "openstack"
        - name: DEFAULT_TIMEOUT_MINUTES
          value: "20"
        - name: EXCLUDE_DISTRIBUTIONS
          value: "coreos,centos"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-pre-e2e-openstack-coreos-1.16
    decorate: true
    optional: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-openstack: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.16.3"
        - name: PROVIDER
          value: "openstack"
        - name: DEFAULT_TIMEOUT_MINUTES
          value: "20"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  #########################################################
  # e2e tests for Openshift 4.1
  #########################################################

  - name: kubermatic-pre-e2e-aws-openshift-4.1
    decorate: true
    run_if_changed: "(api/|config/kubermatic)"
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - master
    labels:
      preset-aws: "true"
      preset-openshift-pull-secret: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-oidc: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: docker.io/kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: OPENSHIFT
          value: "true"
        - name: OPENSHIFT_VERSION
          value: "4.1.18"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2.5Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-pre-e2e-aws-openshift-4.1-kind
    decorate: true
    always_run: false
    optional: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - master
    labels:
      preset-aws: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/e2e-kind:with-conformance-tests-v1.0.13-dev1
        env:
        - name: OPENSHIFT
          value: "true"
        - name: OPENSHIFT_VERSION
          value: "4.1.18"
        - name: SERVICE_ACCOUNT_KEY
          valueFrom:
            secretKeyRef:
              name: e2e-ci
              key: serviceAccountSigningKey
        command:
        - "./api/hack/ci-kind-e2e.sh"
        volumeMounts:
        - name: modules
          mountPath: /lib/modules
        - name: cgroup
          mountPath: /sys/fs/cgroup
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2.5Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 3.5
      # Those volumes are required by inner docker instance to properly start the k8s cluster inside the pod.
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory

  #########################################################
  # upgrade tests
  #########################################################

  - name: kubermatic-pre-e2e-upgrade
    decorate: true
    always_run: false
    optional: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-aws: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: docker.io/kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.14.8"
        command:
        - "./api/hack/run-kubermatic-upgrade-test.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2.5Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-pre-e2e-upgrade-2.9-2.10
    decorate: true
    always_run: false
    optional: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - release/v2.10
    labels:
      preset-aws: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: docker.io/kubermatic/kubernetes-test-binaries:v0.9.7
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.13.5"
        - name: UPGRADE_TEST_BASE_HASH
          value: release/v2.9
        command:
        - "./api/hack/run-kubermatic-upgrade-test.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2.5Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-pre-e2e-upgrade-2.10-2.11
    decorate: true
    always_run: false
    optional: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - release/v2.11
    labels:
      preset-aws: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: docker.io/kubermatic/kubernetes-test-binaries:v0.9.7
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.14.8"
        - name: UPGRADE_TEST_BASE_HASH
          value: release/v2.10
        command:
        - "./api/hack/run-kubermatic-upgrade-test.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2.5Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-pre-e2e-upgrade-2.11-2.12
    decorate: true
    always_run: false
    optional: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - release/v2.12
    labels:
      preset-aws: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: docker.io/kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.15.5"
        - name: UPGRADE_TEST_BASE_HASH
          value: release/v2.11
        command:
        - "./api/hack/run-kubermatic-upgrade-test.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2.5Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-pre-e2e-upgrade-weekly
    decorate: true
    always_run: true
    optional: false
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - weekly
    labels:
      preset-aws: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: docker.io/kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.15.5"
        - name: UPGRADE_TEST_BASE_HASH
          value: weekly
        command:
        - "./api/hack/run-kubermatic-upgrade-test.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2.5Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  #########################################################
  # API e2e tests
  #########################################################

  - name: kubermatic-pre-api-e2e
    run_if_changed: "^api/"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    skip_branches:
    - release/v2.11
    labels:
      preset-digitalocean: "true"
      preset-openstack: "true"
      preset-azure: "true"
      preset-kubeconfig-ci: "true"
      preset-docker-pull: "true"
      preset-gce: "true"
    spec:
      # DNS configuration allows inner cluster to access the internet.
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
        - 1.1.1.1 # Cloudflare DNS servers
        - 1.0.0.1
      containers:
      - image: quay.io/kubermatic/e2e-kind:v1.0.13
        imagePullPolicy: Always
        command:
        - "./api/hack/ci/ci_run_api_e2e.sh"
        volumeMounts:
        - name: modules
          mountPath: /lib/modules
        - name: cgroup
          mountPath: /sys/fs/cgroup
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 4Gi
            cpu: 2
          limits:
            memory: 6Gi
            cpu: 3.5
        env:
        - name: SERVICE_ACCOUNT_KEY
          valueFrom:
            secretKeyRef:
              name: e2e-ci
              key: serviceAccountSigningKey
      # Those volumes are required by inner docker instance to properly start the k8s cluster inside the pod.
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory

  - name: kubermatic-pre-api-e2e-2.11
    run_if_changed: "^api/"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - release/v2.11
    labels:
      preset-digitalocean: "true"
      preset-openstack: "true"
      preset-azure: "true"
      preset-kubeconfig-ci: "true"
      preset-docker-pull: "true"
      preset-gce: "true"
    spec:
      # DNS configuration allows inner cluster to access the internet.
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
        - 1.1.1.1 # Cloudflare DNS servers
        - 1.0.0.1
      containers:
      - image: quay.io/kubermatic/e2e-kind:v1.0.9
        imagePullPolicy: Always
        command:
        - "./api/hack/ci/ci_run_api_e2e.sh"
        volumeMounts:
        - name: modules
          mountPath: /lib/modules
        - name: cgroup
          mountPath: /sys/fs/cgroup
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 3Gi
            cpu: 2
          limits:
            memory: 4Gi
            cpu: 3.5
        env:
        - name: SERVICE_ACCOUNT_KEY
          valueFrom:
            secretKeyRef:
              name: e2e-ci
              key: serviceAccountSigningKey
      # Those volumes are required by inner docker instance to properly start the k8s cluster inside the pod.
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory

  #########################################################
  # misc
  #########################################################

  - name: kubermatic-pre-e2e-gcp-offline
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-gce: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - "./api/hack/ci/ci-run-offline-test.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2.5Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-pre-canary-deployment-ci-kubermatic-io
    max_concurrency: 1
    decorate: true
    # * api/hack: Contains all the deployment scripting
    # * config/kubermatic: Contains the chart
    # * api/pkg/crd/kubermatic/v1: Contains the Seed and Datacenter types, if
    #   this gets out of sync with whats in the secrets repo, we fail because we use
    #   yaml.UnmarshalStrict
    run_if_changed: "(api/hack|config/kubermatic|api/pkg/crd/kubermatic/v1)"
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    labels:
      preset-docker-push: "true"
      preset-vault: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-ci-kubermatic-io.sh
        env:
        - name: CANARY_DEPLOYMENT
          value: "true"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi

  - name: kubermatic-pre-test-integration
    run_if_changed: "^api/"
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-vsphere: "true"
    branches:
    - master
    spec:
      containers:
      - image: quay.io/kubermatic/integration-tests:2-1
        command:
        - make
        args:
        - -C
        - api
        - test-integration
        resources:
          requests:
            memory: 4Gi
            cpu: 2
          limits:
            memory: 6Gi
            cpu: 2

#######################################################################################
# postsubmit jobs
#######################################################################################

postsubmits:
  #########################################################
  # deploy dev
  #########################################################

  - name: kubermatic-post-deploy-dev-eu
    max_concurrency: 1
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    labels:
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-dev.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi

  - name: kubermatic-post-deploy-dev-eu-monitoring
    max_concurrency: 1
    decorate: true
    reporter_config:
      slack:
        channel: dev-seed-team
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    labels:
      preset-vault: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-dev.sh
        env:
        - name: DEPLOY_STACK
          value: monitoring
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi

  - name: kubermatic-post-deploy-dev-eu-logging
    max_concurrency: 1
    decorate: true
    reporter_config:
      slack:
        channel: dev-seed-team
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    labels:
      preset-vault: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-dev.sh
        env:
        - name: DEPLOY_STACK
          value: logging
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi

  - name: kubermatic-post-deploy-dev-asia
    max_concurrency: 1
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    labels:
      preset-vault: "true"
      preset-docker-push: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-dev-asia.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi

  - name: kubermatic-post-deploy-dev-asia-monitoring
    max_concurrency: 1
    decorate: true
    reporter_config:
      slack:
        channel: dev-seed-team
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    labels:
      preset-vault: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-dev-asia.sh
        env:
        - name: DEPLOY_STACK
          value: monitoring
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi

  #########################################################
  # deploy cloud
  #########################################################

  - name: kubermatic-post-deploy-cloud-eu
    max_concurrency: 1
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    labels:
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-cloud-eu.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi

  - name: kubermatic-post-deploy-cloud-eu-monitoring
    max_concurrency: 1
    decorate: true
    reporter_config:
      slack:
        channel: dev-seed-team
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    labels:
      preset-vault: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-cloud-eu.sh
        env:
        - name: DEPLOY_STACK
          value: monitoring
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi

  - name: kubermatic-post-deploy-cloud-eu-logging
    max_concurrency: 1
    decorate: true
    reporter_config:
      slack:
        channel: dev-seed-team
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    labels:
      preset-vault: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-cloud-eu.sh
        env:
        - name: DEPLOY_STACK
          value: logging
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi

  - name: kubermatic-post-deploy-cloud-asia
    max_concurrency: 1
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    labels:
      preset-vault: "true"
      preset-docker-push: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-cloud-asia.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi

  - name: kubermatic-post-deploy-cloud-asia-monitoring
    max_concurrency: 1
    decorate: true
    reporter_config:
      slack:
        channel: dev-seed-team
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    labels:
      preset-vault: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-cloud-asia.sh
        env:
        - name: DEPLOY_STACK
          value: monitoring
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi

  - name: kubermatic-post-deploy-cloud-asia-logging
    max_concurrency: 1
    decorate: true
    reporter_config:
      slack:
        channel: dev-seed-team
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    labels:
      preset-vault: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-cloud-asia.sh
        env:
        - name: DEPLOY_STACK
          value: logging
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi

  - name: kubermatic-post-deploy-cloud-us
    max_concurrency: 1
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    labels:
      preset-vault: "true"
      preset-docker-push: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-cloud-us.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi

  - name: kubermatic-post-deploy-cloud-us-monitoring
    max_concurrency: 1
    decorate: true
    reporter_config:
      slack:
        channel: dev-seed-team
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    labels:
      preset-vault: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-cloud-us.sh
        env:
        - name: DEPLOY_STACK
          value: monitoring
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi

  - name: kubermatic-post-deploy-cloud-us-logging
    max_concurrency: 1
    decorate: true
    reporter_config:
      slack:
        channel: dev-seed-team
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    labels:
      preset-vault: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-cloud-us.sh
        env:
        - name: DEPLOY_STACK
          value: logging
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi

  #########################################################
  # deploy run
  #########################################################

  - name: kubermatic-post-deploy-run
    max_concurrency: 1
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - release/v2.11
    labels:
      preset-vault: "true"
      preset-docker-push: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-run.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi

  - name: kubermatic-post-deploy-run-monitoring
    max_concurrency: 1
    decorate: true
    reporter_config:
      slack:
        channel: dev-seed-team
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - release/v2.11
    labels:
      preset-vault: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-run.sh
        env:
        - name: DEPLOY_STACK
          value: monitoring
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi

  - name: kubermatic-post-deploy-run-logging
    max_concurrency: 1
    decorate: true
    reporter_config:
      slack:
        channel: dev-seed-team
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - release/v2.11
    labels:
      preset-vault: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-run.sh
        env:
        - name: DEPLOY_STACK
          value: logging
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi

  - name: kubermatic-post-deploy-run-lab-stable
    max_concurrency: 1
    decorate: true
    reporter_config:
      slack:
        channel: alerting-run-2-stable
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - release/v2.12
    labels:
      preset-vault: "true"
      preset-docker-push: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-run-lab-stable.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi

  - name: kubermatic-post-deploy-run-lab-weekly
    max_concurrency: 1
    decorate: true
    reporter_config:
      slack:
        channel: alerting-run-2
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^weekly-\d+-\d+.*
    labels:
      preset-vault: "true"
      preset-docker-push: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-run-2-lab-alpha.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi

  #########################################################
  # deploy ci
  #########################################################

  - name: kubermatic-post-deploy-ci
    max_concurrency: 1
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    labels:
      preset-docker-push: "true"
      preset-vault: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-ci-kubermatic-io.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi

  - name: kubermatic-post-deploy-ci-monitoring
    max_concurrency: 1
    decorate: true
    reporter_config:
      slack:
        channel: dev-seed-team
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    labels:
      preset-vault: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-ci-kubermatic-io.sh
        env:
        - name: DEPLOY_STACK
          value: monitoring
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi

  - name: kubermatic-post-deploy-ci-logging
    max_concurrency: 1
    decorate: true
    reporter_config:
      slack:
        channel: dev-seed-team
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    labels:
      preset-vault: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-ci-kubermatic-io.sh
        env:
        - name: DEPLOY_STACK
          value: logging
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi

  #########################################################
  # deploy offline
  #########################################################

  - name: kubermatic-post-deploy-offline
    max_concurrency: 1
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    labels:
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-deploy-offline.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi

  #########################################################
  # sync external repos
  #########################################################

  - name: kubermatic-post-sync-charts
    max_concurrency: 1
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    # Match on release tags
    - ^v\d+\.\d+\.\d+.*
    # Match on weeklies
    - ^weekly-\d+-\d+.*
    labels:
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: alpine:3.8
        command:
        - /bin/sh
        - -c
        - apk add bash git openssh && ./api/hack/ci/ci-sync-charts.sh
        resources:
          requests:
            cpu: 250m

  - name: kubermatic-post-sync-client
    max_concurrency: 1
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - master
    # Match on release branches
    - ^release/v[0-9]\.[0-9]+$
    labels:
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: alpine:3.8
        command:
        - /bin/sh
        - -c
        - apk add git openssh rsync && ./api/hack/ci/ci-sync-apiclient.sh
        resources:
          requests:
            cpu: 250m

  - name: kubermatic-post-update-docs
    max_concurrency: 1
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    labels:
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/util:1.3.0
        command:
        - "./api/hack/ci/ci-update-docs.sh"
        resources:
          requests:
            cpu: 500m
            memory: 512Mi

  #########################################################
  # misc
  #########################################################

  - name: kubermatic-post-ci-push-images
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-docker-push: "true"
    branches:
    - release\/v\d+.*
    - ^v\d+\.\d+\.\d+.*
    - ^weekly-\d+-\d+.*
    spec:
      containers:
      - image: quay.io/kubermatic/go-docker:12.9-1806-0
        command:
        - ./api/hack/ci/ci-push-images.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2
            memory: 2Gi

  - name: kubermatic-post-tag-weekly
    decorate: true
    reporter_config:
      slack:
        channel: dev-kubermatic
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-repo-ssh: "true"
    branches:
    - ^weekly$
    spec:
      containers:
      - image: debian:buster
        command:
        - /bin/sh
        - -c
        - |-
          set -x
          set -eu

          apt-get update && apt-get install openssh-client git --no-install-recommends -y

          TIMESTAMP="$(git show -s --format=%ci HEAD)"
          TAG="weekly-$(date '+%Y-%V' --date "$TIMESTAMP")"
          git tag $TAG

          mkdir -p "$HOME/.ssh" && chmod 700 "$HOME/.ssh"
          touch "$HOME/.ssh/known_hosts" && chmod 600 "$HOME/.ssh/known_hosts"
          echo "github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==" >> "$HOME/.ssh/known_hosts"
          chmod 600 "$HOME/.ssh/known_hosts"

          git config --local user.email "dev@loodse.com"
          git config --local user.name "Prow CI Robot"
          git config --local core.sshCommand "ssh -o CheckHostIP=no -i /ssh/id_rsa"
          git remote add origin git@github.com:kubermatic/kubermatic.git
          git push origin $TAG
        resources:
          requests:
            cpu: 100m
          limits:
            cpu: 1
            memory: 256Mi

  - name: kubermatic-post-upload-gocache
    decorate: true
    clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    branches:
    - ^master$
    spec:
      containers:
      # This must match the go version used for building, else go will rightfully
      # not use the cache
      - image: golang:1.12.12
        command:
        - ./api/hack/ci/ci-upload-gocache.sh
        resources:
          requests:
            # Make sure we get a node exclusively so this is fast and we do not disturb others
            cpu: 3500m
            memory: 6Gi
          limits:
            cpu: 4000m

#######################################################################################
# periodics
#######################################################################################

periodics:
  - name: kubermatic-periodic-e2e-packet-coreos-1.14
    cron: "0 1 * * 1-5"
    hidden: true
    decorate: true
    reporter_config:
      slack:
        channel: dev-cluster-lifecycle
    extra_refs:
    - org: kubermatic
      repo: kubermatic
      base_ref: master
      clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-packet: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.14.6"
        - name: PROVIDER
          value: "packet"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-periodic-e2e-gcp-coreos-1.14
    cron: "0 1 * * 1-5"
    hidden: true
    decorate: true
    reporter_config:
      slack:
        channel: dev-cluster-lifecycle
    extra_refs:
    - org: kubermatic
      repo: kubermatic
      base_ref: master
      clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-gce: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.14.6"
        - name: PROVIDER
          value: "gcp"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-periodic-e2e-azure-coreos-1.14
    cron: "0 1 * * 1-5"
    hidden: true
    decorate: true
    reporter_config:
      slack:
        channel: dev-cluster-lifecycle
    extra_refs:
    - org: kubermatic
      repo: kubermatic
      base_ref: master
      clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-azure: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.14.6"
        - name: PROVIDER
          value: "azure"
        - name: DEFAULT_TIMEOUT_MINUTES
          value: "20"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-periodic-e2e-hetzner-ubuntu-1.14
    cron: "0 1 * * 1-5"
    hidden: true
    decorate: true
    reporter_config:
      slack:
        channel: dev-cluster-lifecycle
    extra_refs:
    - org: kubermatic
      repo: kubermatic
      base_ref: master
      clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-hetzner: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.14.6"
        - name: PROVIDER
          value: "hetzner"
        # Hetzner doesn't support coreos
        - name: EXCLUDE_DISTRIBUTIONS
          value: "centos,coreos"
        - name: DEFAULT_TIMEOUT_MINUTES
          value: "20"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-periodic-e2e-digitalocean-coreos-1.14
    cron: "0 1 * * 1-5"
    hidden: true
    decorate: true
    reporter_config:
      slack:
        channel: dev-cluster-lifecycle
    extra_refs:
    - org: kubermatic
      repo: kubermatic
      base_ref: master
      clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-digitalocean: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.14.6"
        - name: PROVIDER
          value: "digitalocean"
        - name: DEFAULT_TIMEOUT_MINUTES
          value: "20"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-periodic-e2e-openstack-coreos-1.14
    cron: "0 1 * * 1-5"
    hidden: true
    decorate: true
    reporter_config:
      slack:
        channel: dev-cluster-lifecycle
    extra_refs:
    - org: kubermatic
      repo: kubermatic
      base_ref: master
      clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-openstack: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.14.6"
        - name: PROVIDER
          value: "openstack"
        - name: DEFAULT_TIMEOUT_MINUTES
          value: "20"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-periodic-e2e-vsphere-coreos-1.14
    cron: "0 1 * * 1-5"
    hidden: true
    decorate: true
    reporter_config:
      slack:
        channel: dev-cluster-lifecycle
    extra_refs:
    - org: kubermatic
      repo: kubermatic
      base_ref: master
      clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-vsphere: "true"
      preset-vault: "true"
      preset-docker-push: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: kubermatic/kubernetes-test-binaries:v0.10.6
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.14.6"
        - name: PROVIDER
          value: "vsphere"
        command:
        - "./api/hack/ci-run-minimal-conformance-tests.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2

  - name: kubermatic-periodic-e2e-api-cloud
    cron: "0 6 * * *"
    hidden: true
    decorate: true
    reporter_config:
      slack:
        channel: dev-cluster-lifecycle
    extra_refs:
      - org: kubermatic
        repo: kubermatic
        base_ref: master
        clone_uri: "ssh://git@github.com/kubermatic/kubermatic.git"
    labels:
      preset-dex-dev: "true"
      preset-digitalocean: "true"
      preset-aws: "true"
      preset-repo-ssh: "true"
    spec:
      containers:
      - image: quay.io/kubermatic/e2e-kind:v1.0.8
        env:
        - name: VERSIONS_TO_TEST
          value: "v1.14.6"
        command:
        - "./api/hack/ci/ci-run-cloud-e2e.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2
