#!/usr/bin/env bash

set -euo pipefail

if [ "$#" -lt 2 ] || [ "${1}" == "--help" ]; then
  cat <<EOF
Usage: $(basename $0) <branch-name> <path-to-charts>

  <branch-name>                  Name of the target branch in the kubermatic-installer repository
  <path-to-charts>               The path to the kubermatic charts to sync

Example:
  $(basename $0) v2.5 ../config
EOF
  exit 0
fi

MASTER_CHARTS=(
  kubermatic
  cert-manager
  certs
  nginx-ingress-controller
  nodeport-proxy
  oauth
)

SEED_CHARTS=(
  kubermatic
  cert-manager
  certs
  nginx-ingress-controller
  nodeport-proxy
  oauth
  minio
  iap
  monitoring/prometheus
  monitoring/alertmanager
  monitoring/grafana
  monitoring/kube-state-metrics
  monitoring/node-exporter
  logging/elasticsearch
  logging/kibana
  logging/fluentd
)

ALL_CHARTS=$(echo "${MASTER_CHARTS[*]} ${SEED_CHARTS[*]}" | tr ' ' '\n' | sort -u)

values_yaml() {
  echo "${TARGET_DIR}/values.${1}.example.yaml"
}

INSTALLER_BRANCH="${1}"
CHARTS_DIR="${2}"
TARGET_DIR="sync_target"
COMMIT="${3:-}"

if [ ! -z "${COMMIT}" ]; then
  COMMIT="local folder"
fi

# create fresh clone from the installer repo
rm -rf "${TARGET_DIR}"
mkdir -p "${TARGET_DIR}"
git clone https://github.com/kubermatic/kubermatic-installer.git "${TARGET_DIR}"
cd "${TARGET_DIR}"
git checkout "${INSTALLER_BRANCH}"
cd ..

# cleanup old, unused files
rm -f "${TARGET_DIR}/values.yaml" "${TARGET_DIR}/values.example.yaml"

# start new values.yaml files
for VARIANT in master seed; do
  VALUES_FILE="$(values_yaml ${VARIANT})"

  rm -f "${VALUES_FILE}"
  echo "# THIS FILE IS GENERATED BY kubermatic/api/hack/sync-charts.sh" > "${VALUES_FILE}"
done

copy_chart() {
  local CHART="${1}"
  local NAME="$(basename ${CHART})"
  local DIRNAME="$(dirname ${CHART})"
  local TARGET="${TARGET_DIR}/charts/${CHART}"

  rm -rf "${TARGET_DIR}/charts/${CHART}"
  mkdir -p "${TARGET_DIR}/charts/${DIRNAME}"
  cp -r "${CHARTS_DIR}/${CHART}" "${TARGET_DIR}/charts/${CHART}"
}

append_values() {
  local VARIANT="${1}"
  local CHART="${2}"
  local NAME="$(basename ${CHART})"
  local VALUES_FILE="$(values_yaml ${VARIANT})"

  echo "Syncing [${VARIANT}] ${CHART}..."

  echo "# ====== ${NAME} ======" >> "${VALUES_FILE}"
  cat "${CHARTS_DIR}/${CHART}/values.yaml" >> "${VALUES_FILE}"
  echo "" >> "${VALUES_FILE}"
}

for CHART in ${MASTER_CHARTS[*]}; do
  append_values master "${CHART}"
done

for CHART in ${SEED_CHARTS[*]}; do
  append_values seed "${CHART}"
done

# create a combined values.yaml for use in the installer
for CHART in ${ALL_CHARTS}; do
  append_values "combined" "${CHART}"
  copy_chart "${CHART}"
done

# commit the changes and push them to github
cd "${TARGET_DIR}"
git add .
if ! git status | grep 'nothing to commit'; then
  git commit -m "Syncing charts from commit ${COMMIT}"
  git push origin "${INSTALLER_BRANCH}"
fi
cd ..

# cleanup
rm -rf "${TARGET_DIR}"
