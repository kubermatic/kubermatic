#!/usr/bin/env bash

set -euo pipefail

if [ "$#" -lt 2 ] || [ "${1}" == "--help" ]; then
  cat <<EOF
Usage: $(basename $0) <branch-name> <path-to-charts>

  <branch-name>                  Name of the target branch in the kubermatic-installer repository
  <path-to-charts>               The path to the kubermatic charts to sync

Example:
  $(basename $0) v2.5 ../config
EOF
  exit 0
fi

masterCharts=(
  kubermatic
  cert-manager
  certs
  nginx-ingress-controller
  nodeport-proxy
  oauth
)

seedCharts=(
  kubermatic
  cert-manager
  certs
  nginx-ingress-controller
  nodeport-proxy
  oauth
  minio
  iap
  monitoring/prometheus
  monitoring/alertmanager
  monitoring/grafana
  monitoring/kube-state-metrics
  monitoring/node-exporter
  logging/elasticsearch
  logging/kibana
  logging/fluentd
)

values_yaml() {
  echo "${target_dir}/values.${1}.example.yaml"
}

installer_branch="${1}"
charts_dir="${2}"
target_dir="sync_target"
commit="${3:-}"

if [ ! -z "${commit}" ]; then
  commit="local folder"
fi

# create fresh clone from the installer repo
rm -rf "${target_dir}"
mkdir -p "${target_dir}"
git clone https://github.com/kubermatic/kubermatic-installer.git "${target_dir}"
cd "${target_dir}"
git checkout "${installer_branch}"
cd ..

# cleanup old, unused file
rm -f "${target_dir}/values.yaml"

# start new values.yaml files
for variant in master seed; do
  values_file="$(values_yaml ${variant})"

  rm -f "${values_file}"
  echo "# THIS FILE IS GENERATED BY kubermatic/api/hack/sync-charts.sh" > "${values_file}"
done

append_chart() {
  local variant="${1}"
  local chart="${2}"
  local name="$(basename ${chart})"
  local dirname="$(dirname ${chart})"
  local values_file="$(values_yaml ${variant})"
  local target="${target_dir}/charts/${chart}"

  echo "Syncing [${variant}] ${chart}..."

  # doing clean copy
  rm -rf "${target_dir}/charts/${chart}"
  mkdir -p "${target_dir}/charts/${dirname}"
  cp -r "${charts_dir}/${chart}" "${target_dir}/charts/${chart}"

  # append the chart's values.yaml
  echo "# ====== ${name} ======" >> "${values_file}"
  cat "${charts_dir}/${chart}/values.yaml" >> "${values_file}"
  echo "" >> "${values_file}"
}

for chart in ${masterCharts[*]}; do
  append_chart master "${chart}"
done

for chart in ${seedCharts[*]}; do
  append_chart seed "${chart}"
done

# commit the changes and push them to github
cd "${target_dir}"
git add .
if ! git status | grep 'nothing to commit'; then
  git commit -m "Syncing charts from commit ${commit}"
  git push origin "${installer_branch}"
fi
cd ..

# cleanup
rm -rf "${target_dir}"
