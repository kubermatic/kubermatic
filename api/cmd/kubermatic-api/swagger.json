{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "go:generate swagger generate spec",
    "termsOfService": "there are no TOS at this moment, use at your own risk we take no responsibility",
    "version": "0.0.1"
  },
  "host": "localhost",
  "paths": {
    "/api/healthz": {
      "get": {
        "description": "Return a HTTP 200 if everythings fine",
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "status",
          "health"
        ],
        "operationId": "StatusOK"
      }
    },
    "/api/v1/cluster": {
      "get": {
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "cluster",
          "get"
        ],
        "operationId": "clustersHandler",
        "responses": {
          "200": {
            "$ref": "#/responses/KubeCluster"
          },
          "default": {
            "$ref": "#/responses/APIError"
          }
        }
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "cluster",
          "list"
        ],
        "operationId": "clusterHandler",
        "parameters": [
          {
            "type": "string",
            "name": "Cluster",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UserSSHKey"
          },
          "default": {
            "$ref": "#/responses/APIError"
          }
        }
      }
    },
    "/api/v1/cluster/{cluster}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "cluster",
          "delete"
        ],
        "operationId": "deleteClusterHandler",
        "parameters": [
          {
            "type": "string",
            "name": "Cluster",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UserSSHKey"
          },
          "default": {
            "$ref": "#/responses/APIError"
          }
        }
      }
    },
    "/api/v1/cluster/{cluster}/kubeconfig": {
      "get": {
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "kubeconfig",
          "get"
        ],
        "operationId": "kubeconfigHandler",
        "parameters": [
          {
            "type": "string",
            "name": "Cluster",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/KubeConfig"
          },
          "default": {
            "$ref": "#/responses/APIError"
          }
        }
      }
    },
    "/api/v1/cluster/{cluster}/node": {
      "get": {
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "nodes",
          "get"
        ],
        "operationId": "nodesHandler",
        "parameters": [
          {
            "type": "string",
            "name": "Cluster",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/NodeList"
          },
          "default": {
            "$ref": "#/responses/APIError"
          }
        }
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "ssh",
          "keys",
          "list"
        ],
        "operationId": "createNodesHandler",
        "parameters": [
          {
            "type": "string",
            "name": "Cluster",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Instances",
            "name": "instances",
            "in": "body",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "$ref": "#/definitions/NodeSpec",
            "x-go-name": "Spec",
            "name": "spec",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UserSSHKey"
          },
          "default": {
            "$ref": "#/responses/APIError"
          }
        }
      }
    },
    "/api/v1/cluster/{cluster}/node/{node}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "nodes",
          "delete"
        ],
        "operationId": "deleteNodeHandler",
        "parameters": [
          {
            "type": "string",
            "name": "Cluster",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "NodeName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UserSSHKey"
          },
          "default": {
            "$ref": "#/responses/APIError"
          }
        }
      }
    },
    "/api/v1/cluster/{cluster}/upgrade": {
      "put": {
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "cluster",
          "upgrade"
        ],
        "operationId": "performClusterUpgrage",
        "parameters": [
          {
            "type": "string",
            "name": "Cluster",
            "in": "path",
            "required": true
          },
          {
            "name": "To",
            "in": "body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UserSSHKey"
          },
          "default": {
            "$ref": "#/responses/APIError"
          }
        }
      }
    },
    "/api/v1/cluster/{cluster}/upgrades": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "cluster",
          "upgrade",
          "versions"
        ],
        "operationId": "getPossibleClusterUpgrades",
        "parameters": [
          {
            "type": "string",
            "name": "Cluster",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Versions"
          },
          "default": {
            "$ref": "#/responses/APIError"
          }
        }
      }
    },
    "/api/v1/dc": {
      "get": {
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "datacenter",
          "list"
        ],
        "operationId": "datacentersHandler",
        "responses": {
          "200": {
            "$ref": "#/responses/UserSSHKey"
          },
          "default": {
            "$ref": "#/responses/APIError"
          }
        }
      }
    },
    "/api/v1/dc/{dc}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "datacenter",
          "list"
        ],
        "operationId": "datacenterHandler",
        "parameters": [
          {
            "type": "string",
            "name": "DC",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UserSSHKey"
          },
          "default": {
            "$ref": "#/responses/APIError"
          }
        }
      }
    },
    "/api/v1/ssh-keys": {
      "get": {
        "description": "Lists SSH keys from the user",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "ssh",
          "keys",
          "list"
        ],
        "operationId": "listSSHKeys",
        "responses": {
          "200": {
            "$ref": "#/responses/UserSSHKey"
          },
          "default": {
            "$ref": "#/responses/APIError"
          }
        }
      },
      "post": {
        "description": "Creates a SSH keys for the user",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "ssh",
          "keys",
          "create"
        ],
        "operationId": "createSSHKey",
        "responses": {
          "200": {
            "$ref": "#/responses/UserSSHKey"
          },
          "default": {
            "$ref": "#/responses/APIError"
          }
        }
      }
    },
    "/api/v1/ssh-keys/{meta_name}": {
      "delete": {
        "description": "Deletes a SSH keys for the user",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "ssh",
          "keys",
          "delete"
        ],
        "operationId": "deleteSSHKey",
        "parameters": [
          {
            "type": "string",
            "name": "MetaName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UserSSHKey"
          },
          "default": {
            "$ref": "#/responses/APIError"
          }
        }
      }
    }
  },
  "definitions": {
    "AWSCloudSpec": {
      "type": "object",
      "title": "AWSCloudSpec specifies access data to Amazon Web Services.",
      "properties": {
        "accessKeyId": {
          "type": "string",
          "x-go-name": "AccessKeyID"
        },
        "availabilityZone": {
          "type": "string",
          "x-go-name": "AvailabilityZone"
        },
        "instanceProfileName": {
          "type": "string",
          "x-go-name": "InstanceProfileName"
        },
        "roleName": {
          "type": "string",
          "x-go-name": "RoleName"
        },
        "routeTableId": {
          "type": "string",
          "x-go-name": "RouteTableID"
        },
        "secretAccessKey": {
          "type": "string",
          "x-go-name": "SecretAccessKey"
        },
        "securityGroup": {
          "type": "string",
          "x-go-name": "SecurityGroup"
        },
        "subnetId": {
          "type": "string",
          "x-go-name": "SubnetID"
        },
        "vpcId": {
          "type": "string",
          "x-go-name": "VPCID"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "AWSNodeSpec": {
      "type": "object",
      "title": "AWSNodeSpec specifies an aws node.",
      "properties": {
        "ami": {
          "type": "string",
          "x-go-name": "AMI"
        },
        "instance_type": {
          "type": "string",
          "x-go-name": "InstanceType"
        },
        "root_size": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "RootSize"
        },
        "volume_type": {
          "type": "string",
          "x-go-name": "VolumeType"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api"
    },
    "BareMetalCloudSpec": {
      "description": "BareMetalCloudSpec specifies access to a bare metal datacenter",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "BareMetalNodeSpec": {
      "description": "BareMetalNodeSpec specifies a node instanciated by the bare-metal-provider",
      "type": "object",
      "properties": {
        "cpus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CPU"
          },
          "x-go-name": "CPUs"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "memory": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Memory"
        },
        "public_ip": {
          "type": "string",
          "x-go-name": "PublicIP"
        },
        "space": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Space"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api"
    },
    "BringYourOwnCloudSpec": {
      "type": "object",
      "title": "BringYourOwnCloudSpec specifies access data for a bring your own cluster.",
      "properties": {
        "clientKeyCert": {
          "$ref": "#/definitions/KeyCert"
        },
        "privateInterface": {
          "type": "string",
          "x-go-name": "PrivateIntf"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "BringYourOwnNodeSpec": {
      "description": "BringYourOwnNodeSpec specifies a bring your own node",
      "type": "object",
      "x-go-package": "github.com/kubermatic/kubermatic/api"
    },
    "Bytes": {
      "type": "array",
      "items": {
        "type": "integer",
        "format": "uint8"
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "CPU": {
      "description": "CPU represents the CPU resources available on a node",
      "type": "object",
      "properties": {
        "cores": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Cores"
        },
        "frequency": {
          "type": "number",
          "format": "double",
          "x-go-name": "Frequency"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api"
    },
    "CauseType": {
      "description": "CauseType is a machine readable value providing more detail about what\noccurred in a status response. An operation may have multiple causes for a\nstatus (whether Failure or Success).",
      "type": "string",
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "CloudSpec": {
      "type": "object",
      "title": "CloudSpec mutually stores access data to a cloud provider.",
      "properties": {
        "aws": {
          "$ref": "#/definitions/AWSCloudSpec"
        },
        "baremetal": {
          "$ref": "#/definitions/BareMetalCloudSpec"
        },
        "bringyourown": {
          "$ref": "#/definitions/BringYourOwnCloudSpec"
        },
        "dc": {
          "description": "DatacenterName where the users 'cloud' lives in.",
          "type": "string",
          "x-go-name": "DatacenterName"
        },
        "digitalocean": {
          "$ref": "#/definitions/DigitaloceanCloudSpec"
        },
        "fake": {
          "$ref": "#/definitions/FakeCloudSpec"
        },
        "openstack": {
          "$ref": "#/definitions/OpenstackCloudSpec"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "ClusterAddress": {
      "type": "object",
      "title": "ClusterAddress stores access and address information of a cluster.",
      "properties": {
        "adminToken": {
          "type": "string",
          "x-go-name": "AdminToken"
        },
        "externalName": {
          "type": "string",
          "x-go-name": "ExternalName"
        },
        "externalPort": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ExternalPort"
        },
        "kubeletToken": {
          "type": "string",
          "x-go-name": "KubeletToken"
        },
        "url": {
          "type": "string",
          "x-go-name": "URL"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "ClusterCondition": {
      "type": "object",
      "title": "NodeSetCondition describes the state of a NodeSet at a certain point.",
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/Time"
        },
        "message": {
          "description": "A human readable message indicating details about the transition.\n+optional",
          "type": "string",
          "x-go-name": "Message"
        },
        "reason": {
          "description": "The reason for the condition's last transition.\n+optional",
          "type": "string",
          "x-go-name": "Reason"
        },
        "status": {
          "$ref": "#/definitions/ConditionStatus"
        },
        "type": {
          "$ref": "#/definitions/ClusterConditionType"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "ClusterConditionType": {
      "type": "string",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "ClusterHealth": {
      "type": "object",
      "title": "ClusterHealth stores health information of a cluster and the timestamp of the last change.",
      "properties": {
        "apiserver": {
          "type": "boolean",
          "x-go-name": "Apiserver"
        },
        "controller": {
          "type": "boolean",
          "x-go-name": "Controller"
        },
        "etcd": {
          "type": "boolean",
          "x-go-name": "Etcd"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/Time"
        },
        "nodeController": {
          "type": "boolean",
          "x-go-name": "NodeController"
        },
        "scheduler": {
          "type": "boolean",
          "x-go-name": "Scheduler"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "ClusterPhase": {
      "type": "string",
      "title": "ClusterPhase is the life cycle phase of a cluster.",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "ClusterSpec": {
      "type": "object",
      "title": "ClusterSpec specifies the data for a new cluster.",
      "properties": {
        "cloud": {
          "$ref": "#/definitions/CloudSpec"
        },
        "humanReadableName": {
          "type": "string",
          "x-go-name": "HumanReadableName"
        },
        "masterVersion": {
          "type": "string",
          "x-go-name": "MasterVersion"
        },
        "seedDatacenterName": {
          "type": "string",
          "x-go-name": "SeedDatacenterName"
        },
        "workerName": {
          "type": "string",
          "x-go-name": "WorkerName"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "ClusterStatus": {
      "type": "object",
      "title": "ClusterStatus stores status information about a cluster.",
      "properties": {
        "apiserverCert": {
          "$ref": "#/definitions/KeyCert"
        },
        "apiserverSshKey": {
          "$ref": "#/definitions/RSAKeys"
        },
        "conditions": {
          "description": "Conditions Represents the latest available observations of the cluster's current state.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterCondition"
          },
          "x-go-name": "Conditions"
        },
        "health": {
          "$ref": "#/definitions/ClusterHealth"
        },
        "kubeletCert": {
          "$ref": "#/definitions/KeyCert"
        },
        "lastDeployedMasterVersion": {
          "type": "string",
          "x-go-name": "LastDeployedMasterVersion"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/Time"
        },
        "masterUpdatePhase": {
          "$ref": "#/definitions/MasterUpdatePhase"
        },
        "namespaceName": {
          "type": "string",
          "x-go-name": "NamespaceName"
        },
        "phase": {
          "$ref": "#/definitions/ClusterPhase"
        },
        "rootCA": {
          "$ref": "#/definitions/KeyCert"
        },
        "seed": {
          "type": "string",
          "x-go-name": "Seed"
        },
        "serviceAccountKey": {
          "$ref": "#/definitions/Bytes"
        },
        "userEmail": {
          "type": "string",
          "x-go-name": "UserEmail"
        },
        "userName": {
          "type": "string",
          "x-go-name": "UserName"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "ConditionStatus": {
      "type": "string",
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/api/core/v1"
    },
    "ContainerLinuxSpec": {
      "description": "ContainerLinuxSpec specifies Container Linux options",
      "type": "object",
      "properties": {
        "disable_auto_update": {
          "type": "boolean",
          "x-go-name": "DisableAutoUpdate"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api"
    },
    "DigitaloceanCloudSpec": {
      "type": "object",
      "title": "DigitaloceanCloudSpec specifies access data to digital ocean.",
      "properties": {
        "token": {
          "type": "string",
          "x-go-name": "Token"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "DigitaloceanNodeSpec": {
      "type": "object",
      "title": "DigitaloceanNodeSpec specifies a digital ocean node.",
      "properties": {
        "size": {
          "description": "Size is the size of the node (DigitalOcean node type).",
          "type": "string",
          "x-go-name": "Size"
        },
        "sshKeys": {
          "description": "SSHKeyFingerprints  represent the fingerprints of the keys.\nDigitalOcean utilizes the fingerprints to identify public\nSSHKeys stored within the DigitalOcean platform.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "SSHKeyFingerprints"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api"
    },
    "FakeCloudSpec": {
      "type": "object",
      "title": "FakeCloudSpec specifies access data for a fake cloud.",
      "properties": {
        "token": {
          "type": "string",
          "x-go-name": "Token"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "FakeNodeSpec": {
      "type": "object",
      "title": "FakeNodeSpec specifies a fake node.",
      "properties": {
        "os": {
          "type": "string",
          "x-go-name": "OS"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api"
    },
    "Initializer": {
      "type": "object",
      "title": "Initializer is information about an initializer that has not yet completed.",
      "properties": {
        "name": {
          "description": "name of the process that is responsible for initializing this object.",
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "Initializers": {
      "type": "object",
      "title": "Initializers tracks the progress of initialization.",
      "properties": {
        "pending": {
          "description": "Pending is a list of initializers that must execute in order before this object is visible.\nWhen the last pending initializer is removed, and no failing result is set, the initializers\nstruct will be set to nil and the object is considered as initialized and visible to all\nclients.\n+patchMergeKey=name\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Initializer"
          },
          "x-go-name": "Pending"
        },
        "result": {
          "$ref": "#/definitions/Status"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "KeyCert": {
      "type": "object",
      "title": "KeyCert is a pair of key and cert.",
      "properties": {
        "cert": {
          "$ref": "#/definitions/Bytes"
        },
        "key": {
          "$ref": "#/definitions/Bytes"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "MasterUpdatePhase": {
      "type": "string",
      "title": "MasterUpdatePhase represents the current master update phase.",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "NodeSpec": {
      "type": "object",
      "title": "NodeSpec mutually stores data of a cloud specific node.",
      "properties": {
        "aws": {
          "$ref": "#/definitions/AWSNodeSpec"
        },
        "baremetal": {
          "$ref": "#/definitions/BareMetalNodeSpec"
        },
        "bringyourown": {
          "$ref": "#/definitions/BringYourOwnNodeSpec"
        },
        "digitalocean": {
          "$ref": "#/definitions/DigitaloceanNodeSpec"
        },
        "fake": {
          "$ref": "#/definitions/FakeNodeSpec"
        },
        "openstack": {
          "$ref": "#/definitions/OpenstackNodeSpec"
        },
        "operating_system": {
          "$ref": "#/definitions/OperatingSystemSpec"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api"
    },
    "OpenstackCloudSpec": {
      "type": "object",
      "title": "OpenstackCloudSpec specifies access data to an openstack cloud.",
      "properties": {
        "domain": {
          "type": "string",
          "x-go-name": "Domain"
        },
        "floatingIpPool": {
          "type": "string",
          "x-go-name": "FloatingIPPool"
        },
        "network": {
          "type": "string",
          "x-go-name": "Network"
        },
        "networkCreated": {
          "type": "boolean",
          "x-go-name": "NetworkCreated"
        },
        "password": {
          "type": "string",
          "x-go-name": "Password"
        },
        "routerID": {
          "type": "string",
          "x-go-name": "RouterID"
        },
        "securityGroupCreated": {
          "type": "boolean",
          "x-go-name": "SecurityGroupCreated"
        },
        "securityGroups": {
          "type": "string",
          "x-go-name": "SecurityGroups"
        },
        "subnetID": {
          "type": "string",
          "x-go-name": "SubnetID"
        },
        "tenant": {
          "type": "string",
          "x-go-name": "Tenant"
        },
        "username": {
          "type": "string",
          "x-go-name": "Username"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "OpenstackNodeSpec": {
      "type": "object",
      "title": "OpenstackNodeSpec specifies a open stack node.",
      "properties": {
        "flavor": {
          "type": "string",
          "x-go-name": "Flavor"
        },
        "image": {
          "type": "string",
          "x-go-name": "Image"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api"
    },
    "OperatingSystemSpec": {
      "description": "OperatingSystemSpec specifies operations system options",
      "type": "object",
      "properties": {
        "container_linux": {
          "$ref": "#/definitions/ContainerLinuxSpec"
        },
        "ssh_user": {
          "type": "string",
          "x-go-name": "SSHUser"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api"
    },
    "OwnerReference": {
      "description": "OwnerReference contains enough information to let you identify an owning\nobject. Currently, an owning object must be in the same namespace, so there\nis no namespace field.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "blockOwnerDeletion": {
          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional",
          "type": "boolean",
          "x-go-name": "BlockOwnerDeletion"
        },
        "controller": {
          "description": "If true, this reference points to the managing controller.\n+optional",
          "type": "boolean",
          "x-go-name": "Controller"
        },
        "kind": {
          "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string",
          "x-go-name": "Kind"
        },
        "name": {
          "description": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string",
          "x-go-name": "Name"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "RSAKeys": {
      "type": "object",
      "title": "RSAKeys is a pair of private and public key where the key is not published to the API client.",
      "properties": {
        "privateKey": {
          "$ref": "#/definitions/Bytes"
        },
        "publicKey": {
          "$ref": "#/definitions/Bytes"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "SSHKeySpec": {
      "type": "object",
      "properties": {
        "clusters": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Clusters"
        },
        "fingerprint": {
          "type": "string",
          "x-go-name": "Fingerprint"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "owner": {
          "type": "string",
          "x-go-name": "Owner"
        },
        "publicKey": {
          "type": "string",
          "x-go-name": "PublicKey"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "Status": {
      "type": "object",
      "title": "Status is a return value for calls that don't return other objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "code": {
          "description": "Suggested HTTP return code for this status, 0 if not set.\n+optional",
          "type": "integer",
          "format": "int32",
          "x-go-name": "Code"
        },
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that\nthe server has more data available. The value is opaque and may be used to issue another request\nto the endpoint that served this list to retrieve the next set of available objects. Continuing a\nlist may not be possible if the server configuration has changed or more than a few minutes have\npassed. The resourceVersion field returned when using this continue value will be identical to\nthe value in the first response.",
          "type": "string",
          "x-go-name": "Continue"
        },
        "details": {
          "$ref": "#/definitions/StatusDetails"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "message": {
          "description": "A human-readable description of the status of this operation.\n+optional",
          "type": "string",
          "x-go-name": "Message"
        },
        "reason": {
          "$ref": "#/definitions/StatusReason"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that\ncan be used by clients to determine when objects have changed.\nValue must be treated as opaque by clients and passed unmodified back to the server.\nPopulated by the system.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "selfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "status": {
          "description": "Status of the operation.\nOne of: \"Success\" or \"Failure\".\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status\n+optional",
          "type": "string",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "StatusCause": {
      "description": "StatusCause provides more information about an api.Status failure, including\ncases when multiple errors are encountered.",
      "type": "object",
      "properties": {
        "field": {
          "description": "The field of the resource that has caused this error, as named by its JSON\nserialization. May include dot and postfix notation for nested attributes.\nArrays are zero-indexed.  Fields may appear more than once in an array of\ncauses due to fields having multiple errors.\nOptional.\n\nExamples:\n\"name\" - the field \"name\" on the current resource\n\"items[0].name\" - the field \"name\" on the first array entry in \"items\"\n+optional",
          "type": "string",
          "x-go-name": "Field"
        },
        "message": {
          "description": "A human-readable description of the cause of the error.  This field may be\npresented as-is to a reader.\n+optional",
          "type": "string",
          "x-go-name": "Message"
        },
        "reason": {
          "$ref": "#/definitions/CauseType"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "StatusDetails": {
      "description": "StatusDetails is a set of additional properties that MAY be set by the\nserver to provide additional information about a response. The Reason\nfield of a Status object defines what attributes will be set. Clients\nmust ignore fields that do not match the defined type of each attribute,\nand should assume that any attribute may be empty, invalid, or under\ndefined.",
      "type": "object",
      "properties": {
        "causes": {
          "description": "The Causes array includes more details associated with the StatusReason\nfailure. Not all StatusReasons may provide detailed causes.\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCause"
          },
          "x-go-name": "Causes"
        },
        "group": {
          "description": "The group attribute of the resource associated with the status StatusReason.\n+optional",
          "type": "string",
          "x-go-name": "Group"
        },
        "kind": {
          "description": "The kind attribute of the resource associated with the status StatusReason.\nOn some operations may differ from the requested resource Kind.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "name": {
          "description": "The name attribute of the resource associated with the status StatusReason\n(when there is a single name which can be described).\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "retryAfterSeconds": {
          "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate\nthe client must take an alternate action - for those errors this field may indicate how long to wait\nbefore taking the alternate action.\n+optional",
          "type": "integer",
          "format": "int32",
          "x-go-name": "RetryAfterSeconds"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "StatusReason": {
      "description": "StatusReason is an enumeration of possible failure causes.  Each StatusReason\nmust map to a single HTTP status code, but multiple reasons may map\nto the same HTTP status code.\nTODO: move to apiserver",
      "type": "string",
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "Time": {
      "description": "+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
      "type": "object",
      "title": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.",
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "UID": {
      "description": "UID is a type that holds unique ID values, including UUIDs.  Because we\ndon't ONLY use UUIDs, this is an alias to string.  Being a type captures\nintent and helps make sure that UIDs and names do not get conflated.",
      "type": "string",
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/apimachinery/pkg/types"
    },
    "UserSpec": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Groups"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    }
  },
  "responses": {
    "APIError": {
      "description": "APIError we need to work with github.com/yvasiyarov/swagger\nbased on https://github.com/yvasiyarov/swagger/blob/master/example/data_structures.go",
      "headers": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "KubeCluster": {
      "description": "Cluster is the object representing a cluster.",
      "schema": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "$ref": "#/definitions/ClusterStatus"
      },
      "headers": {
        "address": {},
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional"
        },
        "clusterName": {
          "type": "string",
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional"
        },
        "creationTimestamp": {
          "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional"
        },
        "deletionGracePeriodSeconds": {
          "type": "integer",
          "format": "int64",
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional"
        },
        "deletionTimestamp": {
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field. Once set,\nthis value may not be unset or be set further into the future, although it may be shortened\nor the resource may be deleted prior to this time. For example, a user may request that\na pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination\nsignal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard\ntermination signal (SIGKILL) to the container and after cleanup, remove the pod from the\nAPI. In the presence of network partitions, this object may still exist after this\ntimestamp, until an administrator or automated process can determine the resource is\nfully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional"
        },
        "finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge"
        },
        "generateName": {
          "type": "string",
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional"
        },
        "generation": {
          "type": "integer",
          "format": "int64",
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional"
        },
        "initializers": {
          "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "name": {
          "type": "string",
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "selfLink": {
          "type": "string",
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional"
        },
        "spec": {},
        "status": {},
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
        }
      }
    },
    "KubeConfig": {
      "description": "KubeConfig is an alias for the swagger definition\nTODO(GvW): the go-swagger tool don't parse this correct"
    },
    "NodeList": {
      "description": "NodeList is an alias for the swagger definition"
    },
    "User": {
      "description": "User specifies a user\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object",
      "schema": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "$ref": "#/definitions/UserSpec"
      },
      "headers": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional"
        },
        "clusterName": {
          "type": "string",
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional"
        },
        "creationTimestamp": {
          "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional"
        },
        "deletionGracePeriodSeconds": {
          "type": "integer",
          "format": "int64",
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional"
        },
        "deletionTimestamp": {
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field. Once set,\nthis value may not be unset or be set further into the future, although it may be shortened\nor the resource may be deleted prior to this time. For example, a user may request that\na pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination\nsignal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard\ntermination signal (SIGKILL) to the container and after cleanup, remove the pod from the\nAPI. In the presence of network partitions, this object may still exist after this\ntimestamp, until an administrator or automated process can determine the resource is\nfully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional"
        },
        "finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge"
        },
        "generateName": {
          "type": "string",
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional"
        },
        "generation": {
          "type": "integer",
          "format": "int64",
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional"
        },
        "initializers": {
          "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "name": {
          "type": "string",
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "selfLink": {
          "type": "string",
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional"
        },
        "spec": {},
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
        }
      }
    },
    "UserSSHKey": {
      "description": "UserSSHKey specifies a users UserSSHKey\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object",
      "schema": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "$ref": "#/definitions/SSHKeySpec"
      },
      "headers": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional"
        },
        "clusterName": {
          "type": "string",
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional"
        },
        "creationTimestamp": {
          "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional"
        },
        "deletionGracePeriodSeconds": {
          "type": "integer",
          "format": "int64",
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional"
        },
        "deletionTimestamp": {
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field. Once set,\nthis value may not be unset or be set further into the future, although it may be shortened\nor the resource may be deleted prior to this time. For example, a user may request that\na pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination\nsignal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard\ntermination signal (SIGKILL) to the container and after cleanup, remove the pod from the\nAPI. In the presence of network partitions, this object may still exist after this\ntimestamp, until an administrator or automated process can determine the resource is\nfully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional"
        },
        "finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge"
        },
        "generateName": {
          "type": "string",
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional"
        },
        "generation": {
          "type": "integer",
          "format": "int64",
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional"
        },
        "initializers": {
          "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "name": {
          "type": "string",
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "selfLink": {
          "type": "string",
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional"
        },
        "spec": {},
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
        }
      }
    },
    "Versions": {
      "description": "Versions is an alias for the swagger defininiton"
    }
  }
}