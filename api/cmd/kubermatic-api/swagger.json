{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Kubermatic API\n\nThis describes possible operations which can be made against the Kubermatic API.",
    "title": "Kubermatic API.",
    "termsOfService": "there are no TOS at this moment, use at your own risk we take no responsibility",
    "version": "2.2.3"
  },
  "host": "cloud.kubermatic.io",
  "paths": {
    "/api/v1/dc": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "datacenter"
        ],
        "operationId": "listDatacenters",
        "responses": {
          "200": {
            "description": "DatacenterList",
            "schema": {
              "$ref": "#/definitions/DatacenterList"
            }
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/api/v1/dc/{dc}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "datacenter"
        ],
        "operationId": "getDatacenter",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "DC",
            "name": "dc",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Datacenter",
            "schema": {
              "$ref": "#/definitions/Datacenter"
            }
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/api/v1/digitalocean/sizes": {
      "get": {
        "description": "Lists sizes from digitalocean",
        "produces": [
          "application/json"
        ],
        "tags": [
          "digitalocean"
        ],
        "operationId": "listDigitaloceanSizes",
        "responses": {
          "200": {
            "description": "DigitaloceanSizeList",
            "schema": {
              "$ref": "#/definitions/DigitaloceanSizeList"
            }
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/api/v1/healthz": {
      "get": {
        "description": "Health endpoint",
        "operationId": "healthz",
        "responses": {
          "default": {
            "$ref": "#/responses/empty"
          }
        }
      }
    },
    "/api/v1/openstack/sizes": {
      "get": {
        "description": "Lists sizes from openstack",
        "produces": [
          "application/json"
        ],
        "tags": [
          "openstack"
        ],
        "operationId": "listOpenstackSizes",
        "responses": {
          "200": {
            "description": "OpenstackSize",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OpenstackSize"
              }
            }
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/api/v1/projects": {
      "get": {
        "security": [
          {
            "openIdConnect": [
              "[authenticated]"
            ]
          }
        ],
        "description": "This endpoint will list all projects that\nthe authenticated user is a member of",
        "produces": [
          "application/json"
        ],
        "summary": "List projects filtered by user",
        "operationId": "projects",
        "responses": {
          "200": {
            "$ref": "#/responses/ProjectList"
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      },
      "post": {
        "security": [
          {
            "openIdConnect": [
              "[authenticated]"
            ]
          }
        ],
        "description": "Allow to create a brand new project.\nThis endpoint can be consumed by every authenticated user.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create a project",
        "operationId": "project",
        "responses": {
          "201": {
            "description": "Project",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "409": {
            "$ref": "#/responses/AlreadyExists"
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/api/v1/projects/project": {
      "put": {
        "security": [
          {
            "openIdConnect": [
              "[admin]"
            ]
          }
        ],
        "description": "Updates the given project",
        "produces": [
          "application/json"
        ],
        "operationId": "project",
        "responses": {
          "200": {
            "description": "Project",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/api/v1/projects/{project_id}": {
      "delete": {
        "security": [
          {
            "openIdConnect": [
              "[owner]"
            ]
          }
        ],
        "description": "Note that only the project owner can delete the project.",
        "produces": [
          "application/json"
        ],
        "summary": "Deletes the project with the given ID.",
        "operationId": "project",
        "responses": {
          "200": {
            "$ref": "#/responses/empty"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/api/v1/ssh-keys": {
      "get": {
        "description": "Lists SSH keys from the user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "ssh-keys"
        ],
        "operationId": "listSSHKeys",
        "responses": {
          "200": {
            "description": "SSHKey",
            "schema": {
              "$ref": "#/definitions/SSHKey"
            }
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      },
      "post": {
        "description": "Creates a SSH keys for the user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ssh-keys"
        ],
        "operationId": "createSSHKey",
        "responses": {
          "200": {
            "description": "SSHKey",
            "schema": {
              "$ref": "#/definitions/SSHKey"
            }
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/api/v1/ssh-keys/{meta_name}": {
      "delete": {
        "description": "Deletes a SSH keys for the user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "ssh-keys"
        ],
        "operationId": "deleteSSHKey",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MetaName",
            "name": "meta_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/empty"
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/api/v1/versions": {
      "get": {
        "description": "Lists all versions which don't result in automatic updates",
        "produces": [
          "application/json"
        ],
        "tags": [
          "versions"
        ],
        "operationId": "getMasterVersions",
        "responses": {
          "200": {
            "description": "MasterVersion",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MasterVersion"
              }
            }
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/api/v2/cluster/{cluster}/nodes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "cluster"
        ],
        "operationId": "getClusterNodesV2",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "DC",
            "name": "dc",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClusterName",
            "name": "cluster",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "x-go-name": "HideInitialConditions",
            "name": "hideInitialConditions",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "NodeListV2",
            "schema": {
              "$ref": "#/definitions/NodeListV2"
            }
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "cluster"
        ],
        "operationId": "createClusterNodeV2",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "DC",
            "name": "dc",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClusterName",
            "name": "cluster",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateNodeReqBodyV2"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "NodeV2",
            "schema": {
              "$ref": "#/definitions/NodeV2"
            }
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/api/v2/cluster/{cluster}/nodes/{node}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "cluster"
        ],
        "operationId": "getClusterNodeV2",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "DC",
            "name": "dc",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClusterName",
            "name": "cluster",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "NodeName",
            "name": "node",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "NodeV2",
            "schema": {
              "$ref": "#/definitions/NodeV2"
            }
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "cluster"
        ],
        "operationId": "deleteClusterNodeV2",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "DC",
            "name": "dc",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClusterName",
            "name": "cluster",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "NodeName",
            "name": "node",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/empty"
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/api/v3/dc/{dc}/cluster": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "cluster"
        ],
        "operationId": "listClustersV3",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "DC",
            "name": "dc",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ClusterListV1",
            "schema": {
              "$ref": "#/definitions/ClusterListV1"
            }
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "cluster"
        ],
        "operationId": "createClusterV3",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "DC",
            "name": "dc",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NewClusterReqBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "ClusterV1",
            "schema": {
              "$ref": "#/definitions/ClusterV1"
            }
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/api/v3/dc/{dc}/cluster/{cluster}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "cluster"
        ],
        "operationId": "getClusterV3",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "DC",
            "name": "dc",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClusterName",
            "name": "cluster",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ClusterV1",
            "schema": {
              "$ref": "#/definitions/ClusterV1"
            }
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "cluster"
        ],
        "operationId": "updateClusterV3",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "DC",
            "name": "dc",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClusterName",
            "name": "cluster",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateClusterReqBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ClusterV1",
            "schema": {
              "$ref": "#/definitions/ClusterV1"
            }
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "cluster"
        ],
        "operationId": "deleteClusterV3",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "DC",
            "name": "dc",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClusterName",
            "name": "cluster",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/empty"
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/api/v3/dc/{dc}/cluster/{cluster}/kubeconfig": {
      "get": {
        "produces": [
          "application/yaml"
        ],
        "tags": [
          "cluster"
        ],
        "operationId": "getClusterKubeconfigV3",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "DC",
            "name": "dc",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClusterName",
            "name": "cluster",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Kubeconfig",
            "schema": {
              "$ref": "#/definitions/Kubeconfig"
            }
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/api/v3/dc/{dc}/cluster/{cluster}/node": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "cluster"
        ],
        "operationId": "getClusterNodesV3",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "DC",
            "name": "dc",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClusterName",
            "name": "cluster",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "x-go-name": "HideInitialConditions",
            "name": "hideInitialConditions",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "NodeListV2",
            "schema": {
              "$ref": "#/definitions/NodeListV2"
            }
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "cluster"
        ],
        "operationId": "createClusterNodeV3",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "DC",
            "name": "dc",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClusterName",
            "name": "cluster",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateNodeReqBodyV2"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "NodeV2",
            "schema": {
              "$ref": "#/definitions/NodeV2"
            }
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/api/v3/dc/{dc}/cluster/{cluster}/node/{node}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "cluster"
        ],
        "operationId": "getClusterNodeV3",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "DC",
            "name": "dc",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClusterName",
            "name": "cluster",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "NodeName",
            "name": "node",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "NodeV2",
            "schema": {
              "$ref": "#/definitions/NodeV2"
            }
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "cluster"
        ],
        "operationId": "deleteClusterNodeV3",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "DC",
            "name": "dc",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClusterName",
            "name": "cluster",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "NodeName",
            "name": "node",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/empty"
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/api/v3/dc/{dc}/cluster/{cluster}/upgrades": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "cluster"
        ],
        "operationId": "getClusterUpdatesV3",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "DC",
            "name": "dc",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClusterName",
            "name": "cluster",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "MasterVersion",
            "schema": {
              "$ref": "#/definitions/MasterVersion"
            }
          },
          "default": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "AWSCloudSpec": {
      "type": "object",
      "title": "AWSCloudSpec specifies access data to Amazon Web Services.",
      "properties": {
        "accessKeyId": {
          "type": "string",
          "x-go-name": "AccessKeyID"
        },
        "availabilityZone": {
          "type": "string",
          "x-go-name": "AvailabilityZone"
        },
        "instanceProfileName": {
          "type": "string",
          "x-go-name": "InstanceProfileName"
        },
        "roleName": {
          "type": "string",
          "x-go-name": "RoleName"
        },
        "routeTableId": {
          "type": "string",
          "x-go-name": "RouteTableID"
        },
        "secretAccessKey": {
          "type": "string",
          "x-go-name": "SecretAccessKey"
        },
        "securityGroupID": {
          "type": "string",
          "x-go-name": "SecurityGroupID"
        },
        "subnetId": {
          "type": "string",
          "x-go-name": "SubnetID"
        },
        "vpcId": {
          "type": "string",
          "x-go-name": "VPCID"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "AWSDatacenterSpec": {
      "type": "object",
      "title": "AWSDatacenterSpec specifies a data center of Amazon Web Services.",
      "properties": {
        "region": {
          "type": "string",
          "x-go-name": "Region"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "AWSNodeSpecV2": {
      "description": "AWSNodeSpec aws specific node settings",
      "type": "object",
      "required": [
        "instanceType",
        "diskSize",
        "volumeType"
      ],
      "properties": {
        "ami": {
          "description": "ami to use. Will be defaulted to a ami for your selected operating system and region. Only set this when you know what you do.",
          "type": "string",
          "x-go-name": "AMI"
        },
        "diskSize": {
          "description": "size of the volume in gb. Only one volume will be created",
          "type": "integer",
          "format": "int64",
          "x-go-name": "VolumeSize"
        },
        "instanceType": {
          "type": "string",
          "x-go-name": "InstanceType",
          "example": "t2.micro"
        },
        "tags": {
          "description": "additional instance tags",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Tags"
        },
        "volumeType": {
          "type": "string",
          "x-go-name": "VolumeType",
          "example": "gp2, io1, st1, sc1, standard"
        }
      },
      "x-go-name": "AWSNodeSpec",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v2"
    },
    "AttachedVolume": {
      "description": "AttachedVolume describes a volume attached to a node",
      "type": "object",
      "properties": {
        "devicePath": {
          "description": "DevicePath represents the device path where the volume should be available",
          "type": "string",
          "x-go-name": "DevicePath"
        },
        "name": {
          "$ref": "#/definitions/UniqueVolumeName"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/api/core/v1"
    },
    "AuthInfo": {
      "type": "object",
      "title": "AuthInfo contains information that describes identity information.  This is use to tell the kubernetes cluster who you are.",
      "properties": {
        "as": {
          "description": "Impersonate is the username to imperonate.  The name matches the flag.\n+optional",
          "type": "string",
          "x-go-name": "Impersonate"
        },
        "as-groups": {
          "description": "ImpersonateGroups is the groups to imperonate.\n+optional",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "ImpersonateGroups"
        },
        "as-user-extra": {
          "description": "ImpersonateUserExtra contains additional information for impersonated user.\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "x-go-name": "ImpersonateUserExtra"
        },
        "auth-provider": {
          "$ref": "#/definitions/AuthProviderConfig"
        },
        "client-certificate": {
          "description": "ClientCertificate is the path to a client cert file for TLS.\n+optional",
          "type": "string",
          "x-go-name": "ClientCertificate"
        },
        "client-certificate-data": {
          "description": "ClientCertificateData contains PEM-encoded data from a client cert file for TLS. Overrides ClientCertificate\n+optional",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8"
          },
          "x-go-name": "ClientCertificateData"
        },
        "client-key": {
          "description": "ClientKey is the path to a client key file for TLS.\n+optional",
          "type": "string",
          "x-go-name": "ClientKey"
        },
        "client-key-data": {
          "description": "ClientKeyData contains PEM-encoded data from a client key file for TLS. Overrides ClientKey\n+optional",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8"
          },
          "x-go-name": "ClientKeyData"
        },
        "exec": {
          "$ref": "#/definitions/ExecConfig"
        },
        "extensions": {
          "description": "Extensions holds additional information. This is useful for extenders so that reads and writes don't clobber unknown fields\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedExtension"
          },
          "x-go-name": "Extensions"
        },
        "password": {
          "description": "Password is the password for basic authentication to the kubernetes cluster.\n+optional",
          "type": "string",
          "x-go-name": "Password"
        },
        "token": {
          "description": "Token is the bearer token for authentication to the kubernetes cluster.\n+optional",
          "type": "string",
          "x-go-name": "Token"
        },
        "tokenFile": {
          "description": "TokenFile is a pointer to a file that contains a bearer token (as described above).  If both Token and TokenFile are present, Token takes precedence.\n+optional",
          "type": "string",
          "x-go-name": "TokenFile"
        },
        "username": {
          "description": "Username is the username for basic authentication to the kubernetes cluster.\n+optional",
          "type": "string",
          "x-go-name": "Username"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/client-go/tools/clientcmd/api/v1"
    },
    "AuthProviderConfig": {
      "type": "object",
      "title": "AuthProviderConfig holds the configuration for a specified auth provider.",
      "properties": {
        "config": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Config"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/client-go/tools/clientcmd/api/v1"
    },
    "AvailableMasterVersions": {
      "description": "AvailableMasterVersions describes all possible update versions for a cluster",
      "type": "array",
      "items": {
        "$ref": "#/definitions/MasterVersion"
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "AzureDatacenterSpec": {
      "type": "object",
      "title": "AzureDatacenterSpec specifies a datacenter of Azure.",
      "properties": {
        "location": {
          "type": "string",
          "x-go-name": "Location"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "BringYourOwnCloudSpec": {
      "type": "object",
      "title": "BringYourOwnCloudSpec specifies access data for a bring your own cluster.",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "BringYourOwnDatacenterSpec": {
      "type": "object",
      "title": "BringYourOwnDatacenterSpec specifies a data center with bring-your-own nodes.",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "Bytes": {
      "type": "array",
      "items": {
        "type": "integer",
        "format": "uint8"
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "CauseType": {
      "description": "CauseType is a machine readable value providing more detail about what\noccurred in a status response. An operation may have multiple causes for a\nstatus (whether Failure or Success).",
      "type": "string",
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "CloudSpec": {
      "type": "object",
      "title": "CloudSpec mutually stores access data to a cloud provider.",
      "properties": {
        "aws": {
          "$ref": "#/definitions/AWSCloudSpec"
        },
        "bringyourown": {
          "$ref": "#/definitions/BringYourOwnCloudSpec"
        },
        "dc": {
          "description": "DatacenterName where the users 'cloud' lives in.",
          "type": "string",
          "x-go-name": "DatacenterName"
        },
        "digitalocean": {
          "$ref": "#/definitions/DigitaloceanCloudSpec"
        },
        "fake": {
          "$ref": "#/definitions/FakeCloudSpec"
        },
        "hetzner": {
          "$ref": "#/definitions/HetznerCloudSpec"
        },
        "openstack": {
          "$ref": "#/definitions/OpenstackCloudSpec"
        },
        "vsphere": {
          "$ref": "#/definitions/VSphereCloudSpec"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "Cluster": {
      "type": "object",
      "title": "Cluster is the object representing a cluster.",
      "properties": {
        "address": {
          "$ref": "#/definitions/ClusterAddress"
        },
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DeletionGracePeriodSeconds"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Finalizers"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
          "type": "string",
          "x-go-name": "GenerateName"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Generation"
        },
        "initializers": {
          "$ref": "#/definitions/Initializers"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "x-go-name": "OwnerReferences"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "spec": {
          "$ref": "#/definitions/ClusterSpec"
        },
        "status": {
          "$ref": "#/definitions/ClusterStatus"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "ClusterAddress": {
      "type": "object",
      "title": "ClusterAddress stores access and address information of a cluster.",
      "properties": {
        "adminToken": {
          "type": "string",
          "x-go-name": "AdminToken"
        },
        "externalName": {
          "type": "string",
          "x-go-name": "ExternalName"
        },
        "ip": {
          "type": "string",
          "x-go-name": "IP"
        },
        "kubeletToken": {
          "type": "string",
          "x-go-name": "KubeletToken"
        },
        "url": {
          "type": "string",
          "x-go-name": "URL"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "ClusterHealth": {
      "type": "object",
      "title": "ClusterHealth stores health information of a cluster and the timestamp of the last change.",
      "properties": {
        "apiserver": {
          "type": "boolean",
          "x-go-name": "Apiserver"
        },
        "controller": {
          "type": "boolean",
          "x-go-name": "Controller"
        },
        "etcd": {
          "type": "boolean",
          "x-go-name": "Etcd"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/Time"
        },
        "machineController": {
          "type": "boolean",
          "x-go-name": "MachineController"
        },
        "scheduler": {
          "type": "boolean",
          "x-go-name": "Scheduler"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "ClusterListV1": {
      "description": "ClusterList represents a list of clusters",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ClusterV1"
      },
      "x-go-name": "ClusterList",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "ClusterNetworkingConfig": {
      "description": "ClusterNetworkingConfig specifies the different networking\nparameters for a cluster.",
      "type": "object",
      "properties": {
        "dnsDomain": {
          "description": "Domain name for services.",
          "type": "string",
          "x-go-name": "DNSDomain"
        },
        "pods": {
          "$ref": "#/definitions/NetworkRanges"
        },
        "services": {
          "$ref": "#/definitions/NetworkRanges"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "ClusterPhase": {
      "type": "string",
      "title": "ClusterPhase is the life cycle phase of a cluster.",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "ClusterSpec": {
      "type": "object",
      "title": "ClusterSpec specifies the data for a new cluster.",
      "properties": {
        "cloud": {
          "$ref": "#/definitions/CloudSpec"
        },
        "clusterNetwork": {
          "$ref": "#/definitions/ClusterNetworkingConfig"
        },
        "humanReadableName": {
          "type": "string",
          "x-go-name": "HumanReadableName"
        },
        "masterVersion": {
          "type": "string",
          "x-go-name": "MasterVersion"
        },
        "pause": {
          "description": "Pause tells that this cluster is currently not managed by the controller.\nIt indicates that the user needs to do some action to resolve the pause.",
          "type": "boolean",
          "x-go-name": "Pause"
        },
        "pauseReason": {
          "description": "PauseReason is the reason why the cluster is no being managed.",
          "type": "string",
          "x-go-name": "PauseReason"
        },
        "version": {
          "type": "string",
          "x-go-name": "Version"
        },
        "workerName": {
          "type": "string",
          "x-go-name": "WorkerName"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "ClusterStatus": {
      "type": "object",
      "title": "ClusterStatus stores status information about a cluster.",
      "properties": {
        "apiserverCert": {
          "$ref": "#/definitions/KeyCert"
        },
        "apiserverSshKey": {
          "$ref": "#/definitions/RSAKeys"
        },
        "errorMessage": {
          "type": "string",
          "x-go-name": "ErrorMessage"
        },
        "errorReason": {
          "$ref": "#/definitions/ClusterStatusError"
        },
        "health": {
          "$ref": "#/definitions/ClusterHealth"
        },
        "kubeletCert": {
          "$ref": "#/definitions/KeyCert"
        },
        "lastDeployedMasterVersion": {
          "type": "string",
          "x-go-name": "LastDeployedMasterVersion"
        },
        "lastUpdated": {
          "$ref": "#/definitions/Time"
        },
        "namespaceName": {
          "type": "string",
          "x-go-name": "NamespaceName"
        },
        "phase": {
          "$ref": "#/definitions/ClusterPhase"
        },
        "rootCA": {
          "$ref": "#/definitions/KeyCert"
        },
        "serviceAccountKey": {
          "$ref": "#/definitions/Bytes"
        },
        "userEmail": {
          "type": "string",
          "x-go-name": "UserEmail"
        },
        "userName": {
          "type": "string",
          "x-go-name": "UserName"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "ClusterStatusError": {
      "type": "string",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "ClusterV1": {
      "type": "object",
      "title": "Cluster is the object representing a cluster.",
      "properties": {
        "address": {
          "$ref": "#/definitions/ClusterAddress"
        },
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DeletionGracePeriodSeconds"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Finalizers"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
          "type": "string",
          "x-go-name": "GenerateName"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Generation"
        },
        "initializers": {
          "$ref": "#/definitions/Initializers"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "x-go-name": "OwnerReferences"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "spec": {
          "$ref": "#/definitions/ClusterSpec"
        },
        "status": {
          "$ref": "#/definitions/ClusterStatus"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-name": "Cluster",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "ConditionStatus": {
      "type": "string",
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/api/core/v1"
    },
    "ContainerImage": {
      "description": "Describe a container image",
      "type": "object",
      "properties": {
        "names": {
          "description": "Names by which this image is known.\ne.g. [\"k8s.gcr.io/hyperkube:v1.0.7\", \"dockerhub.io/google_containers/hyperkube:v1.0.7\"]",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Names"
        },
        "sizeBytes": {
          "description": "The size of the image in bytes.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "SizeBytes"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/api/core/v1"
    },
    "ContainerLinuxSpecV2": {
      "description": "ContainerLinuxSpec ubuntu linux specific settings",
      "type": "object",
      "properties": {
        "disableAutoUpdate": {
          "description": "disable container linux auto-update feature",
          "type": "boolean",
          "x-go-name": "DisableAutoUpdate"
        }
      },
      "x-go-name": "ContainerLinuxSpec",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v2"
    },
    "Context": {
      "description": "Context is a tuple of references to a cluster (how do I communicate with a kubernetes cluster), a user (how do I identify myself), and a namespace (what subset of resources do I want to work with)",
      "type": "object",
      "properties": {
        "cluster": {
          "description": "Cluster is the name of the cluster for this context",
          "type": "string",
          "x-go-name": "Cluster"
        },
        "extensions": {
          "description": "Extensions holds additional information. This is useful for extenders so that reads and writes don't clobber unknown fields\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedExtension"
          },
          "x-go-name": "Extensions"
        },
        "namespace": {
          "description": "Namespace is the default namespace to use on unspecified requests\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "user": {
          "description": "AuthInfo is the name of the authInfo for this context",
          "type": "string",
          "x-go-name": "AuthInfo"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/client-go/tools/clientcmd/api/v1"
    },
    "CreateClusterReqBody": {
      "description": "CreateClusterReqBody represents the request body for a create cluster request",
      "type": "object",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/Cluster"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/handler"
    },
    "CreateNodeReqBodyV2": {
      "description": "CreateNodeReqBodyV2 represents the request body of a create nodes request",
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "metadata": {
          "$ref": "#/definitions/ObjectMetaV2"
        },
        "spec": {
          "$ref": "#/definitions/NodeSpecV2"
        },
        "status": {
          "$ref": "#/definitions/NodeStatusV2"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/handler"
    },
    "CreateNodesReqBody": {
      "description": "CreateNodesReqBody represents the request body of a create nodes request",
      "type": "object",
      "properties": {
        "instances": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Instances"
        },
        "spec": {
          "$ref": "#/definitions/NodeSpec"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/handler"
    },
    "DaemonEndpoint": {
      "type": "object",
      "title": "DaemonEndpoint contains information about a single Daemon endpoint.",
      "properties": {
        "Port": {
          "description": "Port number of the given endpoint.",
          "type": "integer",
          "format": "int32"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/api/core/v1"
    },
    "Datacenter": {
      "type": "object",
      "title": "Datacenter is the object representing a Kubernetes infra datacenter.",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/ObjectMeta"
        },
        "seed": {
          "type": "boolean",
          "x-go-name": "Seed"
        },
        "spec": {
          "$ref": "#/definitions/DatacenterSpec"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "DatacenterList": {
      "description": "DatacenterList represents a list of datacenters",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Datacenter"
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "DatacenterSpec": {
      "type": "object",
      "title": "DatacenterSpec specifies the data for a datacenter.",
      "properties": {
        "aws": {
          "$ref": "#/definitions/AWSDatacenterSpec"
        },
        "azure": {
          "$ref": "#/definitions/AzureDatacenterSpec"
        },
        "bringyourown": {
          "$ref": "#/definitions/BringYourOwnDatacenterSpec"
        },
        "country": {
          "type": "string",
          "x-go-name": "Country"
        },
        "digitalocean": {
          "$ref": "#/definitions/DigitialoceanDatacenterSpec"
        },
        "hetzner": {
          "$ref": "#/definitions/HetznerDatacenterSpec"
        },
        "location": {
          "type": "string",
          "x-go-name": "Location"
        },
        "openstack": {
          "$ref": "#/definitions/OpenstackDatacenterSpec"
        },
        "provider": {
          "type": "string",
          "x-go-name": "Provider"
        },
        "seed": {
          "type": "string",
          "x-go-name": "Seed"
        },
        "vsphere": {
          "$ref": "#/definitions/VSphereDatacenterSpec"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "DigitaloceanCloudSpec": {
      "type": "object",
      "title": "DigitaloceanCloudSpec specifies access data to DigitalOcean.",
      "properties": {
        "token": {
          "type": "string",
          "x-go-name": "Token"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "DigitaloceanNodeSpecV2": {
      "description": "DigitaloceanNodeSpec digitalocean node settings",
      "type": "object",
      "required": [
        "size"
      ],
      "properties": {
        "backups": {
          "description": "enable backups for the droplet",
          "type": "boolean",
          "x-go-name": "Backups"
        },
        "ipv6": {
          "description": "enable ipv6 for the droplet",
          "type": "boolean",
          "x-go-name": "IPv6"
        },
        "monitoring": {
          "description": "enable monitoring for the droplet",
          "type": "boolean",
          "x-go-name": "Monitoring"
        },
        "size": {
          "description": "droplet size slug",
          "type": "string",
          "x-go-name": "Size"
        },
        "tags": {
          "description": "additional droplet tags",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Tags"
        }
      },
      "x-go-name": "DigitaloceanNodeSpec",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v2"
    },
    "DigitaloceanSize": {
      "type": "object",
      "title": "DigitaloceanSize is the object representing digitalocean sizes.",
      "properties": {
        "available": {
          "type": "boolean",
          "x-go-name": "Available"
        },
        "disk": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Disk"
        },
        "memory": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Memory"
        },
        "price_hourly": {
          "type": "number",
          "format": "double",
          "x-go-name": "PriceHourly"
        },
        "price_monthly": {
          "type": "number",
          "format": "double",
          "x-go-name": "PriceMonthly"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Regions"
        },
        "slug": {
          "type": "string",
          "x-go-name": "Slug"
        },
        "transfer": {
          "type": "number",
          "format": "double",
          "x-go-name": "Transfer"
        },
        "vcpus": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "VCPUs"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "DigitaloceanSizeList": {
      "type": "object",
      "title": "DigitaloceanSizeList represents a object of digitalocean sizes.",
      "properties": {
        "optimized": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DigitaloceanSize"
          },
          "x-go-name": "Optimized"
        },
        "standard": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DigitaloceanSize"
          },
          "x-go-name": "Standard"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "DigitialoceanDatacenterSpec": {
      "type": "object",
      "title": "DigitialoceanDatacenterSpec specifies a datacenter of DigitalOcean.",
      "properties": {
        "region": {
          "type": "string",
          "x-go-name": "Region"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "ErrorDetails": {
      "description": "ErrorDetails contains details about the error",
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "The error code",
          "type": "integer",
          "format": "int64",
          "x-go-name": "ErrorCode"
        },
        "message": {
          "description": "The error message",
          "type": "string",
          "x-go-name": "ErrorMessage"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/handler"
    },
    "ExecConfig": {
      "description": "See the client.authentiction.k8s.io API group for specifications of the exact input\nand output format",
      "type": "object",
      "title": "ExecConfig specifies a command to provide client credentials. The command is exec'd\nand outputs structured stdout holding credentials.",
      "properties": {
        "apiVersion": {
          "description": "Preferred input version of the ExecInfo. The returned ExecCredentials MUST use\nthe same encoding version as the input.",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "args": {
          "description": "Arguments to pass to the command when executing it.\n+optional",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Args"
        },
        "command": {
          "description": "Command to execute.",
          "type": "string",
          "x-go-name": "Command"
        },
        "env": {
          "description": "Env defines additional environment variables to expose to the process. These\nare unioned with the host's environment, as well as variables client-go uses\nto pass argument to the plugin.\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExecEnvVar"
          },
          "x-go-name": "Env"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/client-go/tools/clientcmd/api/v1"
    },
    "ExecEnvVar": {
      "description": "ExecEnvVar is used for setting environment variables when executing an exec-based\ncredential plugin.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "value": {
          "type": "string",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/client-go/tools/clientcmd/api/v1"
    },
    "FakeCloudSpec": {
      "type": "object",
      "title": "FakeCloudSpec specifies access data for a fake cloud.",
      "properties": {
        "token": {
          "type": "string",
          "x-go-name": "Token"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "HetznerCloudSpec": {
      "type": "object",
      "title": "HetznerCloudSpec specifies access data to hetzner cloud.",
      "properties": {
        "token": {
          "type": "string",
          "x-go-name": "Token"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "HetznerDatacenterSpec": {
      "type": "object",
      "title": "HetznerDatacenterSpec specifies a datacenter of Hetzner.",
      "properties": {
        "datacenter": {
          "type": "string",
          "x-go-name": "Datacenter"
        },
        "location": {
          "type": "string",
          "x-go-name": "Location"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "HetznerNodeSpecV2": {
      "description": "HetznerNodeSpec Hetzner node settings",
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "server type",
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-name": "HetznerNodeSpec",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v2"
    },
    "Initializer": {
      "type": "object",
      "title": "Initializer is information about an initializer that has not yet completed.",
      "properties": {
        "name": {
          "description": "name of the process that is responsible for initializing this object.",
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "Initializers": {
      "type": "object",
      "title": "Initializers tracks the progress of initialization.",
      "properties": {
        "pending": {
          "description": "Pending is a list of initializers that must execute in order before this object is visible.\nWhen the last pending initializer is removed, and no failing result is set, the initializers\nstruct will be set to nil and the object is considered as initialized and visible to all\nclients.\n+patchMergeKey=name\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Initializer"
          },
          "x-go-name": "Pending"
        },
        "result": {
          "$ref": "#/definitions/Status"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "KeyCert": {
      "type": "object",
      "title": "KeyCert is a pair of key and cert.",
      "properties": {
        "cert": {
          "$ref": "#/definitions/Bytes"
        },
        "key": {
          "$ref": "#/definitions/Bytes"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "Kubeconfig": {
      "description": "Kubeconfig is a clusters kubeconfig",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "Legacy field from pkg/api/types.go TypeMeta.\nTODO(jlowdermilk): remove this after eliminating downstream dependencies.\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "clusters": {
          "description": "Clusters is a map of referencable names to cluster configs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedCluster"
          },
          "x-go-name": "Clusters"
        },
        "contexts": {
          "description": "Contexts is a map of referencable names to context configs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedContext"
          },
          "x-go-name": "Contexts"
        },
        "current-context": {
          "description": "CurrentContext is the name of the context that you would like to use by default",
          "type": "string",
          "x-go-name": "CurrentContext"
        },
        "extensions": {
          "description": "Extensions holds additional information. This is useful for extenders so that reads and writes don't clobber unknown fields\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedExtension"
          },
          "x-go-name": "Extensions"
        },
        "kind": {
          "description": "Legacy field from pkg/api/types.go TypeMeta.\nTODO(jlowdermilk): remove this after eliminating downstream dependencies.\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "preferences": {
          "$ref": "#/definitions/Preferences"
        },
        "users": {
          "description": "AuthInfos is a map of referencable names to user configs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedAuthInfo"
          },
          "x-go-name": "AuthInfos"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "MasterVersion": {
      "description": "MasterVersion describes a version of the master components",
      "type": "object",
      "properties": {
        "allowedNodeVersions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "AllowedNodeVersions"
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "NamedAuthInfo": {
      "description": "NamedAuthInfo relates nicknames to auth information",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name is the nickname for this AuthInfo",
          "type": "string",
          "x-go-name": "Name"
        },
        "user": {
          "$ref": "#/definitions/AuthInfo"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/client-go/tools/clientcmd/api/v1"
    },
    "NamedCluster": {
      "description": "NamedCluster relates nicknames to cluster information",
      "type": "object",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/Cluster"
        },
        "name": {
          "description": "Name is the nickname for this Cluster",
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/client-go/tools/clientcmd/api/v1"
    },
    "NamedContext": {
      "description": "NamedContext relates nicknames to context information",
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/Context"
        },
        "name": {
          "description": "Name is the nickname for this Context",
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/client-go/tools/clientcmd/api/v1"
    },
    "NamedExtension": {
      "description": "NamedExtension relates nicknames to extension information",
      "type": "object",
      "properties": {
        "extension": {
          "$ref": "#/definitions/RawExtension"
        },
        "name": {
          "description": "Name is the nickname for this Extension",
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/client-go/tools/clientcmd/api/v1"
    },
    "NetworkRanges": {
      "type": "object",
      "title": "NetworkRanges represents ranges of network addresses.",
      "properties": {
        "cidrBlocks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "CIDRBlocks"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "NewClusterReqBody": {
      "description": "NewClusterReqBody represents the body of a new cluster request",
      "type": "object",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/ClusterSpec"
        },
        "sshKeys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "SSHKeys"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/handler"
    },
    "NodeAddress": {
      "type": "object",
      "title": "NodeAddress contains information for the node's address.",
      "properties": {
        "address": {
          "description": "The node address.",
          "type": "string",
          "x-go-name": "Address"
        },
        "type": {
          "$ref": "#/definitions/NodeAddressType"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/api/core/v1"
    },
    "NodeAddressType": {
      "type": "string",
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/api/core/v1"
    },
    "NodeAddressV2": {
      "type": "object",
      "title": "NodeAddress contains information for the node's address.",
      "properties": {
        "address": {
          "type": "string",
          "x-go-name": "Address",
          "example": "192.168.1.1, node1.my.dns"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type",
          "example": "ExternalIP, InternalIP, InternalDNS, ExternalDNS"
        }
      },
      "x-go-name": "NodeAddress",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v2"
    },
    "NodeCloudSpecV2": {
      "type": "object",
      "title": "NodeCloudSpec represents the collection of cloud provider specific settings. Only one must be set at a time.",
      "properties": {
        "aws": {
          "$ref": "#/definitions/AWSNodeSpecV2"
        },
        "digitalocean": {
          "$ref": "#/definitions/DigitaloceanNodeSpecV2"
        },
        "hetzner": {
          "$ref": "#/definitions/HetznerNodeSpecV2"
        },
        "openstack": {
          "$ref": "#/definitions/OpenstackNodeSpecV2"
        },
        "vsphere": {
          "$ref": "#/definitions/VSphereNodeSpecV2"
        }
      },
      "x-go-name": "NodeCloudSpec",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v2"
    },
    "NodeCondition": {
      "type": "object",
      "title": "NodeCondition contains condition information for a node.",
      "properties": {
        "lastHeartbeatTime": {
          "$ref": "#/definitions/Time"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/Time"
        },
        "message": {
          "description": "Human readable message indicating details about last transition.\n+optional",
          "type": "string",
          "x-go-name": "Message"
        },
        "reason": {
          "description": "(brief) reason for the condition's last transition.\n+optional",
          "type": "string",
          "x-go-name": "Reason"
        },
        "status": {
          "$ref": "#/definitions/ConditionStatus"
        },
        "type": {
          "$ref": "#/definitions/NodeConditionType"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/api/core/v1"
    },
    "NodeConditionType": {
      "type": "string",
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/api/core/v1"
    },
    "NodeConfigSource": {
      "type": "object",
      "title": "NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "configMapRef": {
          "$ref": "#/definitions/ObjectReference"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/api/core/v1"
    },
    "NodeContainerRuntimeInfoV2": {
      "description": "NodeContainerRuntimeInfo information about the container runtime. Currently only \"cri-o\" and \"docker\" are supported",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "version": {
          "type": "string",
          "x-go-name": "Version"
        }
      },
      "x-go-name": "NodeContainerRuntimeInfo",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v2"
    },
    "NodeDaemonEndpoints": {
      "type": "object",
      "title": "NodeDaemonEndpoints lists ports opened by daemons running on the Node.",
      "properties": {
        "kubeletEndpoint": {
          "$ref": "#/definitions/DaemonEndpoint"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/api/core/v1"
    },
    "NodeListV1": {
      "description": "NodeList represents a list of nodes",
      "type": "array",
      "items": {
        "$ref": "#/definitions/NodeV1"
      },
      "x-go-name": "NodeList",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "NodeListV2": {
      "description": "NodeList represents a list of nodes",
      "type": "array",
      "items": {
        "$ref": "#/definitions/NodeV2"
      },
      "x-go-name": "NodeList",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v2"
    },
    "NodePhase": {
      "type": "string",
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/api/core/v1"
    },
    "NodeResourcesV2": {
      "description": "NodeResources cpu and memory of a node",
      "type": "object",
      "properties": {
        "cpu": {
          "type": "string",
          "x-go-name": "CPU"
        },
        "memory": {
          "type": "string",
          "x-go-name": "Memory"
        }
      },
      "x-go-name": "NodeResources",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v2"
    },
    "NodeSpec": {
      "type": "object",
      "title": "NodeSpec describes the attributes that a node is created with.",
      "properties": {
        "configSource": {
          "$ref": "#/definitions/NodeConfigSource"
        },
        "externalID": {
          "description": "External ID of the node assigned by some machine database (e.g. a cloud provider).\nDeprecated.\n+optional",
          "type": "string",
          "x-go-name": "ExternalID"
        },
        "podCIDR": {
          "description": "PodCIDR represents the pod IP range assigned to the node.\n+optional",
          "type": "string",
          "x-go-name": "PodCIDR"
        },
        "providerID": {
          "description": "ID of the node assigned by the cloud provider in the format: \u003cProviderName\u003e://\u003cProviderSpecificNodeID\u003e\n+optional",
          "type": "string",
          "x-go-name": "ProviderID"
        },
        "taints": {
          "description": "If specified, the node's taints.\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Taint"
          },
          "x-go-name": "Taints"
        },
        "unschedulable": {
          "description": "Unschedulable controls node schedulability of new pods. By default, node is schedulable.\nMore info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration\n+optional",
          "type": "boolean",
          "x-go-name": "Unschedulable"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/api/core/v1"
    },
    "NodeSpecV2": {
      "description": "NodeSpec node specification",
      "type": "object",
      "required": [
        "cloud",
        "operatingSystem",
        "versions"
      ],
      "properties": {
        "cloud": {
          "$ref": "#/definitions/NodeCloudSpecV2"
        },
        "operatingSystem": {
          "$ref": "#/definitions/OperatingSystemSpecV2"
        },
        "versions": {
          "$ref": "#/definitions/NodeVersionInfoV2"
        }
      },
      "x-go-name": "NodeSpec",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v2"
    },
    "NodeStatus": {
      "type": "object",
      "title": "NodeStatus is information about the current status of a node.",
      "properties": {
        "addresses": {
          "description": "List of addresses reachable to the node.\nQueried from cloud provider, if available.\nMore info: https://kubernetes.io/docs/concepts/nodes/node/#addresses\n+optional\n+patchMergeKey=type\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeAddress"
          },
          "x-go-name": "Addresses"
        },
        "allocatable": {
          "$ref": "#/definitions/ResourceList"
        },
        "capacity": {
          "$ref": "#/definitions/ResourceList"
        },
        "conditions": {
          "description": "Conditions is an array of current observed node conditions.\nMore info: https://kubernetes.io/docs/concepts/nodes/node/#condition\n+optional\n+patchMergeKey=type\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeCondition"
          },
          "x-go-name": "Conditions"
        },
        "daemonEndpoints": {
          "$ref": "#/definitions/NodeDaemonEndpoints"
        },
        "images": {
          "description": "List of container images on this node\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerImage"
          },
          "x-go-name": "Images"
        },
        "nodeInfo": {
          "$ref": "#/definitions/NodeSystemInfo"
        },
        "phase": {
          "$ref": "#/definitions/NodePhase"
        },
        "volumesAttached": {
          "description": "List of volumes that are attached to the node.\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachedVolume"
          },
          "x-go-name": "VolumesAttached"
        },
        "volumesInUse": {
          "description": "List of attachable volumes in use (mounted) by the node.\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UniqueVolumeName"
          },
          "x-go-name": "VolumesInUse"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/api/core/v1"
    },
    "NodeStatusV2": {
      "type": "object",
      "title": "NodeStatus is information about the current status of a node.",
      "properties": {
        "addresses": {
          "description": "different addresses of a node",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeAddressV2"
          },
          "x-go-name": "Addresses"
        },
        "allocatable": {
          "$ref": "#/definitions/NodeResourcesV2"
        },
        "capacity": {
          "$ref": "#/definitions/NodeResourcesV2"
        },
        "errorMessage": {
          "description": "in case of a error this will contain a detailed error explanation",
          "type": "string",
          "x-go-name": "ErrorMessage"
        },
        "errorReason": {
          "description": "in case of a error this will contain a short error message",
          "type": "string",
          "x-go-name": "ErrorReason"
        },
        "machineName": {
          "description": "name of the actual Machine object",
          "type": "string",
          "x-go-name": "MachineName"
        },
        "nodeInfo": {
          "$ref": "#/definitions/NodeSystemInfoV2"
        }
      },
      "x-go-name": "NodeStatus",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v2"
    },
    "NodeSystemInfo": {
      "type": "object",
      "title": "NodeSystemInfo is a set of ids/uuids to uniquely identify the node.",
      "properties": {
        "architecture": {
          "description": "The Architecture reported by the node",
          "type": "string",
          "x-go-name": "Architecture"
        },
        "bootID": {
          "description": "Boot ID reported by the node.",
          "type": "string",
          "x-go-name": "BootID"
        },
        "containerRuntimeVersion": {
          "description": "ContainerRuntime Version reported by the node through runtime remote API (e.g. docker://1.5.0).",
          "type": "string",
          "x-go-name": "ContainerRuntimeVersion"
        },
        "kernelVersion": {
          "description": "Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).",
          "type": "string",
          "x-go-name": "KernelVersion"
        },
        "kubeProxyVersion": {
          "description": "KubeProxy Version reported by the node.",
          "type": "string",
          "x-go-name": "KubeProxyVersion"
        },
        "kubeletVersion": {
          "description": "Kubelet Version reported by the node.",
          "type": "string",
          "x-go-name": "KubeletVersion"
        },
        "machineID": {
          "description": "MachineID reported by the node. For unique machine identification\nin the cluster this field is preferred. Learn more from man(5)\nmachine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html",
          "type": "string",
          "x-go-name": "MachineID"
        },
        "operatingSystem": {
          "description": "The Operating System reported by the node",
          "type": "string",
          "x-go-name": "OperatingSystem"
        },
        "osImage": {
          "description": "OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).",
          "type": "string",
          "x-go-name": "OSImage"
        },
        "systemUUID": {
          "description": "SystemUUID reported by the node. For unique machine identification\nMachineID is preferred. This field is specific to Red Hat hosts\nhttps://access.redhat.com/documentation/en-US/Red_Hat_Subscription_Management/1/html/RHSM/getting-system-uuid.html",
          "type": "string",
          "x-go-name": "SystemUUID"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/api/core/v1"
    },
    "NodeSystemInfoV2": {
      "type": "object",
      "title": "NodeSystemInfo is a set of versions/ids/uuids to uniquely identify the node.",
      "properties": {
        "architecture": {
          "type": "string",
          "x-go-name": "Architecture"
        },
        "containerRuntime": {
          "type": "string",
          "x-go-name": "ContainerRuntime"
        },
        "containerRuntimeVersion": {
          "type": "string",
          "x-go-name": "ContainerRuntimeVersion"
        },
        "kernelVersion": {
          "type": "string",
          "x-go-name": "KernelVersion"
        },
        "kubeletVersion": {
          "type": "string",
          "x-go-name": "KubeletVersion"
        },
        "operatingSystem": {
          "type": "string",
          "x-go-name": "OperatingSystem"
        }
      },
      "x-go-name": "NodeSystemInfo",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v2"
    },
    "NodeV1": {
      "type": "object",
      "title": "Node is the object representing a cluster node.",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DeletionGracePeriodSeconds"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Finalizers"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
          "type": "string",
          "x-go-name": "GenerateName"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Generation"
        },
        "initializers": {
          "$ref": "#/definitions/Initializers"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "x-go-name": "OwnerReferences"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "spec": {
          "$ref": "#/definitions/NodeSpec"
        },
        "status": {
          "$ref": "#/definitions/NodeStatus"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-name": "Node",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "NodeV2": {
      "type": "object",
      "title": "Node is the object representing a cluster node.",
      "required": [
        "spec"
      ],
      "properties": {
        "metadata": {
          "$ref": "#/definitions/ObjectMetaV2"
        },
        "spec": {
          "$ref": "#/definitions/NodeSpecV2"
        },
        "status": {
          "$ref": "#/definitions/NodeStatusV2"
        }
      },
      "x-go-name": "Node",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v2"
    },
    "NodeVersionInfoV2": {
      "description": "NodeVersionInfo node version information",
      "type": "object",
      "properties": {
        "containerRuntime": {
          "$ref": "#/definitions/NodeContainerRuntimeInfoV2"
        },
        "kubelet": {
          "type": "string",
          "x-go-name": "Kubelet"
        }
      },
      "x-go-name": "NodeVersionInfo",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v2"
    },
    "ObjectMeta": {
      "type": "object",
      "title": "ObjectMeta is an object storing common metadata for persistable objects.",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "resourceVersion": {
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "uid": {
          "type": "string",
          "x-go-name": "UID"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "ObjectMetaV2": {
      "type": "object",
      "title": "ObjectMeta is an object storing common metadata for persistable objects.",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "creationTimestamp": {
          "description": "CreationTimestamp is a timestamp representing the server time when this object was created.",
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreationTimestamp"
        },
        "deletionTimestamp": {
          "description": "DeletionTimestamp is a timestamp representing the server time when this object was deleted.",
          "type": "string",
          "format": "date-time",
          "x-go-name": "DeletionTimestamp"
        },
        "displayName": {
          "description": "The name to display in the frontend",
          "type": "string",
          "x-go-name": "DisplayName"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "name": {
          "description": "The unique name",
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-name": "ObjectMeta",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v2"
    },
    "ObjectReference": {
      "description": "+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object",
      "type": "object",
      "title": "ObjectReference contains enough information to let you inspect or modify the referred object.",
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "fieldPath": {
          "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.\n+optional",
          "type": "string",
          "x-go-name": "FieldPath"
        },
        "kind": {
          "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "name": {
          "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "resourceVersion": {
          "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/api/core/v1"
    },
    "OpenstackCloudSpec": {
      "type": "object",
      "title": "OpenstackCloudSpec specifies access data to an openstack cloud.",
      "properties": {
        "domain": {
          "type": "string",
          "x-go-name": "Domain"
        },
        "floatingIpPool": {
          "type": "string",
          "x-go-name": "FloatingIPPool"
        },
        "network": {
          "type": "string",
          "x-go-name": "Network"
        },
        "password": {
          "type": "string",
          "x-go-name": "Password"
        },
        "routerID": {
          "type": "string",
          "x-go-name": "RouterID"
        },
        "securityGroups": {
          "type": "string",
          "x-go-name": "SecurityGroups"
        },
        "subnetID": {
          "type": "string",
          "x-go-name": "SubnetID"
        },
        "tenant": {
          "type": "string",
          "x-go-name": "Tenant"
        },
        "username": {
          "type": "string",
          "x-go-name": "Username"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "OpenstackDatacenterSpec": {
      "type": "object",
      "title": "OpenstackDatacenterSpec specifies a generic bare metal datacenter.",
      "properties": {
        "auth_url": {
          "type": "string",
          "x-go-name": "AuthURL"
        },
        "availability_zone": {
          "type": "string",
          "x-go-name": "AvailabilityZone"
        },
        "region": {
          "type": "string",
          "x-go-name": "Region"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "OpenstackNodeSpecV2": {
      "description": "OpenstackNodeSpec openstack node settings",
      "type": "object",
      "required": [
        "flavor",
        "image"
      ],
      "properties": {
        "flavor": {
          "description": "instance flavor",
          "type": "string",
          "x-go-name": "Flavor"
        },
        "image": {
          "description": "image to use",
          "type": "string",
          "x-go-name": "Image"
        },
        "tags": {
          "description": "Additional metadata to set",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Tags"
        }
      },
      "x-go-name": "OpenstackNodeSpec",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v2"
    },
    "OpenstackSize": {
      "type": "object",
      "title": "OpenstackSize is the object representing openstack's sizes.",
      "properties": {
        "disk": {
          "description": "Disk is the amount of root disk, measured in GB",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Disk"
        },
        "isPublic": {
          "description": "IsPublic indicates whether the size is public (available to all projects) or scoped to a set of projects",
          "type": "boolean",
          "x-go-name": "IsPublic"
        },
        "memory": {
          "description": "Memory is the amount of memory, measured in MB",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Memory"
        },
        "region": {
          "description": "Region specifies the geographic region in which the size resides",
          "type": "string",
          "x-go-name": "Region"
        },
        "slug": {
          "description": "Slug holds  the name of the size",
          "type": "string",
          "x-go-name": "Slug"
        },
        "swap": {
          "description": "Swap is the amount of swap space, measured in MB",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Swap"
        },
        "vcpus": {
          "description": "VCPUs indicates how many (virtual) CPUs are available for this flavor",
          "type": "integer",
          "format": "int64",
          "x-go-name": "VCPUs"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "OperatingSystemSpecV2": {
      "type": "object",
      "title": "OperatingSystemSpec represents the collection of os specific settings. Only one must be set at a time.",
      "properties": {
        "containerLinux": {
          "$ref": "#/definitions/ContainerLinuxSpecV2"
        },
        "ubuntu": {
          "$ref": "#/definitions/UbuntuSpecV2"
        }
      },
      "x-go-name": "OperatingSystemSpec",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v2"
    },
    "OwnerReference": {
      "description": "OwnerReference contains enough information to let you identify an owning\nobject. Currently, an owning object must be in the same namespace, so there\nis no namespace field.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "blockOwnerDeletion": {
          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional",
          "type": "boolean",
          "x-go-name": "BlockOwnerDeletion"
        },
        "controller": {
          "description": "If true, this reference points to the managing controller.\n+optional",
          "type": "boolean",
          "x-go-name": "Controller"
        },
        "kind": {
          "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string",
          "x-go-name": "Kind"
        },
        "name": {
          "description": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string",
          "x-go-name": "Name"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "Preferences": {
      "type": "object",
      "properties": {
        "colors": {
          "description": "+optional",
          "type": "boolean",
          "x-go-name": "Colors"
        },
        "extensions": {
          "description": "Extensions holds additional information. This is useful for extenders so that reads and writes don't clobber unknown fields\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedExtension"
          },
          "x-go-name": "Extensions"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/client-go/tools/clientcmd/api/v1"
    },
    "Project": {
      "description": "Project is a top-level container for a set of resources",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "status": {
          "type": "string",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "RSAKeys": {
      "type": "object",
      "title": "RSAKeys is a pair of private and public key where the key is not published to the API client.",
      "properties": {
        "privateKey": {
          "$ref": "#/definitions/Bytes"
        },
        "publicKey": {
          "$ref": "#/definitions/Bytes"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "RawExtension": {
      "description": "To use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\nInternal package:\ntype MyAPIObject struct {\nruntime.TypeMeta `json:\",inline\"`\nMyPlugin runtime.Object `json:\"myPlugin\"`\n}\ntype PluginA struct {\nAOption string `json:\"aOption\"`\n}\n\nExternal package:\ntype MyAPIObject struct {\nruntime.TypeMeta `json:\",inline\"`\nMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n}\ntype PluginA struct {\nAOption string `json:\"aOption\"`\n}\n\nOn the wire, the JSON will look something like this:\n{\n\"kind\":\"MyAPIObject\",\n\"apiVersion\":\"v1\",\n\"myPlugin\": {\n\"kind\":\"PluginA\",\n\"aOption\":\"foo\",\n},\n}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
      "type": "object",
      "title": "RawExtension is used to hold extensions in external versions.",
      "properties": {
        "Raw": {
          "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8"
          }
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/apimachinery/pkg/runtime"
    },
    "ResourceList": {
      "title": "ResourceList is a set of (resource name, quantity) pairs.",
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/api/core/v1"
    },
    "SSHKey": {
      "description": "SSHKey represents a ssh key",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/SSHKeySpec"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "SSHKeySpec": {
      "description": "SSHKeySpec represents the details of a ssh key",
      "type": "object",
      "properties": {
        "clusters": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Clusters"
        },
        "fingerprint": {
          "type": "string",
          "x-go-name": "Fingerprint"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "owner": {
          "type": "string",
          "x-go-name": "Owner"
        },
        "publicKey": {
          "type": "string",
          "x-go-name": "PublicKey"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "Status": {
      "type": "object",
      "title": "Status is a return value for calls that don't return other objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "code": {
          "description": "Suggested HTTP return code for this status, 0 if not set.\n+optional",
          "type": "integer",
          "format": "int32",
          "x-go-name": "Code"
        },
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that\nthe server has more data available. The value is opaque and may be used to issue another request\nto the endpoint that served this list to retrieve the next set of available objects. Continuing a\nlist may not be possible if the server configuration has changed or more than a few minutes have\npassed. The resourceVersion field returned when using this continue value will be identical to\nthe value in the first response.",
          "type": "string",
          "x-go-name": "Continue"
        },
        "details": {
          "$ref": "#/definitions/StatusDetails"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "message": {
          "description": "A human-readable description of the status of this operation.\n+optional",
          "type": "string",
          "x-go-name": "Message"
        },
        "reason": {
          "$ref": "#/definitions/StatusReason"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that\ncan be used by clients to determine when objects have changed.\nValue must be treated as opaque by clients and passed unmodified back to the server.\nPopulated by the system.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "selfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "status": {
          "description": "Status of the operation.\nOne of: \"Success\" or \"Failure\".\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status\n+optional",
          "type": "string",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "StatusCause": {
      "description": "StatusCause provides more information about an api.Status failure, including\ncases when multiple errors are encountered.",
      "type": "object",
      "properties": {
        "field": {
          "description": "The field of the resource that has caused this error, as named by its JSON\nserialization. May include dot and postfix notation for nested attributes.\nArrays are zero-indexed.  Fields may appear more than once in an array of\ncauses due to fields having multiple errors.\nOptional.\n\nExamples:\n\"name\" - the field \"name\" on the current resource\n\"items[0].name\" - the field \"name\" on the first array entry in \"items\"\n+optional",
          "type": "string",
          "x-go-name": "Field"
        },
        "message": {
          "description": "A human-readable description of the cause of the error.  This field may be\npresented as-is to a reader.\n+optional",
          "type": "string",
          "x-go-name": "Message"
        },
        "reason": {
          "$ref": "#/definitions/CauseType"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "StatusDetails": {
      "description": "StatusDetails is a set of additional properties that MAY be set by the\nserver to provide additional information about a response. The Reason\nfield of a Status object defines what attributes will be set. Clients\nmust ignore fields that do not match the defined type of each attribute,\nand should assume that any attribute may be empty, invalid, or under\ndefined.",
      "type": "object",
      "properties": {
        "causes": {
          "description": "The Causes array includes more details associated with the StatusReason\nfailure. Not all StatusReasons may provide detailed causes.\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCause"
          },
          "x-go-name": "Causes"
        },
        "group": {
          "description": "The group attribute of the resource associated with the status StatusReason.\n+optional",
          "type": "string",
          "x-go-name": "Group"
        },
        "kind": {
          "description": "The kind attribute of the resource associated with the status StatusReason.\nOn some operations may differ from the requested resource Kind.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "name": {
          "description": "The name attribute of the resource associated with the status StatusReason\n(when there is a single name which can be described).\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "retryAfterSeconds": {
          "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate\nthe client must take an alternate action - for those errors this field may indicate how long to wait\nbefore taking the alternate action.\n+optional",
          "type": "integer",
          "format": "int32",
          "x-go-name": "RetryAfterSeconds"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "StatusReason": {
      "description": "StatusReason is an enumeration of possible failure causes.  Each StatusReason\nmust map to a single HTTP status code, but multiple reasons may map\nto the same HTTP status code.\nTODO: move to apiserver",
      "type": "string",
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "Taint": {
      "description": "The node this Taint is attached to has the \"effect\" on\nany pod that does not tolerate the Taint.",
      "type": "object",
      "properties": {
        "effect": {
          "$ref": "#/definitions/TaintEffect"
        },
        "key": {
          "description": "Required. The taint key to be applied to a node.",
          "type": "string",
          "x-go-name": "Key"
        },
        "timeAdded": {
          "$ref": "#/definitions/Time"
        },
        "value": {
          "description": "Required. The taint value corresponding to the taint key.\n+optional",
          "type": "string",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/api/core/v1"
    },
    "TaintEffect": {
      "type": "string",
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/api/core/v1"
    },
    "Time": {
      "description": "+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
      "type": "object",
      "title": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.",
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "UID": {
      "description": "UID is a type that holds unique ID values, including UUIDs.  Because we\ndon't ONLY use UUIDs, this is an alias to string.  Being a type captures\nintent and helps make sure that UIDs and names do not get conflated.",
      "type": "string",
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/apimachinery/pkg/types"
    },
    "UbuntuSpecV2": {
      "description": "UbuntuSpec ubuntu specific settings",
      "type": "object",
      "properties": {
        "distUpgradeOnBoot": {
          "description": "do a dist-upgrade on boot and reboot it required afterwards",
          "type": "boolean",
          "x-go-name": "DistUpgradeOnBoot"
        }
      },
      "x-go-name": "UbuntuSpec",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v2"
    },
    "UniqueVolumeName": {
      "type": "string",
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/k8s.io/api/core/v1"
    },
    "User": {
      "type": "object",
      "title": "User represents an API user that is used for authentication.",
      "properties": {
        "Email": {
          "type": "string"
        },
        "ID": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Roles": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "VSphereCloudSpec": {
      "type": "object",
      "title": "VSphereCloudSpec specifies access data to VSphere cloud.",
      "properties": {
        "password": {
          "type": "string",
          "x-go-name": "Password"
        },
        "username": {
          "type": "string",
          "x-go-name": "Username"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/crd/kubermatic/v1"
    },
    "VSphereDatacenterSpec": {
      "type": "object",
      "title": "VSphereDatacenterSpec specifies a datacenter of VSphere.",
      "properties": {
        "cluster": {
          "type": "string",
          "x-go-name": "Cluster"
        },
        "datacenter": {
          "type": "string",
          "x-go-name": "Datacenter"
        },
        "datastore": {
          "type": "string",
          "x-go-name": "Datastore"
        },
        "endpoint": {
          "type": "string",
          "x-go-name": "Endpoint"
        }
      },
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v1"
    },
    "VSphereNodeSpecV2": {
      "description": "VSphereNodeSpec VSphere node settings",
      "type": "object",
      "properties": {
        "cpus": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "CPUs"
        },
        "memory": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Memory"
        },
        "template": {
          "type": "string",
          "x-go-name": "Template"
        }
      },
      "x-go-name": "VSphereNodeSpec",
      "x-go-package": "github.com/kubermatic/kubermatic/api/pkg/api/v2"
    },
    "Version": {
      "type": "object",
      "title": "Version represents a single semantic version.",
      "x-go-package": "github.com/kubermatic/kubermatic/api/vendor/github.com/Masterminds/semver"
    }
  },
  "responses": {
    "empty": {
      "description": "EmptyResponse is a empty response"
    },
    "errorResponse": {
      "description": "ErrorResponse is the default representation of an error",
      "schema": {
        "$ref": "#/definitions/ErrorDetails"
      }
    }
  }
}