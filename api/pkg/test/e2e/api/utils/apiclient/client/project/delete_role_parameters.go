// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteRoleParams creates a new DeleteRoleParams object
// with the default values initialized.
func NewDeleteRoleParams() *DeleteRoleParams {
	var ()
	return &DeleteRoleParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteRoleParamsWithTimeout creates a new DeleteRoleParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteRoleParamsWithTimeout(timeout time.Duration) *DeleteRoleParams {
	var ()
	return &DeleteRoleParams{

		timeout: timeout,
	}
}

// NewDeleteRoleParamsWithContext creates a new DeleteRoleParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteRoleParamsWithContext(ctx context.Context) *DeleteRoleParams {
	var ()
	return &DeleteRoleParams{

		Context: ctx,
	}
}

// NewDeleteRoleParamsWithHTTPClient creates a new DeleteRoleParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteRoleParamsWithHTTPClient(client *http.Client) *DeleteRoleParams {
	var ()
	return &DeleteRoleParams{
		HTTPClient: client,
	}
}

/*DeleteRoleParams contains all the parameters to send to the API endpoint
for the delete role operation typically these are written to a http.Request
*/
type DeleteRoleParams struct {

	/*ClusterID*/
	ClusterID string
	/*Dc*/
	Dc string
	/*Namespace*/
	Namespace string
	/*ProjectID*/
	ProjectID string
	/*RoleID*/
	RoleID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete role params
func (o *DeleteRoleParams) WithTimeout(timeout time.Duration) *DeleteRoleParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete role params
func (o *DeleteRoleParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete role params
func (o *DeleteRoleParams) WithContext(ctx context.Context) *DeleteRoleParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete role params
func (o *DeleteRoleParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete role params
func (o *DeleteRoleParams) WithHTTPClient(client *http.Client) *DeleteRoleParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete role params
func (o *DeleteRoleParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClusterID adds the clusterID to the delete role params
func (o *DeleteRoleParams) WithClusterID(clusterID string) *DeleteRoleParams {
	o.SetClusterID(clusterID)
	return o
}

// SetClusterID adds the clusterId to the delete role params
func (o *DeleteRoleParams) SetClusterID(clusterID string) {
	o.ClusterID = clusterID
}

// WithDc adds the dc to the delete role params
func (o *DeleteRoleParams) WithDc(dc string) *DeleteRoleParams {
	o.SetDc(dc)
	return o
}

// SetDc adds the dc to the delete role params
func (o *DeleteRoleParams) SetDc(dc string) {
	o.Dc = dc
}

// WithNamespace adds the namespace to the delete role params
func (o *DeleteRoleParams) WithNamespace(namespace string) *DeleteRoleParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the delete role params
func (o *DeleteRoleParams) SetNamespace(namespace string) {
	o.Namespace = namespace
}

// WithProjectID adds the projectID to the delete role params
func (o *DeleteRoleParams) WithProjectID(projectID string) *DeleteRoleParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the delete role params
func (o *DeleteRoleParams) SetProjectID(projectID string) {
	o.ProjectID = projectID
}

// WithRoleID adds the roleID to the delete role params
func (o *DeleteRoleParams) WithRoleID(roleID string) *DeleteRoleParams {
	o.SetRoleID(roleID)
	return o
}

// SetRoleID adds the roleId to the delete role params
func (o *DeleteRoleParams) SetRoleID(roleID string) {
	o.RoleID = roleID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteRoleParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param cluster_id
	if err := r.SetPathParam("cluster_id", o.ClusterID); err != nil {
		return err
	}

	// path param dc
	if err := r.SetPathParam("dc", o.Dc); err != nil {
		return err
	}

	// path param namespace
	if err := r.SetPathParam("namespace", o.Namespace); err != nil {
		return err
	}

	// path param project_id
	if err := r.SetPathParam("project_id", o.ProjectID); err != nil {
		return err
	}

	// path param role_id
	if err := r.SetPathParam("role_id", o.RoleID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
