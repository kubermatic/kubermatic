// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kubermatic/kubermatic/api/pkg/test/e2e/api/utils/apiclient/models"
)

// PatchClusterRoleBindingReader is a Reader for the PatchClusterRoleBinding structure.
type PatchClusterRoleBindingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchClusterRoleBindingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchClusterRoleBindingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPatchClusterRoleBindingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPatchClusterRoleBindingForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPatchClusterRoleBindingDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchClusterRoleBindingOK creates a PatchClusterRoleBindingOK with default headers values
func NewPatchClusterRoleBindingOK() *PatchClusterRoleBindingOK {
	return &PatchClusterRoleBindingOK{}
}

/*PatchClusterRoleBindingOK handles this case with default header values.

ClusterRoleBinding
*/
type PatchClusterRoleBindingOK struct {
	Payload *models.ClusterRoleBinding
}

func (o *PatchClusterRoleBindingOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/clusterroles/{role_id}/clusterbindings/{binding_id}][%d] patchClusterRoleBindingOK  %+v", 200, o.Payload)
}

func (o *PatchClusterRoleBindingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClusterRoleBinding)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchClusterRoleBindingUnauthorized creates a PatchClusterRoleBindingUnauthorized with default headers values
func NewPatchClusterRoleBindingUnauthorized() *PatchClusterRoleBindingUnauthorized {
	return &PatchClusterRoleBindingUnauthorized{}
}

/*PatchClusterRoleBindingUnauthorized handles this case with default header values.

EmptyResponse is a empty response
*/
type PatchClusterRoleBindingUnauthorized struct {
}

func (o *PatchClusterRoleBindingUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/clusterroles/{role_id}/clusterbindings/{binding_id}][%d] patchClusterRoleBindingUnauthorized ", 401)
}

func (o *PatchClusterRoleBindingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchClusterRoleBindingForbidden creates a PatchClusterRoleBindingForbidden with default headers values
func NewPatchClusterRoleBindingForbidden() *PatchClusterRoleBindingForbidden {
	return &PatchClusterRoleBindingForbidden{}
}

/*PatchClusterRoleBindingForbidden handles this case with default header values.

EmptyResponse is a empty response
*/
type PatchClusterRoleBindingForbidden struct {
}

func (o *PatchClusterRoleBindingForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/clusterroles/{role_id}/clusterbindings/{binding_id}][%d] patchClusterRoleBindingForbidden ", 403)
}

func (o *PatchClusterRoleBindingForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchClusterRoleBindingDefault creates a PatchClusterRoleBindingDefault with default headers values
func NewPatchClusterRoleBindingDefault(code int) *PatchClusterRoleBindingDefault {
	return &PatchClusterRoleBindingDefault{
		_statusCode: code,
	}
}

/*PatchClusterRoleBindingDefault handles this case with default header values.

errorResponse
*/
type PatchClusterRoleBindingDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the patch cluster role binding default response
func (o *PatchClusterRoleBindingDefault) Code() int {
	return o._statusCode
}

func (o *PatchClusterRoleBindingDefault) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/clusterroles/{role_id}/clusterbindings/{binding_id}][%d] patchClusterRoleBinding default  %+v", o._statusCode, o.Payload)
}

func (o *PatchClusterRoleBindingDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
