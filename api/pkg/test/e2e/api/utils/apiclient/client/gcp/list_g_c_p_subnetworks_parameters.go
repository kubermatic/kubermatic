// Code generated by go-swagger; DO NOT EDIT.

package gcp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListGCPSubnetworksParams creates a new ListGCPSubnetworksParams object
// with the default values initialized.
func NewListGCPSubnetworksParams() *ListGCPSubnetworksParams {
	var ()
	return &ListGCPSubnetworksParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListGCPSubnetworksParamsWithTimeout creates a new ListGCPSubnetworksParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListGCPSubnetworksParamsWithTimeout(timeout time.Duration) *ListGCPSubnetworksParams {
	var ()
	return &ListGCPSubnetworksParams{

		timeout: timeout,
	}
}

// NewListGCPSubnetworksParamsWithContext creates a new ListGCPSubnetworksParams object
// with the default values initialized, and the ability to set a context for a request
func NewListGCPSubnetworksParamsWithContext(ctx context.Context) *ListGCPSubnetworksParams {
	var ()
	return &ListGCPSubnetworksParams{

		Context: ctx,
	}
}

// NewListGCPSubnetworksParamsWithHTTPClient creates a new ListGCPSubnetworksParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListGCPSubnetworksParamsWithHTTPClient(client *http.Client) *ListGCPSubnetworksParams {
	var ()
	return &ListGCPSubnetworksParams{
		HTTPClient: client,
	}
}

/*ListGCPSubnetworksParams contains all the parameters to send to the API endpoint
for the list g c p subnetworks operation typically these are written to a http.Request
*/
type ListGCPSubnetworksParams struct {

	/*Credential*/
	Credential *string
	/*Network*/
	Network *string
	/*ServiceAccount*/
	ServiceAccount *string
	/*Dc*/
	Dc string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list g c p subnetworks params
func (o *ListGCPSubnetworksParams) WithTimeout(timeout time.Duration) *ListGCPSubnetworksParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list g c p subnetworks params
func (o *ListGCPSubnetworksParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list g c p subnetworks params
func (o *ListGCPSubnetworksParams) WithContext(ctx context.Context) *ListGCPSubnetworksParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list g c p subnetworks params
func (o *ListGCPSubnetworksParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list g c p subnetworks params
func (o *ListGCPSubnetworksParams) WithHTTPClient(client *http.Client) *ListGCPSubnetworksParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list g c p subnetworks params
func (o *ListGCPSubnetworksParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCredential adds the credential to the list g c p subnetworks params
func (o *ListGCPSubnetworksParams) WithCredential(credential *string) *ListGCPSubnetworksParams {
	o.SetCredential(credential)
	return o
}

// SetCredential adds the credential to the list g c p subnetworks params
func (o *ListGCPSubnetworksParams) SetCredential(credential *string) {
	o.Credential = credential
}

// WithNetwork adds the network to the list g c p subnetworks params
func (o *ListGCPSubnetworksParams) WithNetwork(network *string) *ListGCPSubnetworksParams {
	o.SetNetwork(network)
	return o
}

// SetNetwork adds the network to the list g c p subnetworks params
func (o *ListGCPSubnetworksParams) SetNetwork(network *string) {
	o.Network = network
}

// WithServiceAccount adds the serviceAccount to the list g c p subnetworks params
func (o *ListGCPSubnetworksParams) WithServiceAccount(serviceAccount *string) *ListGCPSubnetworksParams {
	o.SetServiceAccount(serviceAccount)
	return o
}

// SetServiceAccount adds the serviceAccount to the list g c p subnetworks params
func (o *ListGCPSubnetworksParams) SetServiceAccount(serviceAccount *string) {
	o.ServiceAccount = serviceAccount
}

// WithDc adds the dc to the list g c p subnetworks params
func (o *ListGCPSubnetworksParams) WithDc(dc string) *ListGCPSubnetworksParams {
	o.SetDc(dc)
	return o
}

// SetDc adds the dc to the list g c p subnetworks params
func (o *ListGCPSubnetworksParams) SetDc(dc string) {
	o.Dc = dc
}

// WriteToRequest writes these params to a swagger request
func (o *ListGCPSubnetworksParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Credential != nil {

		// header param Credential
		if err := r.SetHeaderParam("Credential", *o.Credential); err != nil {
			return err
		}

	}

	if o.Network != nil {

		// header param Network
		if err := r.SetHeaderParam("Network", *o.Network); err != nil {
			return err
		}

	}

	if o.ServiceAccount != nil {

		// header param ServiceAccount
		if err := r.SetHeaderParam("ServiceAccount", *o.ServiceAccount); err != nil {
			return err
		}

	}

	// path param dc
	if err := r.SetPathParam("dc", o.Dc); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
