// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/kubermatic/kubermatic/api/pkg/test/e2e/api/utils/apiclient/models"
)

// ListAllProjectsForAdminReader is a Reader for the ListAllProjectsForAdmin structure.
type ListAllProjectsForAdminReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAllProjectsForAdminReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAllProjectsForAdminOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListAllProjectsForAdminUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListAllProjectsForAdminConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListAllProjectsForAdminDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListAllProjectsForAdminOK creates a ListAllProjectsForAdminOK with default headers values
func NewListAllProjectsForAdminOK() *ListAllProjectsForAdminOK {
	return &ListAllProjectsForAdminOK{}
}

/*ListAllProjectsForAdminOK handles this case with default header values.

Project
*/
type ListAllProjectsForAdminOK struct {
	Payload []*models.Project
}

func (o *ListAllProjectsForAdminOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/projects][%d] listAllProjectsForAdminOK  %+v", 200, o.Payload)
}

func (o *ListAllProjectsForAdminOK) GetPayload() []*models.Project {
	return o.Payload
}

func (o *ListAllProjectsForAdminOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAllProjectsForAdminUnauthorized creates a ListAllProjectsForAdminUnauthorized with default headers values
func NewListAllProjectsForAdminUnauthorized() *ListAllProjectsForAdminUnauthorized {
	return &ListAllProjectsForAdminUnauthorized{}
}

/*ListAllProjectsForAdminUnauthorized handles this case with default header values.

EmptyResponse is a empty response
*/
type ListAllProjectsForAdminUnauthorized struct {
}

func (o *ListAllProjectsForAdminUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/projects][%d] listAllProjectsForAdminUnauthorized ", 401)
}

func (o *ListAllProjectsForAdminUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListAllProjectsForAdminConflict creates a ListAllProjectsForAdminConflict with default headers values
func NewListAllProjectsForAdminConflict() *ListAllProjectsForAdminConflict {
	return &ListAllProjectsForAdminConflict{}
}

/*ListAllProjectsForAdminConflict handles this case with default header values.

EmptyResponse is a empty response
*/
type ListAllProjectsForAdminConflict struct {
}

func (o *ListAllProjectsForAdminConflict) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/projects][%d] listAllProjectsForAdminConflict ", 409)
}

func (o *ListAllProjectsForAdminConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListAllProjectsForAdminDefault creates a ListAllProjectsForAdminDefault with default headers values
func NewListAllProjectsForAdminDefault(code int) *ListAllProjectsForAdminDefault {
	return &ListAllProjectsForAdminDefault{
		_statusCode: code,
	}
}

/*ListAllProjectsForAdminDefault handles this case with default header values.

errorResponse
*/
type ListAllProjectsForAdminDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the list all projects for admin default response
func (o *ListAllProjectsForAdminDefault) Code() int {
	return o._statusCode
}

func (o *ListAllProjectsForAdminDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/projects][%d] listAllProjectsForAdmin default  %+v", o._statusCode, o.Payload)
}

func (o *ListAllProjectsForAdminDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListAllProjectsForAdminDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
