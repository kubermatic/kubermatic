apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: controller-manager
  ownerReferences:
  - apiVersion: kubermatic.k8s.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: Cluster
    name: de-test-01
    uid: "1234567890"
spec:
  replicas: 1
  selector:
    matchLabels:
      role: controller-manager
      version: v1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        ca-cert-secret-revision: "123456"
        ca-key-secret-revision: "123456"
        cloud-config-configmap-revision: "123456"
        release: v1.8.5
        role: controller-manager
        service-account-key-secret-revision: "123456"
        version: v1
    spec:
      containers:
      - command:
        - /hyperkube
        - controller-manager
        - --master=http://apiserver:8080
        - --service-account-private-key-file=/etc/kubernetes/service-account-key/sa.key
        - --root-ca-file=/etc/kubernetes/ca-cert/ca.crt
        - --cluster-signing-cert-file=/etc/kubernetes/ca-cert/ca.crt
        - --cluster-signing-key-file=/etc/kubernetes/ca-key/ca.key
        - --cluster-cidr=172.25.0.0/16
        - --configure-cloud-routes=false
        - --cloud-config=/etc/kubernetes/cloud/config
        - --cloud-provider=aws
        - --allocate-node-cidrs=true
        - --controllers=*,bootstrapsigner,tokencleaner
        - --v=4
        env:
        - name: AWS_ACCESS_KEY_ID
          value: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          value: aws-secret-access-key
        - name: AWS_VPC_ID
          value: aws-vpn-id
        - name: AWS_AVAILABILITY_ZONE
          value: aws-availability-zone
        image: gcr.io/google_containers/hyperkube-amd64:v1.8.5
        livenessProbe:
          failureThreshold: 8
          httpGet:
            path: /healthz
            port: 10252
          initialDelaySeconds: 15
          timeoutSeconds: 15
        name: controller-manager
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10252
          timeoutSeconds: 15
        resources: {}
        volumeMounts:
        - mountPath: /etc/kubernetes/ca-cert
          name: ca-cert
          readOnly: true
        - mountPath: /etc/kubernetes/ca-key
          name: ca-key
          readOnly: true
        - mountPath: /etc/kubernetes/cloud
          name: cloud-config
          readOnly: true
        - mountPath: /etc/kubernetes/service-account-key
          name: service-account-key
          readOnly: true
      initContainers:
      - command:
        - /bin/sh
        - -ec
        - until wget -T 1 http://apiserver:8080/healthz; do echo waiting for apiserver;
          sleep 2; done;
        image: busybox
        name: apiserver-running
        resources: {}
      volumes:
      - name: ca-cert
        secret:
          defaultMode: 256
          secretName: ca-cert
      - name: ca-key
        secret:
          defaultMode: 256
          secretName: ca-key
      - name: service-account-key
        secret:
          defaultMode: 256
          secretName: service-account-key
      - configMap:
          name: cloud-config
        name: cloud-config
status: {}
