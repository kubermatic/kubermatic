apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: machine-controller
  ownerReferences:
  - apiVersion: kubermatic.k8s.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: Cluster
    name: de-test-01
    uid: "1234567890"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: machine-controller
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8085"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: machine-controller
        release: v0.1.2
    spec:
      containers:
      - command:
        - /usr/local/bin/machine-controller
        - -master=http://apiserver:8080
        - -logtostderr
        - -v=4
        - -cluster-dns=10.10.10.10
        - -internal-listen-address=0.0.0.0:8085
        env:
        - name: OS_AUTH_URL
          value: https://example.com:8000/v3
        - name: OS_USER_NAME
          value: openstack-username
        - name: OS_PASSWORD
          value: openstack-password
        - name: OS_DOMAIN_NAME
          value: openstack-domain
        - name: OS_TENANT_NAME
          value: openstack-tenant
        image: kubermatic/machine-controller:v0.1.2
        livenessProbe:
          httpGet:
            path: /live
            port: 8085
        name: machine-controller
        readinessProbe:
          httpGet:
            path: /ready
            port: 8085
        resources: {}
      initContainers:
      - command:
        - /bin/sh
        - -ec
        - until wget -T 1 http://apiserver:8080/healthz; do echo waiting for apiserver;
          sleep 2; done;
        image: busybox
        name: apiserver-running
        resources: {}
      terminationGracePeriodSeconds: 60
status: {}
