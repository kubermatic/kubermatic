metadata:
  creationTimestamp: null
  labels:
    app: machine-controller
  name: machine-controller
  ownerReferences:
  - apiVersion: kubermatic.k8s.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: Cluster
    name: de-test-01
    uid: "1234567890"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: machine-controller
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io-0/path: /metrics
        prometheus.io-0/port: "8085"
        prometheus.io-0/scrape: "true"
      creationTimestamp: null
      labels:
        app: machine-controller
        machinecontroller-kubeconfig-secret-revision: "123456"
    spec:
      containers:
      - args:
        - -kubeconfig
        - /etc/kubernetes/machinecontroller/machinecontroller-kubeconfig
        - -logtostderr
        - -v
        - "4"
        - -cluster-dns
        - 10.10.10.10
        - -internal-listen-address
        - 0.0.0.0:8085
        command:
        - /usr/local/bin/machine-controller
        env:
        - name: AWS_ACCESS_KEY_ID
          value: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          value: aws-secret-access-key
        image: docker.io/kubermatic/machine-controller:v0.7.23
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 8
          httpGet:
            path: /live
            port: 8085
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 15
        name: machine-controller
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 8085
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 15
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/kubernetes/machinecontroller
          name: machinecontroller-kubeconfig
          readOnly: true
      initContainers:
      - command:
        - /bin/sh
        - -ec
        - until wget -T 1 https://192.0.2.10:30000/healthz; do echo waiting for apiserver;
          sleep 2; done
        image: docker.io/busybox
        imagePullPolicy: IfNotPresent
        name: apiserver-running
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      volumes:
      - name: machinecontroller-kubeconfig
        secret:
          defaultMode: 292
          secretName: machinecontroller-kubeconfig
status: {}
