metadata:
  creationTimestamp: null
  labels:
    app: user-cluster-controller-manager
  name: user-cluster-controller-manager
  ownerReferences:
  - apiVersion: kubermatic.k8s.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: Cluster
    name: de-test-01
    uid: "1234567890"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-cluster-controller-manager
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io-0/path: /metrics
        prometheus.io-0/port: "10251"
        prometheus.io-0/scrape: "true"
      creationTimestamp: null
      labels:
        app: user-cluster-controller-manager
        ca-secret-revision: "123456"
        cluster: de-test-01
        uccm-kubeconfig-secret-revision: "123456"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: user-cluster-controller-manager
                  cluster: de-test-01
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - --kubeconfig
        - /etc/kubernetes/kubeconfig/kubeconfig
        - --logtostderr
        - --v
        - "6"
        command:
        - /usr/local/bin/user-cluster-controller-manager
        image: quay.io/kubermatic/user-cluster-controller-manager:v0.1.0-dev
        imagePullPolicy: Always
        name: user-cluster-controller-manager
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 20m
            memory: 64Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/kubernetes/kubeconfig
          name: uccm-kubeconfig
          readOnly: true
      imagePullSecrets:
      - name: dockercfg
      initContainers:
      - command:
        - /bin/sh
        - -ec
        - until wget -T 1 https://apiserver-external.cluster-de-test-01.svc.cluster.local:30000/healthz;
          do echo waiting for apiserver; sleep 2; done;
        image: docker.io/busybox
        imagePullPolicy: IfNotPresent
        name: apiserver-running
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      volumes:
      - name: ca
        secret:
          defaultMode: 256
          items:
          - key: ca.crt
            path: ca.crt
          secretName: ca
      - name: uccm-kubeconfig
        secret:
          defaultMode: 256
          secretName: uccm-kubeconfig
status: {}
