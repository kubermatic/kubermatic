metadata:
  creationTimestamp: null
  labels:
    app: metrics-server
  name: metrics-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: metrics-server
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: metrics-server
        cluster: de-test-01
        metrics-server-config-configmap-revision: "123456"
        metrics-server-secret-revision: "123456"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: metrics-server
                  cluster: de-test-01
              topologyKey: kubernetes.io/hostname
            weight: 100
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: metrics-server
              topologyKey: kubernetes.io/hostname
            weight: 10
      containers:
      - args:
        - --secure-port
        - "6443"
        - --logtostderr
        - --v
        - "2"
        - --cert-dir
        - /etc/adapter-certs
        - --prometheus-url
        - http://prometheus:9090/
        - --metrics-relist-interval
        - 1m
        - --config
        - /etc/adapter/config.yaml
        - --lister-kubeconfig
        - /etc/kubernetes/kubeconfig/kubeconfig
        - --authentication-kubeconfig
        - /etc/kubernetes/kubeconfig/kubeconfig
        - --authorization-kubeconfig
        - /etc/kubernetes/kubeconfig/kubeconfig
        command:
        - /adapter
        image: docker.io/directxman12/k8s-prometheus-adapter-amd64:v0.5.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 8
          httpGet:
            path: /healthz
            port: 6443
            scheme: HTTPS
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        name: metrics-server
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 6443
            scheme: HTTPS
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 15
        resources:
          limits:
            cpu: 150m
            memory: 512Mi
          requests:
            cpu: 25m
            memory: 32Mi
        volumeMounts:
        - mountPath: /etc/kubernetes/kubeconfig
          name: metrics-server
          readOnly: true
        - mountPath: /etc/adapter
          name: metrics-server-config
          readOnly: true
        - mountPath: /etc/adapter-certs
          name: cert-dir
      imagePullSecrets:
      - name: dockercfg
      initContainers:
      - args:
        - -endpoint
        - https://apiserver-external.cluster-de-test-01.svc.cluster.local.:30000/healthz
        - -insecure
        - -retries
        - "100"
        - -retry-wait
        - "2"
        - -timeout
        - "1"
        command:
        - /usr/local/bin/http-prober
        image: quay.io/kubermatic/http-prober:v0.1
        imagePullPolicy: IfNotPresent
        name: apiserver-running
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      volumes:
      - name: metrics-server
        secret:
          defaultMode: 292
          secretName: metrics-server
      - configMap:
          defaultMode: 292
          name: metrics-server-config
        name: metrics-server-config
      - emptyDir:
          sizeLimit: 1Mi
        name: cert-dir
status: {}
