metadata:
  creationTimestamp: null
  name: etcd
  ownerReferences:
  - apiVersion: kubermatic.k8s.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: Cluster
    name: de-test-01
    uid: "1234567890"
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app: etcd
      cluster: de-test-01
  serviceName: etcd
  template:
    metadata:
      creationTimestamp: null
      labels:
        apiserver-etcd-client-certificate-secret-revision: "123456"
        app: etcd
        ca-secret-revision: "123456"
        cluster: de-test-01
        etcd-tls-certificate-secret-revision: "123456"
      name: etcd
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: etcd
                  cluster: de-test-01
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - command:
        - /bin/sh
        - -ec
        - |
          export MASTER_ENDPOINT="https://etcd-0.etcd.cluster-de-test-01.svc.cluster.local:2379"


          export INITIAL_STATE="new"
          export INITIAL_CLUSTER="etcd-0=http://etcd-0.etcd.cluster-de-test-01.svc.cluster.local:2380,etcd-1=http://etcd-1.etcd.cluster-de-test-01.svc.cluster.local:2380,etcd-2=http://etcd-2.etcd.cluster-de-test-01.svc.cluster.local:2380"


          echo "initial-state: ${INITIAL_STATE}"
          echo "initial-cluster: ${INITIAL_CLUSTER}"

          exec /usr/local/bin/etcd \
              --name=${POD_NAME} \
              --data-dir="/var/run/etcd/pod_${POD_NAME}/" \
              --initial-cluster=${INITIAL_CLUSTER} \
              --initial-cluster-token="de-test-01" \
              --initial-cluster-state=${INITIAL_STATE} \
              --advertise-client-urls "https://${POD_NAME}.etcd.cluster-de-test-01.svc.cluster.local:2379,https://${POD_IP}:2379" \
              --listen-client-urls "https://${POD_IP}:2379,https://127.0.0.1:2379" \
              --listen-peer-urls "http://${POD_IP}:2380" \
              --initial-advertise-peer-urls "http://${POD_NAME}.etcd.cluster-de-test-01.svc.cluster.local:2380" \
              --trusted-ca-file /etc/etcd/pki/ca/ca.crt \
              --client-cert-auth \
              --cert-file /etc/etcd/pki/tls/etcd-tls.crt \
              --key-file /etc/etcd/pki/tls/etcd-tls.key
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: ETCDCTL_API
          value: "3"
        image: quay.io/coreos/etcd:v3.2.20
        imagePullPolicy: IfNotPresent
        name: etcd
        ports:
        - containerPort: 2379
          name: client
          protocol: TCP
        - containerPort: 2380
          name: peer
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /usr/local/bin/etcdctl
            - --cacert
            - /etc/etcd/pki/ca/ca.crt
            - --cert
            - /etc/etcd/pki/client/apiserver-etcd-client.crt
            - --key
            - /etc/etcd/pki/client/apiserver-etcd-client.key
            - --endpoints
            - https://localhost:2379
            - endpoint
            - health
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 256Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/run/etcd
          name: data
        - mountPath: /etc/etcd/pki/tls
          name: etcd-tls-certificate
        - mountPath: /etc/etcd/pki/ca
          name: ca
        - mountPath: /etc/etcd/pki/client
          name: apiserver-etcd-client-certificate
          readOnly: true
      volumes:
      - name: etcd-tls-certificate
        secret:
          defaultMode: 256
          secretName: etcd-tls-certificate
      - name: ca
        secret:
          defaultMode: 256
          items:
          - key: ca.crt
            path: ca.crt
          secretName: ca
      - name: apiserver-etcd-client-certificate
        secret:
          defaultMode: 256
          secretName: apiserver-etcd-client-certificate
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      name: data
      ownerReferences:
      - apiVersion: kubermatic.k8s.io/v1
        blockOwnerDeletion: true
        controller: true
        kind: Cluster
        name: de-test-01
        uid: "1234567890"
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
      storageClassName: kubermatic-fast
    status: {}
status:
  replicas: 0
