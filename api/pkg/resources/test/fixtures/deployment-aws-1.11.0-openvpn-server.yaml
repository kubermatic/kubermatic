metadata:
  creationTimestamp: null
  labels:
    app: openvpn-server
  name: openvpn-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openvpn-server
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9176"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: openvpn-server
        cluster: de-test-01
        openvpn-ca-secret-revision: "123456"
        openvpn-client-configs-configmap-revision: "123456"
        openvpn-server-certificates-secret-revision: "123456"
    spec:
      containers:
      - args:
        - --proto
        - tcp
        - --dev
        - tun
        - --mode
        - server
        - --lport
        - "1194"
        - --server
        - 10.20.0.0
        - 255.255.255.0
        - --ca
        - /etc/kubernetes/pki/ca/ca.crt
        - --cert
        - /etc/openvpn/pki/server/server.crt
        - --key
        - /etc/openvpn/pki/server/server.key
        - --dh
        - none
        - --duplicate-cn
        - --client-config-dir
        - /etc/openvpn/clients
        - --status
        - /run/openvpn/openvpn-status
        - --status-version
        - "3"
        - --cipher
        - AES-256-GCM
        - --auth
        - SHA1
        - --keysize
        - "256"
        - --script-security
        - "2"
        - --ping
        - "5"
        - --verb
        - "3"
        - --log
        - /dev/stdout
        - --push
        - route 172.25.0.0 255.255.0.0
        - --route
        - 172.25.0.0
        - 255.255.0.0
        - --push
        - route 10.240.16.0 255.255.240.0
        - --route
        - 10.240.16.0
        - 255.255.240.0
        - --push
        - route 192.0.2.0 255.255.255.0
        - --route
        - 192.0.2.0
        - 255.255.255.0
        command:
        - /usr/sbin/openvpn
        image: quay.io/kubermatic/openvpn:v2.4.8-r1
        name: openvpn-server
        ports:
        - containerPort: 1194
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - test
            - -s
            - /run/openvpn/openvpn-status
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 20Mi
          requests:
            cpu: 5m
            memory: 5Mi
        securityContext:
          privileged: true
          procMount: Default
        volumeMounts:
        - mountPath: /etc/openvpn/pki/server
          name: openvpn-server-certificates
          readOnly: true
        - mountPath: /etc/kubernetes/pki/ca
          name: ca
          readOnly: true
        - mountPath: /etc/openvpn/clients
          name: openvpn-client-configs
          readOnly: true
        - mountPath: /run/openvpn
          name: openvpn-status
      - args:
        - -c
        - |-
          while true; do sysctl -w net.ipv4.ip_forward=1;
            if ! iptables -t mangle -C INPUT -p tcp --tcp-flags SYN,RST SYN --dport 1194 -j TCPMSS --set-mss 1300 &>/dev/null; then
             iptables -t mangle -A INPUT -p tcp --tcp-flags SYN,RST SYN --dport 1194 -j TCPMSS --set-mss 1300
            fi
            sleep 30;
          done
        command:
        - /bin/bash
        image: quay.io/kubermatic/openvpn:v2.4.8-r1
        name: ip-fixup
        resources:
          limits:
            cpu: 10m
            memory: 32Mi
          requests:
            cpu: 5m
            memory: 16Mi
        securityContext:
          privileged: true
          procMount: Default
      - args:
        - -openvpn.status_paths
        - /run/openvpn/openvpn-status
        command:
        - /bin/openvpn_exporter
        image: docker.io/kumina/openvpn-exporter:v0.2.2
        name: openvpn-exporter
        ports:
        - containerPort: 9176
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 20Mi
          requests:
            cpu: 5m
            memory: 5Mi
        volumeMounts:
        - mountPath: /run/openvpn
          name: openvpn-status
      imagePullSecrets:
      - name: dockercfg
      initContainers:
      - args:
        - -c
        - |
          # do not give a 10.20.0.0/24 route to clients (nodes) but
          # masquerade to openvpn-server's IP instead:
          iptables -t nat -A POSTROUTING -o tun0 -s 10.20.0.0/24 -j MASQUERADE

          # Only allow outbound traffic to services, pods, nodes
          iptables -P FORWARD DROP
          iptables -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT
          iptables -A FORWARD -i tun0 -o tun0 -s 10.20.0.0/24 -d 172.25.0.0/16 -j ACCEPT
          iptables -A FORWARD -i tun0 -o tun0 -s 10.20.0.0/24 -d 10.240.16.0/20 -j ACCEPT
          iptables -A FORWARD -i tun0 -o tun0 -s 10.20.0.0/24 -d 192.0.2.0/24 -j ACCEPT

          iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
          iptables -A INPUT -i tun0 -p icmp -j ACCEPT
          iptables -A INPUT -i tun0 -j DROP
        command:
        - /bin/bash
        image: quay.io/kubermatic/openvpn:v2.4.8-r1
        name: iptables-init
        resources:
          limits:
            cpu: 100m
            memory: 20Mi
          requests:
            cpu: 5m
            memory: 5Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          procMount: Default
      volumes:
      - name: ca
        secret:
          items:
          - key: ca.crt
            path: ca.crt
          secretName: openvpn-ca
      - name: openvpn-server-certificates
        secret:
          secretName: openvpn-server-certificates
      - configMap:
          name: openvpn-client-configs
        name: openvpn-client-configs
      - emptyDir: {}
        name: openvpn-status
status: {}
