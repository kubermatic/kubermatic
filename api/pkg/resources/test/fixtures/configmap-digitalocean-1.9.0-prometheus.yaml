data:
  prometheus.yaml: |2

    global:
      evaluation_interval: 30s
      scrape_interval: 30s
      external_labels:
        cluster: "de-test-01"
    rule_files:
    - "/etc/prometheus/config/rules.yaml"
    scrape_configs:
    - job_name: etcd
      scheme: https
      metrics_path: '/metrics'
      static_configs:
      - targets: ['etcd-0.etcd.cluster-de-test-01.svc.cluster.local:2379','etcd-1.etcd.cluster-de-test-01.svc.cluster.local:2379','etcd-2.etcd.cluster-de-test-01.svc.cluster.local:2379']
      tls_config:
        ca_file: /etc/etcd/apiserver/ca.crt
        cert_file: /etc/etcd/apiserver/apiserver-etcd-client.crt
        key_file: /etc/etcd/apiserver/apiserver-etcd-client.key

    - job_name: 'pods'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
          - "cluster-de-test-01"

      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - source_labels: [__meta_kubernetes_pod_label_role, __meta_kubernetes_pod_label_app]
        action: replace
        target_label: job
        separator: ''
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod
    alerting:
      alertmanagers: []
  rules.yaml: ""
metadata:
  creationTimestamp: null
  labels:
    app: prometheus
  name: prometheus
  ownerReferences:
  - apiVersion: kubermatic.k8s.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: Cluster
    name: de-test-01
    uid: "1234567890"
