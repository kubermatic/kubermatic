apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  name: controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      role: controller-manager
      version: v1
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/port: "10252"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        release: v1.7.11
        role: controller-manager
        version: v1
    spec:
      containers:
      - command:
        - /hyperkube
        - controller-manager
        - --master=http://apiserver:8080
        - --service-account-private-key-file=/var/run/kubernetes/auth/service-account.key
        - --root-ca-file=/var/run/kubernetes/auth/root-ca.crt
        - --cluster-signing-cert-file=/var/run/kubernetes/auth/root-ca.crt
        - --cluster-signing-key-file=/var/run/kubernetes/auth/root-ca.key
        - --cluster-cidr=172.25.0.0/16
        - --cloud-config=/etc/kubernetes/cloud/config
        - --cloud-provider=aws
        - --allocate-node-cidrs=true
        - --v=4
        env:
        - name: AWS_ACCESS_KEY_ID
          value: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          value: aws-secret-access-key
        - name: AWS_VPC_ID
          value: aws-vpn-id
        - name: AWS_AVAILABILITY_ZONE
          value: aws-availability-zone
        image: kubermatic/hyperkube-amd64:v1.7.11
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10252
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 60
        name: controller-manager
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10252
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 30
        resources: {}
        volumeMounts:
        - mountPath: /var/run/kubernetes/auth
          name: controller-manager
          readOnly: true
        - mountPath: /etc/kubernetes/cloud
          name: cloud-config
          readOnly: true
      volumes:
      - name: controller-manager
        secret:
          secretName: controller-manager
      - configMap:
          name: cloud-config
        name: cloud-config
status: {}
