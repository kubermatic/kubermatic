apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  name: controller-manager
  ownerReferences:
  - apiVersion: kubermatic.k8s.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: Cluster
    name: de-test-01
    uid: "1234567890"
spec:
  replicas: 1
  selector:
    matchLabels:
      role: controller-manager
      version: v1
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/port: "10252"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        cloudconfigversion: "123456"
        release: v1.8.5
        role: controller-manager
        tokencsvversion: "123456"
        version: v1
    spec:
      containers:
      - command:
        - /hyperkube
        - controller-manager
        - --master=http://apiserver:8080
        - --service-account-private-key-file=/var/run/kubernetes/auth/service-account.key
        - --root-ca-file=/var/run/kubernetes/auth/root-ca.crt
        - --cluster-signing-cert-file=/var/run/kubernetes/auth/root-ca.crt
        - --cluster-signing-key-file=/var/run/kubernetes/auth/root-ca.key
        - --cluster-cidr=172.25.0.0/16
        - --configure-cloud-routes=false
        - --allocate-node-cidrs=true
        - --controllers=*,tokencleaner,bootstrapsigner
        - --v=4
        image: kubermatic/hyperkube-amd64:v1.8.5
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10252
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 60
        name: controller-manager
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10252
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 30
        resources: {}
        volumeMounts:
        - mountPath: /var/run/kubernetes/auth
          name: controller-manager
          readOnly: true
        - mountPath: /etc/kubernetes/cloud
          name: cloud-config
          readOnly: true
      volumes:
      - name: controller-manager
        secret:
          secretName: controller-manager
      - configMap:
          name: cloud-config
        name: cloud-config
status: {}
