apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  name: apiserver
  ownerReferences:
  - apiVersion: kubermatic.k8s.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: Cluster
    name: de-test-01
    uid: "1234567890"
spec:
  replicas: 1
  selector:
    matchLabels:
      role: apiserver
      version: v1
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        cloudconfigversion: "123456"
        release: v1.7.11
        role: apiserver
        tokencsvversion: "123456"
        version: v1
    spec:
      containers:
      - args:
        - -v=4
        - -logtostderr
        - -ssh-user=apiserver
        - -ssh-keyfile=/var/run/kubernetes/apiserver/id-rsa
        - -master=127.0.0.1:8080
        - -ssh-preferred-address-types=InternalIP
        command:
        - /client
        image: kubermatic/pod-network-bridge:v0.1
        imagePullPolicy: Always
        name: bridge-client
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/run/kubernetes/apiserver
          name: apiserver
          readOnly: true
      - command:
        - /hyperkube
        - apiserver
        - --advertise-address=35.198.93.90
        - --secure-port=30000
        - --kubernetes-service-node-port=30000
        - --insecure-bind-address=0.0.0.0
        - --insecure-port=8080
        - --etcd-servers=http://etcd-cluster-client:2379
        - --storage-backend=etcd3
        - --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,NodeRestriction
        - --authorization-mode=Node,RBAC
        - --external-hostname=jh8j81chn.europe-west3-c.dev.kubermatic.io
        - --token-auth-file=/var/run/kubernetes/token-users/tokens.csv
        - --experimental-bootstrap-token-auth=true
        - --service-account-key-file=/var/run/kubernetes/apiserver/service-account.key
        - --service-cluster-ip-range=10.10.10.0/24
        - --service-node-port-range=30000-32767
        - --allow-privileged
        - --tls-cert-file=/var/run/kubernetes/apiserver/apiserver.crt
        - --tls-private-key-file=/var/run/kubernetes/apiserver/apiserver.key
        - --client-ca-file=/var/run/kubernetes/apiserver/root-ca.crt
        - --kubelet-client-certificate=/var/run/kubernetes/apiserver/kubelet-client.crt
        - --kubelet-client-key=/var/run/kubernetes/apiserver/kubelet-client.key
        - --kubelet-preferred-address-types=InternalIP
        - --v=4
        image: kubermatic/hyperkube-amd64:v1.7.11
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 60
        name: apiserver
        ports:
        - containerPort: 30000
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 30
        resources: {}
        volumeMounts:
        - mountPath: /var/run/kubernetes/apiserver
          name: apiserver
          readOnly: true
        - mountPath: /var/run/kubernetes/token-users
          name: token-users
          readOnly: true
        - mountPath: /etc/kubernetes/cloud
          name: cloud-config
          readOnly: true
      volumes:
      - name: apiserver
        secret:
          defaultMode: 256
          secretName: apiserver
      - name: token-users
        secret:
          defaultMode: 256
          secretName: token-users
      - configMap:
          name: cloud-config
        name: cloud-config
status: {}
